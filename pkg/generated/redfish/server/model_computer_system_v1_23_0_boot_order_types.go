// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2024.3
 */

package server

import (
	"fmt"
)

// ComputerSystemV1230BootOrderTypes : The enumerations of `BootOrderTypes` specify the choice of boot order property to use when controller the persistent boot order for this computer system.
type ComputerSystemV1230BootOrderTypes string

// List of ComputerSystemV1230BootOrderTypes
const (
	COMPUTERSYSTEMV1230BOOTORDERTYPES_BOOT_ORDER       ComputerSystemV1230BootOrderTypes = "BootOrder"
	COMPUTERSYSTEMV1230BOOTORDERTYPES_ALIAS_BOOT_ORDER ComputerSystemV1230BootOrderTypes = "AliasBootOrder"
)

// AllowedComputerSystemV1230BootOrderTypesEnumValues is all the allowed values of ComputerSystemV1230BootOrderTypes enum
var AllowedComputerSystemV1230BootOrderTypesEnumValues = []ComputerSystemV1230BootOrderTypes{
	"BootOrder",
	"AliasBootOrder",
}

// validComputerSystemV1230BootOrderTypesEnumValue provides a map of ComputerSystemV1230BootOrderTypess for fast verification of use input
var validComputerSystemV1230BootOrderTypesEnumValues = map[ComputerSystemV1230BootOrderTypes]struct{}{
	"BootOrder":      {},
	"AliasBootOrder": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ComputerSystemV1230BootOrderTypes) IsValid() bool {
	_, ok := validComputerSystemV1230BootOrderTypesEnumValues[v]
	return ok
}

// NewComputerSystemV1230BootOrderTypesFromValue returns a pointer to a valid ComputerSystemV1230BootOrderTypes
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewComputerSystemV1230BootOrderTypesFromValue(v string) (ComputerSystemV1230BootOrderTypes, error) {
	ev := ComputerSystemV1230BootOrderTypes(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ComputerSystemV1230BootOrderTypes: valid values are %v", v, AllowedComputerSystemV1230BootOrderTypesEnumValues)
}

// AssertComputerSystemV1230BootOrderTypesRequired checks if the required fields are not zero-ed
func AssertComputerSystemV1230BootOrderTypesRequired(obj ComputerSystemV1230BootOrderTypes) error {
	return nil
}

// AssertComputerSystemV1230BootOrderTypesConstraints checks if the values respects the defined constraints
func AssertComputerSystemV1230BootOrderTypesConstraints(obj ComputerSystemV1230BootOrderTypes) error {
	return nil
}
