// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2024.3
 */

package server

import (
	"errors"
)

// ComputerSystemV1230HostSerialConsole - The information about the serial console services that this system provides.
type ComputerSystemV1230HostSerialConsole struct {
	IPMI ComputerSystemV1230SerialConsoleProtocol `json:"IPMI,omitempty"`

	// The maximum number of service sessions, regardless of protocol, that this system can support.
	MaxConcurrentSessions int64 `json:"MaxConcurrentSessions,omitempty"`

	SSH ComputerSystemV1230SerialConsoleProtocol `json:"SSH,omitempty"`

	Telnet ComputerSystemV1230SerialConsoleProtocol `json:"Telnet,omitempty"`
}

// AssertComputerSystemV1230HostSerialConsoleRequired checks if the required fields are not zero-ed
func AssertComputerSystemV1230HostSerialConsoleRequired(obj ComputerSystemV1230HostSerialConsole) error {
	if err := AssertComputerSystemV1230SerialConsoleProtocolRequired(obj.IPMI); err != nil {
		return err
	}
	if err := AssertComputerSystemV1230SerialConsoleProtocolRequired(obj.SSH); err != nil {
		return err
	}
	if err := AssertComputerSystemV1230SerialConsoleProtocolRequired(obj.Telnet); err != nil {
		return err
	}
	return nil
}

// AssertComputerSystemV1230HostSerialConsoleConstraints checks if the values respects the defined constraints
func AssertComputerSystemV1230HostSerialConsoleConstraints(obj ComputerSystemV1230HostSerialConsole) error {
	if err := AssertComputerSystemV1230SerialConsoleProtocolConstraints(obj.IPMI); err != nil {
		return err
	}
	if obj.MaxConcurrentSessions < 0 {
		return &ParsingError{Param: "MaxConcurrentSessions", Err: errors.New(errMsgMinValueConstraint)}
	}
	if err := AssertComputerSystemV1230SerialConsoleProtocolConstraints(obj.SSH); err != nil {
		return err
	}
	if err := AssertComputerSystemV1230SerialConsoleProtocolConstraints(obj.Telnet); err != nil {
		return err
	}
	return nil
}
