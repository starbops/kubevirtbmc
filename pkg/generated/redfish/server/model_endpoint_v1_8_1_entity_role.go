// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type EndpointV181EntityRole string

// List of EndpointV181EntityRole
const (
	ENDPOINTV181ENTITYROLE_INITIATOR EndpointV181EntityRole = "Initiator"
	ENDPOINTV181ENTITYROLE_TARGET    EndpointV181EntityRole = "Target"
	ENDPOINTV181ENTITYROLE_BOTH      EndpointV181EntityRole = "Both"
)

// AllowedEndpointV181EntityRoleEnumValues is all the allowed values of EndpointV181EntityRole enum
var AllowedEndpointV181EntityRoleEnumValues = []EndpointV181EntityRole{
	"Initiator",
	"Target",
	"Both",
}

// validEndpointV181EntityRoleEnumValue provides a map of EndpointV181EntityRoles for fast verification of use input
var validEndpointV181EntityRoleEnumValues = map[EndpointV181EntityRole]struct{}{
	"Initiator": {},
	"Target":    {},
	"Both":      {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EndpointV181EntityRole) IsValid() bool {
	_, ok := validEndpointV181EntityRoleEnumValues[v]
	return ok
}

// NewEndpointV181EntityRoleFromValue returns a pointer to a valid EndpointV181EntityRole
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEndpointV181EntityRoleFromValue(v string) (EndpointV181EntityRole, error) {
	ev := EndpointV181EntityRole(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for EndpointV181EntityRole: valid values are %v", v, AllowedEndpointV181EntityRoleEnumValues)
}

// AssertEndpointV181EntityRoleRequired checks if the required fields are not zero-ed
func AssertEndpointV181EntityRoleRequired(obj EndpointV181EntityRole) error {
	return nil
}

// AssertEndpointV181EntityRoleConstraints checks if the values respects the defined constraints
func AssertEndpointV181EntityRoleConstraints(obj EndpointV181EntityRole) error {
	return nil
}
