// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

// PowerSupplyV153Links - The links to other resources that are related to this resource.
type PowerSupplyV153Links struct {

	// The OEM extension.
	Oem map[string]interface{} `json:"Oem,omitempty"`

	Outlet OdataV4IdRef `json:"Outlet,omitempty"`

	// An array of links to the outlets that provide power to this power supply.
	PowerOutlets []OdataV4IdRef `json:"PowerOutlets,omitempty"`

	// The number of items in a collection.
	PowerOutletsodataCount int64 `json:"PowerOutlets@odata.count,omitempty"`

	// An array of links to the chassis that are directly powered by this power supply.
	PoweringChassis []OdataV4IdRef `json:"PoweringChassis,omitempty"`

	// The number of items in a collection.
	PoweringChassisodataCount int64 `json:"PoweringChassis@odata.count,omitempty"`
}

// AssertPowerSupplyV153LinksRequired checks if the required fields are not zero-ed
func AssertPowerSupplyV153LinksRequired(obj PowerSupplyV153Links) error {
	if err := AssertOdataV4IdRefRequired(obj.Outlet); err != nil {
		return err
	}
	for _, el := range obj.PowerOutlets {
		if err := AssertOdataV4IdRefRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.PoweringChassis {
		if err := AssertOdataV4IdRefRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertPowerSupplyV153LinksConstraints checks if the values respects the defined constraints
func AssertPowerSupplyV153LinksConstraints(obj PowerSupplyV153Links) error {
	if err := AssertOdataV4IdRefConstraints(obj.Outlet); err != nil {
		return err
	}
	for _, el := range obj.PowerOutlets {
		if err := AssertOdataV4IdRefConstraints(el); err != nil {
			return err
		}
	}
	for _, el := range obj.PoweringChassis {
		if err := AssertOdataV4IdRefConstraints(el); err != nil {
			return err
		}
	}
	return nil
}
