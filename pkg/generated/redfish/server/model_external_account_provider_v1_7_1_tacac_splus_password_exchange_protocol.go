// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type ExternalAccountProviderV171TacacSplusPasswordExchangeProtocol string

// List of ExternalAccountProviderV171TacacSplusPasswordExchangeProtocol
const (
	EXTERNALACCOUNTPROVIDERV171TACACSPLUSPASSWORDEXCHANGEPROTOCOL_ASCII    ExternalAccountProviderV171TacacSplusPasswordExchangeProtocol = "ASCII"
	EXTERNALACCOUNTPROVIDERV171TACACSPLUSPASSWORDEXCHANGEPROTOCOL_PAP      ExternalAccountProviderV171TacacSplusPasswordExchangeProtocol = "PAP"
	EXTERNALACCOUNTPROVIDERV171TACACSPLUSPASSWORDEXCHANGEPROTOCOL_CHAP     ExternalAccountProviderV171TacacSplusPasswordExchangeProtocol = "CHAP"
	EXTERNALACCOUNTPROVIDERV171TACACSPLUSPASSWORDEXCHANGEPROTOCOL_MSCHAPV1 ExternalAccountProviderV171TacacSplusPasswordExchangeProtocol = "MSCHAPv1"
	EXTERNALACCOUNTPROVIDERV171TACACSPLUSPASSWORDEXCHANGEPROTOCOL_MSCHAPV2 ExternalAccountProviderV171TacacSplusPasswordExchangeProtocol = "MSCHAPv2"
)

// AllowedExternalAccountProviderV171TacacSplusPasswordExchangeProtocolEnumValues is all the allowed values of ExternalAccountProviderV171TacacSplusPasswordExchangeProtocol enum
var AllowedExternalAccountProviderV171TacacSplusPasswordExchangeProtocolEnumValues = []ExternalAccountProviderV171TacacSplusPasswordExchangeProtocol{
	"ASCII",
	"PAP",
	"CHAP",
	"MSCHAPv1",
	"MSCHAPv2",
}

// validExternalAccountProviderV171TacacSplusPasswordExchangeProtocolEnumValue provides a map of ExternalAccountProviderV171TacacSplusPasswordExchangeProtocols for fast verification of use input
var validExternalAccountProviderV171TacacSplusPasswordExchangeProtocolEnumValues = map[ExternalAccountProviderV171TacacSplusPasswordExchangeProtocol]struct{}{
	"ASCII":    {},
	"PAP":      {},
	"CHAP":     {},
	"MSCHAPv1": {},
	"MSCHAPv2": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ExternalAccountProviderV171TacacSplusPasswordExchangeProtocol) IsValid() bool {
	_, ok := validExternalAccountProviderV171TacacSplusPasswordExchangeProtocolEnumValues[v]
	return ok
}

// NewExternalAccountProviderV171TacacSplusPasswordExchangeProtocolFromValue returns a pointer to a valid ExternalAccountProviderV171TacacSplusPasswordExchangeProtocol
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewExternalAccountProviderV171TacacSplusPasswordExchangeProtocolFromValue(v string) (ExternalAccountProviderV171TacacSplusPasswordExchangeProtocol, error) {
	ev := ExternalAccountProviderV171TacacSplusPasswordExchangeProtocol(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ExternalAccountProviderV171TacacSplusPasswordExchangeProtocol: valid values are %v", v, AllowedExternalAccountProviderV171TacacSplusPasswordExchangeProtocolEnumValues)
}

// AssertExternalAccountProviderV171TacacSplusPasswordExchangeProtocolRequired checks if the required fields are not zero-ed
func AssertExternalAccountProviderV171TacacSplusPasswordExchangeProtocolRequired(obj ExternalAccountProviderV171TacacSplusPasswordExchangeProtocol) error {
	return nil
}

// AssertExternalAccountProviderV171TacacSplusPasswordExchangeProtocolConstraints checks if the values respects the defined constraints
func AssertExternalAccountProviderV171TacacSplusPasswordExchangeProtocolConstraints(obj ExternalAccountProviderV171TacacSplusPasswordExchangeProtocol) error {
	return nil
}
