// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

// PortV1110Cxl - CXL properties for a port.
type PortV1110Cxl struct {
	Congestion PortV1110Congestion `json:"Congestion,omitempty"`

	ConnectedDeviceMode PortV1110ConnectedDeviceMode `json:"ConnectedDeviceMode,omitempty"`

	ConnectedDeviceType PortV1110ConnectedDeviceType `json:"ConnectedDeviceType,omitempty"`

	CurrentPortConfigurationState PortV1110CurrentPortConfigurationState `json:"CurrentPortConfigurationState,omitempty"`

	// The maximum number of logical devices supported.
	MaxLogicalDeviceCount *int64 `json:"MaxLogicalDeviceCount,omitempty"`

	QoSTelemetryCapabilities PortV1110QoSTelemetryCapabilities `json:"QoSTelemetryCapabilities,omitempty"`

	// The supported device modes.
	SupportedCXLModes []PortV1110ConnectedDeviceMode `json:"SupportedCXLModes,omitempty"`

	// Indicates whether temporary throughput reduction is enabled.
	TemporaryThroughputReductionEnabled *bool `json:"TemporaryThroughputReductionEnabled,omitempty"`
}

// AssertPortV1110CxlRequired checks if the required fields are not zero-ed
func AssertPortV1110CxlRequired(obj PortV1110Cxl) error {
	if err := AssertPortV1110CongestionRequired(obj.Congestion); err != nil {
		return err
	}
	if err := AssertPortV1110QoSTelemetryCapabilitiesRequired(obj.QoSTelemetryCapabilities); err != nil {
		return err
	}
	return nil
}

// AssertPortV1110CxlConstraints checks if the values respects the defined constraints
func AssertPortV1110CxlConstraints(obj PortV1110Cxl) error {
	if err := AssertPortV1110CongestionConstraints(obj.Congestion); err != nil {
		return err
	}
	if err := AssertPortV1110QoSTelemetryCapabilitiesConstraints(obj.QoSTelemetryCapabilities); err != nil {
		return err
	}
	return nil
}
