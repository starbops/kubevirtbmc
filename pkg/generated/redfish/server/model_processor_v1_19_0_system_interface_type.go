// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type ProcessorV1190SystemInterfaceType string

// List of ProcessorV1190SystemInterfaceType
const (
	PROCESSORV1190SYSTEMINTERFACETYPE_QPI      ProcessorV1190SystemInterfaceType = "QPI"
	PROCESSORV1190SYSTEMINTERFACETYPE_UPI      ProcessorV1190SystemInterfaceType = "UPI"
	PROCESSORV1190SYSTEMINTERFACETYPE_PCIE     ProcessorV1190SystemInterfaceType = "PCIe"
	PROCESSORV1190SYSTEMINTERFACETYPE_ETHERNET ProcessorV1190SystemInterfaceType = "Ethernet"
	PROCESSORV1190SYSTEMINTERFACETYPE_AMBA     ProcessorV1190SystemInterfaceType = "AMBA"
	PROCESSORV1190SYSTEMINTERFACETYPE_CCIX     ProcessorV1190SystemInterfaceType = "CCIX"
	PROCESSORV1190SYSTEMINTERFACETYPE_CXL      ProcessorV1190SystemInterfaceType = "CXL"
	PROCESSORV1190SYSTEMINTERFACETYPE_OEM      ProcessorV1190SystemInterfaceType = "OEM"
)

// AllowedProcessorV1190SystemInterfaceTypeEnumValues is all the allowed values of ProcessorV1190SystemInterfaceType enum
var AllowedProcessorV1190SystemInterfaceTypeEnumValues = []ProcessorV1190SystemInterfaceType{
	"QPI",
	"UPI",
	"PCIe",
	"Ethernet",
	"AMBA",
	"CCIX",
	"CXL",
	"OEM",
}

// validProcessorV1190SystemInterfaceTypeEnumValue provides a map of ProcessorV1190SystemInterfaceTypes for fast verification of use input
var validProcessorV1190SystemInterfaceTypeEnumValues = map[ProcessorV1190SystemInterfaceType]struct{}{
	"QPI":      {},
	"UPI":      {},
	"PCIe":     {},
	"Ethernet": {},
	"AMBA":     {},
	"CCIX":     {},
	"CXL":      {},
	"OEM":      {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ProcessorV1190SystemInterfaceType) IsValid() bool {
	_, ok := validProcessorV1190SystemInterfaceTypeEnumValues[v]
	return ok
}

// NewProcessorV1190SystemInterfaceTypeFromValue returns a pointer to a valid ProcessorV1190SystemInterfaceType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewProcessorV1190SystemInterfaceTypeFromValue(v string) (ProcessorV1190SystemInterfaceType, error) {
	ev := ProcessorV1190SystemInterfaceType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ProcessorV1190SystemInterfaceType: valid values are %v", v, AllowedProcessorV1190SystemInterfaceTypeEnumValues)
}

// AssertProcessorV1190SystemInterfaceTypeRequired checks if the required fields are not zero-ed
func AssertProcessorV1190SystemInterfaceTypeRequired(obj ProcessorV1190SystemInterfaceType) error {
	return nil
}

// AssertProcessorV1190SystemInterfaceTypeConstraints checks if the values respects the defined constraints
func AssertProcessorV1190SystemInterfaceTypeConstraints(obj ProcessorV1190SystemInterfaceType) error {
	return nil
}
