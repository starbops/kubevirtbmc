// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type ComputerSystemV1220BootSourceOverrideEnabled string

// List of ComputerSystemV1220BootSourceOverrideEnabled
const (
	COMPUTERSYSTEMV1220BOOTSOURCEOVERRIDEENABLED_DISABLED   ComputerSystemV1220BootSourceOverrideEnabled = "Disabled"
	COMPUTERSYSTEMV1220BOOTSOURCEOVERRIDEENABLED_ONCE       ComputerSystemV1220BootSourceOverrideEnabled = "Once"
	COMPUTERSYSTEMV1220BOOTSOURCEOVERRIDEENABLED_CONTINUOUS ComputerSystemV1220BootSourceOverrideEnabled = "Continuous"
)

// AllowedComputerSystemV1220BootSourceOverrideEnabledEnumValues is all the allowed values of ComputerSystemV1220BootSourceOverrideEnabled enum
var AllowedComputerSystemV1220BootSourceOverrideEnabledEnumValues = []ComputerSystemV1220BootSourceOverrideEnabled{
	"Disabled",
	"Once",
	"Continuous",
}

// validComputerSystemV1220BootSourceOverrideEnabledEnumValue provides a map of ComputerSystemV1220BootSourceOverrideEnableds for fast verification of use input
var validComputerSystemV1220BootSourceOverrideEnabledEnumValues = map[ComputerSystemV1220BootSourceOverrideEnabled]struct{}{
	"Disabled":   {},
	"Once":       {},
	"Continuous": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ComputerSystemV1220BootSourceOverrideEnabled) IsValid() bool {
	_, ok := validComputerSystemV1220BootSourceOverrideEnabledEnumValues[v]
	return ok
}

// NewComputerSystemV1220BootSourceOverrideEnabledFromValue returns a pointer to a valid ComputerSystemV1220BootSourceOverrideEnabled
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewComputerSystemV1220BootSourceOverrideEnabledFromValue(v string) (ComputerSystemV1220BootSourceOverrideEnabled, error) {
	ev := ComputerSystemV1220BootSourceOverrideEnabled(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ComputerSystemV1220BootSourceOverrideEnabled: valid values are %v", v, AllowedComputerSystemV1220BootSourceOverrideEnabledEnumValues)
}

// AssertComputerSystemV1220BootSourceOverrideEnabledRequired checks if the required fields are not zero-ed
func AssertComputerSystemV1220BootSourceOverrideEnabledRequired(obj ComputerSystemV1220BootSourceOverrideEnabled) error {
	return nil
}

// AssertComputerSystemV1220BootSourceOverrideEnabledConstraints checks if the values respects the defined constraints
func AssertComputerSystemV1220BootSourceOverrideEnabledConstraints(obj ComputerSystemV1220BootSourceOverrideEnabled) error {
	return nil
}
