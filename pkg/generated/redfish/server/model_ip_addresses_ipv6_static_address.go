// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2024.3
 */

package server

import (
	"errors"
)

// IpAddressesIpv6StaticAddress - This type represents a single IPv6 static address to be assigned on a network interface.
type IpAddressesIpv6StaticAddress struct {

	// A valid IPv6 address.
	Address *string `json:"Address"`

	// The OEM extension.
	Oem map[string]interface{} `json:"Oem,omitempty"`

	PrefixLength int64 `json:"PrefixLength"`
}

// AssertIpAddressesIpv6StaticAddressRequired checks if the required fields are not zero-ed
func AssertIpAddressesIpv6StaticAddressRequired(obj IpAddressesIpv6StaticAddress) error {
	elements := map[string]interface{}{
		"Address":      obj.Address,
		"PrefixLength": obj.PrefixLength,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertIpAddressesIpv6StaticAddressConstraints checks if the values respects the defined constraints
func AssertIpAddressesIpv6StaticAddressConstraints(obj IpAddressesIpv6StaticAddress) error {
	if obj.PrefixLength < 0 {
		return &ParsingError{Param: "PrefixLength", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.PrefixLength > 128 {
		return &ParsingError{Param: "PrefixLength", Err: errors.New(errMsgMaxValueConstraint)}
	}
	return nil
}
