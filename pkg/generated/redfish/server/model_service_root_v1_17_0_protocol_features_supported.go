// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2024.3
 */

package server

// ServiceRootV1170ProtocolFeaturesSupported - The information about protocol features that the service supports.
type ServiceRootV1170ProtocolFeaturesSupported struct {
	DeepOperations ServiceRootV1170DeepOperations `json:"DeepOperations,omitempty"`

	// An indication of whether the service supports the `excerpt` query parameter.
	ExcerptQuery bool `json:"ExcerptQuery,omitempty"`

	ExpandQuery ServiceRootV1170Expand `json:"ExpandQuery,omitempty"`

	// An indication of whether the service supports the `$filter` query parameter.
	FilterQuery bool `json:"FilterQuery,omitempty"`

	// An indication of whether the service supports the `eq`, `ge`, `gt`, `le`, `lt`, and `ne` options for the `$filter` query parameter.
	FilterQueryComparisonOperations bool `json:"FilterQueryComparisonOperations,omitempty"`

	// An indication of whether the service supports the `()`, `and`, `not`, and `or` options for the `$filter` query parameter.
	FilterQueryCompoundOperations bool `json:"FilterQueryCompoundOperations,omitempty"`

	// An indication of whether the service supports multiple outstanding HTTP requests.
	MultipleHTTPRequests bool `json:"MultipleHTTPRequests,omitempty"`

	// An indication of whether the service supports the `only` query parameter.
	OnlyMemberQuery bool `json:"OnlyMemberQuery,omitempty"`

	// An indication of whether the service supports the `$select` query parameter.
	SelectQuery bool `json:"SelectQuery,omitempty"`

	// An indication of whether the service supports both the `$top` and `$skip` query parameters.
	TopSkipQuery bool `json:"TopSkipQuery,omitempty"`
}

// AssertServiceRootV1170ProtocolFeaturesSupportedRequired checks if the required fields are not zero-ed
func AssertServiceRootV1170ProtocolFeaturesSupportedRequired(obj ServiceRootV1170ProtocolFeaturesSupported) error {
	if err := AssertServiceRootV1170DeepOperationsRequired(obj.DeepOperations); err != nil {
		return err
	}
	if err := AssertServiceRootV1170ExpandRequired(obj.ExpandQuery); err != nil {
		return err
	}
	return nil
}

// AssertServiceRootV1170ProtocolFeaturesSupportedConstraints checks if the values respects the defined constraints
func AssertServiceRootV1170ProtocolFeaturesSupportedConstraints(obj ServiceRootV1170ProtocolFeaturesSupported) error {
	if err := AssertServiceRootV1170DeepOperationsConstraints(obj.DeepOperations); err != nil {
		return err
	}
	if err := AssertServiceRootV1170ExpandConstraints(obj.ExpandQuery); err != nil {
		return err
	}
	return nil
}
