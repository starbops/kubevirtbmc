// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

// MessageRegistryFileV114MessageRegistryFile - The MessageRegistryFile schema describes the registry file locator resource.  This referenced registry file can be any type of registry, such as a message registry, privilege registry, or attribute registry.
type MessageRegistryFileV114MessageRegistryFile struct {

	// The OData description of a payload.
	OdataContext string `json:"@odata.context,omitempty"`

	// The current ETag of the resource.
	OdataEtag string `json:"@odata.etag,omitempty"`

	// The unique identifier for a resource.
	OdataId string `json:"@odata.id"`

	// The type of a resource.
	OdataType string `json:"@odata.type"`

	Actions MessageRegistryFileV114Actions `json:"Actions,omitempty"`

	// The description of this resource.  Used for commonality in the schema definitions.
	Description string `json:"Description,omitempty"`

	// The unique identifier for this resource within the collection of similar resources.
	Id string `json:"Id"`

	// The RFC5646-conformant language codes for the available registries.
	Languages []string `json:"Languages"`

	// The location information for this registry file.
	Location []MessageRegistryFileV114Location `json:"Location"`

	// The name of the resource or array member.
	Name string `json:"Name"`

	// The OEM extension.
	Oem map[string]interface{} `json:"Oem,omitempty"`

	// The registry name and its major and minor versions.  This registry can be any type of registry, such as a message registry, privilege registry, or attribute rgistry.
	Registry string `json:"Registry"`
}

// AssertMessageRegistryFileV114MessageRegistryFileRequired checks if the required fields are not zero-ed
func AssertMessageRegistryFileV114MessageRegistryFileRequired(obj MessageRegistryFileV114MessageRegistryFile) error {
	elements := map[string]interface{}{
		"@odata.id":   obj.OdataId,
		"@odata.type": obj.OdataType,
		"Id":          obj.Id,
		"Languages":   obj.Languages,
		"Location":    obj.Location,
		"Name":        obj.Name,
		"Registry":    obj.Registry,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertMessageRegistryFileV114ActionsRequired(obj.Actions); err != nil {
		return err
	}
	for _, el := range obj.Location {
		if err := AssertMessageRegistryFileV114LocationRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertMessageRegistryFileV114MessageRegistryFileConstraints checks if the values respects the defined constraints
func AssertMessageRegistryFileV114MessageRegistryFileConstraints(obj MessageRegistryFileV114MessageRegistryFile) error {
	if err := AssertMessageRegistryFileV114ActionsConstraints(obj.Actions); err != nil {
		return err
	}
	for _, el := range obj.Location {
		if err := AssertMessageRegistryFileV114LocationConstraints(el); err != nil {
			return err
		}
	}
	return nil
}
