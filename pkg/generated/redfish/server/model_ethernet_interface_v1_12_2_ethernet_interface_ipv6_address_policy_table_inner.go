// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2024.3
 */

package server

import (
	"errors"
)

type EthernetInterfaceV1122EthernetInterfaceIpv6AddressPolicyTableInner struct {

	// The IPv6 label, as defined in RFC6724, section 2.1.
	Label *int64 `json:"Label,omitempty"`

	// The IPv6 precedence, as defined in RFC6724, section 2.1.
	Precedence *int64 `json:"Precedence,omitempty"`

	// The IPv6 address prefix, as defined in RFC6724, section 2.1.
	Prefix *string `json:"Prefix,omitempty"`
}

// AssertEthernetInterfaceV1122EthernetInterfaceIpv6AddressPolicyTableInnerRequired checks if the required fields are not zero-ed
func AssertEthernetInterfaceV1122EthernetInterfaceIpv6AddressPolicyTableInnerRequired(obj EthernetInterfaceV1122EthernetInterfaceIpv6AddressPolicyTableInner) error {
	return nil
}

// AssertEthernetInterfaceV1122EthernetInterfaceIpv6AddressPolicyTableInnerConstraints checks if the values respects the defined constraints
func AssertEthernetInterfaceV1122EthernetInterfaceIpv6AddressPolicyTableInnerConstraints(obj EthernetInterfaceV1122EthernetInterfaceIpv6AddressPolicyTableInner) error {
	if obj.Label != nil && *obj.Label < 0 {
		return &ParsingError{Param: "Label", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.Label != nil && *obj.Label > 100 {
		return &ParsingError{Param: "Label", Err: errors.New(errMsgMaxValueConstraint)}
	}
	if obj.Precedence != nil && *obj.Precedence < 1 {
		return &ParsingError{Param: "Precedence", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.Precedence != nil && *obj.Precedence > 100 {
		return &ParsingError{Param: "Precedence", Err: errors.New(errMsgMaxValueConstraint)}
	}
	return nil
}
