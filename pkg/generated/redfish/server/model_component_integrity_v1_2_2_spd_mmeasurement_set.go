// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

// ComponentIntegrityV122SpdMmeasurementSet - SPDM Responder measurement information.
type ComponentIntegrityV122SpdMmeasurementSet struct {
	MeasurementSpecification ComponentIntegrityV122MeasurementSpecification `json:"MeasurementSpecification,omitempty"`

	// The measurement summary data.
	MeasurementSummary *string `json:"MeasurementSummary,omitempty" validate:"regexp=^[A-Za-z0-9+\\/]+={0,2}$"`

	// The hash algorithm used to compute the measurement summary.
	MeasurementSummaryHashAlgorithm *string `json:"MeasurementSummaryHashAlgorithm,omitempty"`

	MeasurementSummaryType ComponentIntegrityV122SpdMmeasurementSummaryType `json:"MeasurementSummaryType,omitempty"`

	// Measurements from an SPDM Responder.
	Measurements []ComponentIntegrityV122SpdMsingleMeasurement `json:"Measurements,omitempty"`

	// The OEM extension.
	Oem map[string]interface{} `json:"Oem,omitempty"`
}

// AssertComponentIntegrityV122SpdMmeasurementSetRequired checks if the required fields are not zero-ed
func AssertComponentIntegrityV122SpdMmeasurementSetRequired(obj ComponentIntegrityV122SpdMmeasurementSet) error {
	for _, el := range obj.Measurements {
		if err := AssertComponentIntegrityV122SpdMsingleMeasurementRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertComponentIntegrityV122SpdMmeasurementSetConstraints checks if the values respects the defined constraints
func AssertComponentIntegrityV122SpdMmeasurementSetConstraints(obj ComponentIntegrityV122SpdMmeasurementSet) error {
	for _, el := range obj.Measurements {
		if err := AssertComponentIntegrityV122SpdMsingleMeasurementConstraints(el); err != nil {
			return err
		}
	}
	return nil
}
