// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

// AccountServiceV1150SecurId - Various settings for RSA SecurID multi-factor authentication.
type AccountServiceV1150SecurId struct {
	Certificates OdataV4IdRef `json:"Certificates,omitempty"`

	// The client ID to use when communicating with the RSA SecurID server.
	ClientId *string `json:"ClientId,omitempty"`

	// The client secret to use when communicating with the RSA SecurID server.  This property is `null` in responses.
	ClientSecret *string `json:"ClientSecret,omitempty"`

	// Indicates if the ClientSecret property is set.
	ClientSecretSet bool `json:"ClientSecretSet,omitempty"`

	// An indication of whether multi-factor authentication with RSA SecurID is enabled.
	Enabled *bool `json:"Enabled,omitempty"`

	// The URI of the RSA SecurID server.
	ServerURI *string `json:"ServerURI,omitempty"`
}

// AssertAccountServiceV1150SecurIdRequired checks if the required fields are not zero-ed
func AssertAccountServiceV1150SecurIdRequired(obj AccountServiceV1150SecurId) error {
	if err := AssertOdataV4IdRefRequired(obj.Certificates); err != nil {
		return err
	}
	return nil
}

// AssertAccountServiceV1150SecurIdConstraints checks if the values respects the defined constraints
func AssertAccountServiceV1150SecurIdConstraints(obj AccountServiceV1150SecurId) error {
	if err := AssertOdataV4IdRefConstraints(obj.Certificates); err != nil {
		return err
	}
	return nil
}
