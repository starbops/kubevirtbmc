// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type VirtualMediaV163TransferProtocolType string

// List of VirtualMediaV163TransferProtocolType
const (
	VIRTUALMEDIAV163TRANSFERPROTOCOLTYPE_CIFS  VirtualMediaV163TransferProtocolType = "CIFS"
	VIRTUALMEDIAV163TRANSFERPROTOCOLTYPE_FTP   VirtualMediaV163TransferProtocolType = "FTP"
	VIRTUALMEDIAV163TRANSFERPROTOCOLTYPE_SFTP  VirtualMediaV163TransferProtocolType = "SFTP"
	VIRTUALMEDIAV163TRANSFERPROTOCOLTYPE_HTTP  VirtualMediaV163TransferProtocolType = "HTTP"
	VIRTUALMEDIAV163TRANSFERPROTOCOLTYPE_HTTPS VirtualMediaV163TransferProtocolType = "HTTPS"
	VIRTUALMEDIAV163TRANSFERPROTOCOLTYPE_NFS   VirtualMediaV163TransferProtocolType = "NFS"
	VIRTUALMEDIAV163TRANSFERPROTOCOLTYPE_SCP   VirtualMediaV163TransferProtocolType = "SCP"
	VIRTUALMEDIAV163TRANSFERPROTOCOLTYPE_TFTP  VirtualMediaV163TransferProtocolType = "TFTP"
	VIRTUALMEDIAV163TRANSFERPROTOCOLTYPE_OEM   VirtualMediaV163TransferProtocolType = "OEM"
)

// AllowedVirtualMediaV163TransferProtocolTypeEnumValues is all the allowed values of VirtualMediaV163TransferProtocolType enum
var AllowedVirtualMediaV163TransferProtocolTypeEnumValues = []VirtualMediaV163TransferProtocolType{
	"CIFS",
	"FTP",
	"SFTP",
	"HTTP",
	"HTTPS",
	"NFS",
	"SCP",
	"TFTP",
	"OEM",
}

// validVirtualMediaV163TransferProtocolTypeEnumValue provides a map of VirtualMediaV163TransferProtocolTypes for fast verification of use input
var validVirtualMediaV163TransferProtocolTypeEnumValues = map[VirtualMediaV163TransferProtocolType]struct{}{
	"CIFS":  {},
	"FTP":   {},
	"SFTP":  {},
	"HTTP":  {},
	"HTTPS": {},
	"NFS":   {},
	"SCP":   {},
	"TFTP":  {},
	"OEM":   {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v VirtualMediaV163TransferProtocolType) IsValid() bool {
	_, ok := validVirtualMediaV163TransferProtocolTypeEnumValues[v]
	return ok
}

// NewVirtualMediaV163TransferProtocolTypeFromValue returns a pointer to a valid VirtualMediaV163TransferProtocolType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewVirtualMediaV163TransferProtocolTypeFromValue(v string) (VirtualMediaV163TransferProtocolType, error) {
	ev := VirtualMediaV163TransferProtocolType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for VirtualMediaV163TransferProtocolType: valid values are %v", v, AllowedVirtualMediaV163TransferProtocolTypeEnumValues)
}

// AssertVirtualMediaV163TransferProtocolTypeRequired checks if the required fields are not zero-ed
func AssertVirtualMediaV163TransferProtocolTypeRequired(obj VirtualMediaV163TransferProtocolType) error {
	return nil
}

// AssertVirtualMediaV163TransferProtocolTypeConstraints checks if the values respects the defined constraints
func AssertVirtualMediaV163TransferProtocolTypeConstraints(obj VirtualMediaV163TransferProtocolType) error {
	return nil
}
