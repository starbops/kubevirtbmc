// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2024.3
 */

package server

// VirtualMediaV164InsertMediaRequestBody - This action attaches remote media to virtual media.
type VirtualMediaV164InsertMediaRequestBody struct {

	// The URI of the media to attach to the virtual media.
	Image string `json:"Image"`

	// An indication of whether the image is treated as inserted upon completion of the action.  The default is `true`.
	Inserted bool `json:"Inserted,omitempty"`

	// The password to access the URI specified by the `Image` parameter.
	Password string `json:"Password,omitempty"`

	TransferMethod VirtualMediaV164TransferMethod `json:"TransferMethod,omitempty"`

	TransferProtocolType VirtualMediaV164TransferProtocolType `json:"TransferProtocolType,omitempty"`

	// The username to access the URI specified by the `Image` parameter.
	UserName string `json:"UserName,omitempty"`

	// An indication of whether the remote media is treated as write-protected.  The default is `true`.
	WriteProtected bool `json:"WriteProtected,omitempty"`
}

// AssertVirtualMediaV164InsertMediaRequestBodyRequired checks if the required fields are not zero-ed
func AssertVirtualMediaV164InsertMediaRequestBodyRequired(obj VirtualMediaV164InsertMediaRequestBody) error {
	elements := map[string]interface{}{
		"Image": obj.Image,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertVirtualMediaV164InsertMediaRequestBodyConstraints checks if the values respects the defined constraints
func AssertVirtualMediaV164InsertMediaRequestBodyConstraints(obj VirtualMediaV164InsertMediaRequestBody) error {
	return nil
}
