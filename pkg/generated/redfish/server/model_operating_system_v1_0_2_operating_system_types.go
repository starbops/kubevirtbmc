// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2024.3
 */

package server

import (
	"fmt"
)

type OperatingSystemV102OperatingSystemTypes string

// List of OperatingSystemV102OperatingSystemTypes
const (
	OPERATINGSYSTEMV102OPERATINGSYSTEMTYPES_LINUX      OperatingSystemV102OperatingSystemTypes = "Linux"
	OPERATINGSYSTEMV102OPERATINGSYSTEMTYPES_WINDOWS    OperatingSystemV102OperatingSystemTypes = "Windows"
	OPERATINGSYSTEMV102OPERATINGSYSTEMTYPES_SOLARIS    OperatingSystemV102OperatingSystemTypes = "Solaris"
	OPERATINGSYSTEMV102OPERATINGSYSTEMTYPES_HPUX       OperatingSystemV102OperatingSystemTypes = "HPUX"
	OPERATINGSYSTEMV102OPERATINGSYSTEMTYPES_AIX        OperatingSystemV102OperatingSystemTypes = "AIX"
	OPERATINGSYSTEMV102OPERATINGSYSTEMTYPES_BSD        OperatingSystemV102OperatingSystemTypes = "BSD"
	OPERATINGSYSTEMV102OPERATINGSYSTEMTYPES_MAC_OS     OperatingSystemV102OperatingSystemTypes = "macOS"
	OPERATINGSYSTEMV102OPERATINGSYSTEMTYPES_IBMI       OperatingSystemV102OperatingSystemTypes = "IBMi"
	OPERATINGSYSTEMV102OPERATINGSYSTEMTYPES_HYPERVISOR OperatingSystemV102OperatingSystemTypes = "Hypervisor"
)

// AllowedOperatingSystemV102OperatingSystemTypesEnumValues is all the allowed values of OperatingSystemV102OperatingSystemTypes enum
var AllowedOperatingSystemV102OperatingSystemTypesEnumValues = []OperatingSystemV102OperatingSystemTypes{
	"Linux",
	"Windows",
	"Solaris",
	"HPUX",
	"AIX",
	"BSD",
	"macOS",
	"IBMi",
	"Hypervisor",
}

// validOperatingSystemV102OperatingSystemTypesEnumValue provides a map of OperatingSystemV102OperatingSystemTypess for fast verification of use input
var validOperatingSystemV102OperatingSystemTypesEnumValues = map[OperatingSystemV102OperatingSystemTypes]struct{}{
	"Linux":      {},
	"Windows":    {},
	"Solaris":    {},
	"HPUX":       {},
	"AIX":        {},
	"BSD":        {},
	"macOS":      {},
	"IBMi":       {},
	"Hypervisor": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OperatingSystemV102OperatingSystemTypes) IsValid() bool {
	_, ok := validOperatingSystemV102OperatingSystemTypesEnumValues[v]
	return ok
}

// NewOperatingSystemV102OperatingSystemTypesFromValue returns a pointer to a valid OperatingSystemV102OperatingSystemTypes
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOperatingSystemV102OperatingSystemTypesFromValue(v string) (OperatingSystemV102OperatingSystemTypes, error) {
	ev := OperatingSystemV102OperatingSystemTypes(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for OperatingSystemV102OperatingSystemTypes: valid values are %v", v, AllowedOperatingSystemV102OperatingSystemTypesEnumValues)
}

// AssertOperatingSystemV102OperatingSystemTypesRequired checks if the required fields are not zero-ed
func AssertOperatingSystemV102OperatingSystemTypesRequired(obj OperatingSystemV102OperatingSystemTypes) error {
	return nil
}

// AssertOperatingSystemV102OperatingSystemTypesConstraints checks if the values respects the defined constraints
func AssertOperatingSystemV102OperatingSystemTypesConstraints(obj OperatingSystemV102OperatingSystemTypes) error {
	return nil
}
