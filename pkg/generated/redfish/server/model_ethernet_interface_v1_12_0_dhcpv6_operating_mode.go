// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type EthernetInterfaceV1120Dhcpv6OperatingMode string

// List of EthernetInterfaceV1120Dhcpv6OperatingMode
const (
	ETHERNETINTERFACEV1120DHCPV6OPERATINGMODE_STATEFUL  EthernetInterfaceV1120Dhcpv6OperatingMode = "Stateful"
	ETHERNETINTERFACEV1120DHCPV6OPERATINGMODE_STATELESS EthernetInterfaceV1120Dhcpv6OperatingMode = "Stateless"
	ETHERNETINTERFACEV1120DHCPV6OPERATINGMODE_DISABLED  EthernetInterfaceV1120Dhcpv6OperatingMode = "Disabled"
	ETHERNETINTERFACEV1120DHCPV6OPERATINGMODE_ENABLED   EthernetInterfaceV1120Dhcpv6OperatingMode = "Enabled"
)

// AllowedEthernetInterfaceV1120Dhcpv6OperatingModeEnumValues is all the allowed values of EthernetInterfaceV1120Dhcpv6OperatingMode enum
var AllowedEthernetInterfaceV1120Dhcpv6OperatingModeEnumValues = []EthernetInterfaceV1120Dhcpv6OperatingMode{
	"Stateful",
	"Stateless",
	"Disabled",
	"Enabled",
}

// validEthernetInterfaceV1120Dhcpv6OperatingModeEnumValue provides a map of EthernetInterfaceV1120Dhcpv6OperatingModes for fast verification of use input
var validEthernetInterfaceV1120Dhcpv6OperatingModeEnumValues = map[EthernetInterfaceV1120Dhcpv6OperatingMode]struct{}{
	"Stateful":  {},
	"Stateless": {},
	"Disabled":  {},
	"Enabled":   {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EthernetInterfaceV1120Dhcpv6OperatingMode) IsValid() bool {
	_, ok := validEthernetInterfaceV1120Dhcpv6OperatingModeEnumValues[v]
	return ok
}

// NewEthernetInterfaceV1120Dhcpv6OperatingModeFromValue returns a pointer to a valid EthernetInterfaceV1120Dhcpv6OperatingMode
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEthernetInterfaceV1120Dhcpv6OperatingModeFromValue(v string) (EthernetInterfaceV1120Dhcpv6OperatingMode, error) {
	ev := EthernetInterfaceV1120Dhcpv6OperatingMode(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for EthernetInterfaceV1120Dhcpv6OperatingMode: valid values are %v", v, AllowedEthernetInterfaceV1120Dhcpv6OperatingModeEnumValues)
}

// AssertEthernetInterfaceV1120Dhcpv6OperatingModeRequired checks if the required fields are not zero-ed
func AssertEthernetInterfaceV1120Dhcpv6OperatingModeRequired(obj EthernetInterfaceV1120Dhcpv6OperatingMode) error {
	return nil
}

// AssertEthernetInterfaceV1120Dhcpv6OperatingModeConstraints checks if the values respects the defined constraints
func AssertEthernetInterfaceV1120Dhcpv6OperatingModeConstraints(obj EthernetInterfaceV1120Dhcpv6OperatingMode) error {
	return nil
}
