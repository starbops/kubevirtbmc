// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type DriveV1180EncryptionAbility string

// List of DriveV1180EncryptionAbility
const (
	DRIVEV1180ENCRYPTIONABILITY_NONE                  DriveV1180EncryptionAbility = "None"
	DRIVEV1180ENCRYPTIONABILITY_SELF_ENCRYPTING_DRIVE DriveV1180EncryptionAbility = "SelfEncryptingDrive"
	DRIVEV1180ENCRYPTIONABILITY_OTHER                 DriveV1180EncryptionAbility = "Other"
)

// AllowedDriveV1180EncryptionAbilityEnumValues is all the allowed values of DriveV1180EncryptionAbility enum
var AllowedDriveV1180EncryptionAbilityEnumValues = []DriveV1180EncryptionAbility{
	"None",
	"SelfEncryptingDrive",
	"Other",
}

// validDriveV1180EncryptionAbilityEnumValue provides a map of DriveV1180EncryptionAbilitys for fast verification of use input
var validDriveV1180EncryptionAbilityEnumValues = map[DriveV1180EncryptionAbility]struct{}{
	"None":                {},
	"SelfEncryptingDrive": {},
	"Other":               {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DriveV1180EncryptionAbility) IsValid() bool {
	_, ok := validDriveV1180EncryptionAbilityEnumValues[v]
	return ok
}

// NewDriveV1180EncryptionAbilityFromValue returns a pointer to a valid DriveV1180EncryptionAbility
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDriveV1180EncryptionAbilityFromValue(v string) (DriveV1180EncryptionAbility, error) {
	ev := DriveV1180EncryptionAbility(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for DriveV1180EncryptionAbility: valid values are %v", v, AllowedDriveV1180EncryptionAbilityEnumValues)
}

// AssertDriveV1180EncryptionAbilityRequired checks if the required fields are not zero-ed
func AssertDriveV1180EncryptionAbilityRequired(obj DriveV1180EncryptionAbility) error {
	return nil
}

// AssertDriveV1180EncryptionAbilityConstraints checks if the values respects the defined constraints
func AssertDriveV1180EncryptionAbilityConstraints(obj DriveV1180EncryptionAbility) error {
	return nil
}
