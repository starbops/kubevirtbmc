// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"errors"
)

// ManagerDiagnosticDataV122ProcessorStatistics - The processor statistics of a manager.
type ManagerDiagnosticDataV122ProcessorStatistics struct {

	// The percentage of CPU time spent in kernel mode.
	KernelPercent *float32 `json:"KernelPercent,omitempty"`

	// The percentage of CPU time spent in user mode.
	UserPercent *float32 `json:"UserPercent,omitempty"`
}

// AssertManagerDiagnosticDataV122ProcessorStatisticsRequired checks if the required fields are not zero-ed
func AssertManagerDiagnosticDataV122ProcessorStatisticsRequired(obj ManagerDiagnosticDataV122ProcessorStatistics) error {
	return nil
}

// AssertManagerDiagnosticDataV122ProcessorStatisticsConstraints checks if the values respects the defined constraints
func AssertManagerDiagnosticDataV122ProcessorStatisticsConstraints(obj ManagerDiagnosticDataV122ProcessorStatistics) error {
	if obj.KernelPercent != nil && *obj.KernelPercent < 0 {
		return &ParsingError{Param: "KernelPercent", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.KernelPercent != nil && *obj.KernelPercent > 100 {
		return &ParsingError{Param: "KernelPercent", Err: errors.New(errMsgMaxValueConstraint)}
	}
	if obj.UserPercent != nil && *obj.UserPercent < 0 {
		return &ParsingError{Param: "UserPercent", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.UserPercent != nil && *obj.UserPercent > 100 {
		return &ParsingError{Param: "UserPercent", Err: errors.New(errMsgMaxValueConstraint)}
	}
	return nil
}
