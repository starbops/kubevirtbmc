// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

// StorageReplicaInfoReplicaFaultDomain : Values of ReplicaFaultDomain describe the fault domain for the replication relationship.
type StorageReplicaInfoReplicaFaultDomain string

// List of StorageReplicaInfoReplicaFaultDomain
const (
	STORAGEREPLICAINFOREPLICAFAULTDOMAIN_LOCAL  StorageReplicaInfoReplicaFaultDomain = "Local"
	STORAGEREPLICAINFOREPLICAFAULTDOMAIN_REMOTE StorageReplicaInfoReplicaFaultDomain = "Remote"
)

// AllowedStorageReplicaInfoReplicaFaultDomainEnumValues is all the allowed values of StorageReplicaInfoReplicaFaultDomain enum
var AllowedStorageReplicaInfoReplicaFaultDomainEnumValues = []StorageReplicaInfoReplicaFaultDomain{
	"Local",
	"Remote",
}

// validStorageReplicaInfoReplicaFaultDomainEnumValue provides a map of StorageReplicaInfoReplicaFaultDomains for fast verification of use input
var validStorageReplicaInfoReplicaFaultDomainEnumValues = map[StorageReplicaInfoReplicaFaultDomain]struct{}{
	"Local":  {},
	"Remote": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v StorageReplicaInfoReplicaFaultDomain) IsValid() bool {
	_, ok := validStorageReplicaInfoReplicaFaultDomainEnumValues[v]
	return ok
}

// NewStorageReplicaInfoReplicaFaultDomainFromValue returns a pointer to a valid StorageReplicaInfoReplicaFaultDomain
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewStorageReplicaInfoReplicaFaultDomainFromValue(v string) (StorageReplicaInfoReplicaFaultDomain, error) {
	ev := StorageReplicaInfoReplicaFaultDomain(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for StorageReplicaInfoReplicaFaultDomain: valid values are %v", v, AllowedStorageReplicaInfoReplicaFaultDomainEnumValues)
}

// AssertStorageReplicaInfoReplicaFaultDomainRequired checks if the required fields are not zero-ed
func AssertStorageReplicaInfoReplicaFaultDomainRequired(obj StorageReplicaInfoReplicaFaultDomain) error {
	return nil
}

// AssertStorageReplicaInfoReplicaFaultDomainConstraints checks if the values respects the defined constraints
func AssertStorageReplicaInfoReplicaFaultDomainConstraints(obj StorageReplicaInfoReplicaFaultDomain) error {
	return nil
}
