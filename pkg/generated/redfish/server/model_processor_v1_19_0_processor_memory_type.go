// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type ProcessorV1190ProcessorMemoryType string

// List of ProcessorV1190ProcessorMemoryType
const (
	PROCESSORV1190PROCESSORMEMORYTYPE_CACHE    ProcessorV1190ProcessorMemoryType = "Cache"
	PROCESSORV1190PROCESSORMEMORYTYPE_L1_CACHE ProcessorV1190ProcessorMemoryType = "L1Cache"
	PROCESSORV1190PROCESSORMEMORYTYPE_L2_CACHE ProcessorV1190ProcessorMemoryType = "L2Cache"
	PROCESSORV1190PROCESSORMEMORYTYPE_L3_CACHE ProcessorV1190ProcessorMemoryType = "L3Cache"
	PROCESSORV1190PROCESSORMEMORYTYPE_L4_CACHE ProcessorV1190ProcessorMemoryType = "L4Cache"
	PROCESSORV1190PROCESSORMEMORYTYPE_L5_CACHE ProcessorV1190ProcessorMemoryType = "L5Cache"
	PROCESSORV1190PROCESSORMEMORYTYPE_L6_CACHE ProcessorV1190ProcessorMemoryType = "L6Cache"
	PROCESSORV1190PROCESSORMEMORYTYPE_L7_CACHE ProcessorV1190ProcessorMemoryType = "L7Cache"
	PROCESSORV1190PROCESSORMEMORYTYPE_HBM1     ProcessorV1190ProcessorMemoryType = "HBM1"
	PROCESSORV1190PROCESSORMEMORYTYPE_HBM2     ProcessorV1190ProcessorMemoryType = "HBM2"
	PROCESSORV1190PROCESSORMEMORYTYPE_HBM2_E   ProcessorV1190ProcessorMemoryType = "HBM2E"
	PROCESSORV1190PROCESSORMEMORYTYPE_HBM3     ProcessorV1190ProcessorMemoryType = "HBM3"
	PROCESSORV1190PROCESSORMEMORYTYPE_SGRAM    ProcessorV1190ProcessorMemoryType = "SGRAM"
	PROCESSORV1190PROCESSORMEMORYTYPE_GDDR     ProcessorV1190ProcessorMemoryType = "GDDR"
	PROCESSORV1190PROCESSORMEMORYTYPE_GDDR2    ProcessorV1190ProcessorMemoryType = "GDDR2"
	PROCESSORV1190PROCESSORMEMORYTYPE_GDDR3    ProcessorV1190ProcessorMemoryType = "GDDR3"
	PROCESSORV1190PROCESSORMEMORYTYPE_GDDR4    ProcessorV1190ProcessorMemoryType = "GDDR4"
	PROCESSORV1190PROCESSORMEMORYTYPE_GDDR5    ProcessorV1190ProcessorMemoryType = "GDDR5"
	PROCESSORV1190PROCESSORMEMORYTYPE_GDDR5_X  ProcessorV1190ProcessorMemoryType = "GDDR5X"
	PROCESSORV1190PROCESSORMEMORYTYPE_GDDR6    ProcessorV1190ProcessorMemoryType = "GDDR6"
	PROCESSORV1190PROCESSORMEMORYTYPE_DDR      ProcessorV1190ProcessorMemoryType = "DDR"
	PROCESSORV1190PROCESSORMEMORYTYPE_DDR2     ProcessorV1190ProcessorMemoryType = "DDR2"
	PROCESSORV1190PROCESSORMEMORYTYPE_DDR3     ProcessorV1190ProcessorMemoryType = "DDR3"
	PROCESSORV1190PROCESSORMEMORYTYPE_DDR4     ProcessorV1190ProcessorMemoryType = "DDR4"
	PROCESSORV1190PROCESSORMEMORYTYPE_DDR5     ProcessorV1190ProcessorMemoryType = "DDR5"
	PROCESSORV1190PROCESSORMEMORYTYPE_SDRAM    ProcessorV1190ProcessorMemoryType = "SDRAM"
	PROCESSORV1190PROCESSORMEMORYTYPE_SRAM     ProcessorV1190ProcessorMemoryType = "SRAM"
	PROCESSORV1190PROCESSORMEMORYTYPE_FLASH    ProcessorV1190ProcessorMemoryType = "Flash"
	PROCESSORV1190PROCESSORMEMORYTYPE_OEM      ProcessorV1190ProcessorMemoryType = "OEM"
)

// AllowedProcessorV1190ProcessorMemoryTypeEnumValues is all the allowed values of ProcessorV1190ProcessorMemoryType enum
var AllowedProcessorV1190ProcessorMemoryTypeEnumValues = []ProcessorV1190ProcessorMemoryType{
	"Cache",
	"L1Cache",
	"L2Cache",
	"L3Cache",
	"L4Cache",
	"L5Cache",
	"L6Cache",
	"L7Cache",
	"HBM1",
	"HBM2",
	"HBM2E",
	"HBM3",
	"SGRAM",
	"GDDR",
	"GDDR2",
	"GDDR3",
	"GDDR4",
	"GDDR5",
	"GDDR5X",
	"GDDR6",
	"DDR",
	"DDR2",
	"DDR3",
	"DDR4",
	"DDR5",
	"SDRAM",
	"SRAM",
	"Flash",
	"OEM",
}

// validProcessorV1190ProcessorMemoryTypeEnumValue provides a map of ProcessorV1190ProcessorMemoryTypes for fast verification of use input
var validProcessorV1190ProcessorMemoryTypeEnumValues = map[ProcessorV1190ProcessorMemoryType]struct{}{
	"Cache":   {},
	"L1Cache": {},
	"L2Cache": {},
	"L3Cache": {},
	"L4Cache": {},
	"L5Cache": {},
	"L6Cache": {},
	"L7Cache": {},
	"HBM1":    {},
	"HBM2":    {},
	"HBM2E":   {},
	"HBM3":    {},
	"SGRAM":   {},
	"GDDR":    {},
	"GDDR2":   {},
	"GDDR3":   {},
	"GDDR4":   {},
	"GDDR5":   {},
	"GDDR5X":  {},
	"GDDR6":   {},
	"DDR":     {},
	"DDR2":    {},
	"DDR3":    {},
	"DDR4":    {},
	"DDR5":    {},
	"SDRAM":   {},
	"SRAM":    {},
	"Flash":   {},
	"OEM":     {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ProcessorV1190ProcessorMemoryType) IsValid() bool {
	_, ok := validProcessorV1190ProcessorMemoryTypeEnumValues[v]
	return ok
}

// NewProcessorV1190ProcessorMemoryTypeFromValue returns a pointer to a valid ProcessorV1190ProcessorMemoryType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewProcessorV1190ProcessorMemoryTypeFromValue(v string) (ProcessorV1190ProcessorMemoryType, error) {
	ev := ProcessorV1190ProcessorMemoryType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ProcessorV1190ProcessorMemoryType: valid values are %v", v, AllowedProcessorV1190ProcessorMemoryTypeEnumValues)
}

// AssertProcessorV1190ProcessorMemoryTypeRequired checks if the required fields are not zero-ed
func AssertProcessorV1190ProcessorMemoryTypeRequired(obj ProcessorV1190ProcessorMemoryType) error {
	return nil
}

// AssertProcessorV1190ProcessorMemoryTypeConstraints checks if the values respects the defined constraints
func AssertProcessorV1190ProcessorMemoryTypeConstraints(obj ProcessorV1190ProcessorMemoryType) error {
	return nil
}
