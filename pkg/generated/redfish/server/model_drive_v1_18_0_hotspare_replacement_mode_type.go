// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type DriveV1180HotspareReplacementModeType string

// List of DriveV1180HotspareReplacementModeType
const (
	DRIVEV1180HOTSPAREREPLACEMENTMODETYPE_REVERTIBLE     DriveV1180HotspareReplacementModeType = "Revertible"
	DRIVEV1180HOTSPAREREPLACEMENTMODETYPE_NON_REVERTIBLE DriveV1180HotspareReplacementModeType = "NonRevertible"
)

// AllowedDriveV1180HotspareReplacementModeTypeEnumValues is all the allowed values of DriveV1180HotspareReplacementModeType enum
var AllowedDriveV1180HotspareReplacementModeTypeEnumValues = []DriveV1180HotspareReplacementModeType{
	"Revertible",
	"NonRevertible",
}

// validDriveV1180HotspareReplacementModeTypeEnumValue provides a map of DriveV1180HotspareReplacementModeTypes for fast verification of use input
var validDriveV1180HotspareReplacementModeTypeEnumValues = map[DriveV1180HotspareReplacementModeType]struct{}{
	"Revertible":    {},
	"NonRevertible": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DriveV1180HotspareReplacementModeType) IsValid() bool {
	_, ok := validDriveV1180HotspareReplacementModeTypeEnumValues[v]
	return ok
}

// NewDriveV1180HotspareReplacementModeTypeFromValue returns a pointer to a valid DriveV1180HotspareReplacementModeType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDriveV1180HotspareReplacementModeTypeFromValue(v string) (DriveV1180HotspareReplacementModeType, error) {
	ev := DriveV1180HotspareReplacementModeType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for DriveV1180HotspareReplacementModeType: valid values are %v", v, AllowedDriveV1180HotspareReplacementModeTypeEnumValues)
}

// AssertDriveV1180HotspareReplacementModeTypeRequired checks if the required fields are not zero-ed
func AssertDriveV1180HotspareReplacementModeTypeRequired(obj DriveV1180HotspareReplacementModeType) error {
	return nil
}

// AssertDriveV1180HotspareReplacementModeTypeConstraints checks if the values respects the defined constraints
func AssertDriveV1180HotspareReplacementModeTypeConstraints(obj DriveV1180HotspareReplacementModeType) error {
	return nil
}
