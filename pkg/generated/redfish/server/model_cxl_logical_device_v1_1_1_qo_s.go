// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"errors"
)

// CxlLogicalDeviceV111QoS - The quality of service properties for this CXL logical device.
type CxlLogicalDeviceV111QoS struct {

	// The bandwidth allocated for this CXL logical device in multiples of 256.
	AllocatedBandwidth *int64 `json:"AllocatedBandwidth,omitempty"`

	// The bandwidth limit to this CXL logical device as a percentage.
	LimitPercent *int64 `json:"LimitPercent,omitempty"`
}

// AssertCxlLogicalDeviceV111QoSRequired checks if the required fields are not zero-ed
func AssertCxlLogicalDeviceV111QoSRequired(obj CxlLogicalDeviceV111QoS) error {
	return nil
}

// AssertCxlLogicalDeviceV111QoSConstraints checks if the values respects the defined constraints
func AssertCxlLogicalDeviceV111QoSConstraints(obj CxlLogicalDeviceV111QoS) error {
	if obj.LimitPercent != nil && *obj.LimitPercent < 0 {
		return &ParsingError{Param: "LimitPercent", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.LimitPercent != nil && *obj.LimitPercent > 100 {
		return &ParsingError{Param: "LimitPercent", Err: errors.New(errMsgMaxValueConstraint)}
	}
	return nil
}
