// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type PortV1110PortType string

// List of PortV1110PortType
const (
	PORTV1110PORTTYPE_UPSTREAM_PORT      PortV1110PortType = "UpstreamPort"
	PORTV1110PORTTYPE_DOWNSTREAM_PORT    PortV1110PortType = "DownstreamPort"
	PORTV1110PORTTYPE_INTERSWITCH_PORT   PortV1110PortType = "InterswitchPort"
	PORTV1110PORTTYPE_MANAGEMENT_PORT    PortV1110PortType = "ManagementPort"
	PORTV1110PORTTYPE_BIDIRECTIONAL_PORT PortV1110PortType = "BidirectionalPort"
	PORTV1110PORTTYPE_UNCONFIGURED_PORT  PortV1110PortType = "UnconfiguredPort"
)

// AllowedPortV1110PortTypeEnumValues is all the allowed values of PortV1110PortType enum
var AllowedPortV1110PortTypeEnumValues = []PortV1110PortType{
	"UpstreamPort",
	"DownstreamPort",
	"InterswitchPort",
	"ManagementPort",
	"BidirectionalPort",
	"UnconfiguredPort",
}

// validPortV1110PortTypeEnumValue provides a map of PortV1110PortTypes for fast verification of use input
var validPortV1110PortTypeEnumValues = map[PortV1110PortType]struct{}{
	"UpstreamPort":      {},
	"DownstreamPort":    {},
	"InterswitchPort":   {},
	"ManagementPort":    {},
	"BidirectionalPort": {},
	"UnconfiguredPort":  {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PortV1110PortType) IsValid() bool {
	_, ok := validPortV1110PortTypeEnumValues[v]
	return ok
}

// NewPortV1110PortTypeFromValue returns a pointer to a valid PortV1110PortType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPortV1110PortTypeFromValue(v string) (PortV1110PortType, error) {
	ev := PortV1110PortType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for PortV1110PortType: valid values are %v", v, AllowedPortV1110PortTypeEnumValues)
}

// AssertPortV1110PortTypeRequired checks if the required fields are not zero-ed
func AssertPortV1110PortTypeRequired(obj PortV1110PortType) error {
	return nil
}

// AssertPortV1110PortTypeConstraints checks if the values respects the defined constraints
func AssertPortV1110PortTypeConstraints(obj PortV1110PortType) error {
	return nil
}
