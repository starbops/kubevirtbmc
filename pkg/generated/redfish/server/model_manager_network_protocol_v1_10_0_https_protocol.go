// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"errors"
)

// ManagerNetworkProtocolV1100HttpsProtocol - The settings for a network protocol associated with a manager.
type ManagerNetworkProtocolV1100HttpsProtocol struct {
	Certificates OdataV4IdRef `json:"Certificates,omitempty"`

	// The protocol port.
	Port *int64 `json:"Port,omitempty"`

	// An indication of whether the protocol is enabled.
	ProtocolEnabled *bool `json:"ProtocolEnabled,omitempty"`
}

// AssertManagerNetworkProtocolV1100HttpsProtocolRequired checks if the required fields are not zero-ed
func AssertManagerNetworkProtocolV1100HttpsProtocolRequired(obj ManagerNetworkProtocolV1100HttpsProtocol) error {
	if err := AssertOdataV4IdRefRequired(obj.Certificates); err != nil {
		return err
	}
	return nil
}

// AssertManagerNetworkProtocolV1100HttpsProtocolConstraints checks if the values respects the defined constraints
func AssertManagerNetworkProtocolV1100HttpsProtocolConstraints(obj ManagerNetworkProtocolV1100HttpsProtocol) error {
	if err := AssertOdataV4IdRefConstraints(obj.Certificates); err != nil {
		return err
	}
	if obj.Port != nil && *obj.Port < 0 {
		return &ParsingError{Param: "Port", Err: errors.New(errMsgMinValueConstraint)}
	}
	return nil
}
