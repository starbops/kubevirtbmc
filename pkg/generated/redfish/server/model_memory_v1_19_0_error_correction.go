// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type MemoryV1190ErrorCorrection string

// List of MemoryV1190ErrorCorrection
const (
	MEMORYV1190ERRORCORRECTION_NO_ECC         MemoryV1190ErrorCorrection = "NoECC"
	MEMORYV1190ERRORCORRECTION_SINGLE_BIT_ECC MemoryV1190ErrorCorrection = "SingleBitECC"
	MEMORYV1190ERRORCORRECTION_MULTI_BIT_ECC  MemoryV1190ErrorCorrection = "MultiBitECC"
	MEMORYV1190ERRORCORRECTION_ADDRESS_PARITY MemoryV1190ErrorCorrection = "AddressParity"
)

// AllowedMemoryV1190ErrorCorrectionEnumValues is all the allowed values of MemoryV1190ErrorCorrection enum
var AllowedMemoryV1190ErrorCorrectionEnumValues = []MemoryV1190ErrorCorrection{
	"NoECC",
	"SingleBitECC",
	"MultiBitECC",
	"AddressParity",
}

// validMemoryV1190ErrorCorrectionEnumValue provides a map of MemoryV1190ErrorCorrections for fast verification of use input
var validMemoryV1190ErrorCorrectionEnumValues = map[MemoryV1190ErrorCorrection]struct{}{
	"NoECC":         {},
	"SingleBitECC":  {},
	"MultiBitECC":   {},
	"AddressParity": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MemoryV1190ErrorCorrection) IsValid() bool {
	_, ok := validMemoryV1190ErrorCorrectionEnumValues[v]
	return ok
}

// NewMemoryV1190ErrorCorrectionFromValue returns a pointer to a valid MemoryV1190ErrorCorrection
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMemoryV1190ErrorCorrectionFromValue(v string) (MemoryV1190ErrorCorrection, error) {
	ev := MemoryV1190ErrorCorrection(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for MemoryV1190ErrorCorrection: valid values are %v", v, AllowedMemoryV1190ErrorCorrectionEnumValues)
}

// AssertMemoryV1190ErrorCorrectionRequired checks if the required fields are not zero-ed
func AssertMemoryV1190ErrorCorrectionRequired(obj MemoryV1190ErrorCorrection) error {
	return nil
}

// AssertMemoryV1190ErrorCorrectionConstraints checks if the values respects the defined constraints
func AssertMemoryV1190ErrorCorrectionConstraints(obj MemoryV1190ErrorCorrection) error {
	return nil
}
