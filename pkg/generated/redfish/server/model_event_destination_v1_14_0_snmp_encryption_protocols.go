// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type EventDestinationV1140SnmpEncryptionProtocols string

// List of EventDestinationV1140SnmpEncryptionProtocols
const (
	EVENTDESTINATIONV1140SNMPENCRYPTIONPROTOCOLS_NONE          EventDestinationV1140SnmpEncryptionProtocols = "None"
	EVENTDESTINATIONV1140SNMPENCRYPTIONPROTOCOLS_CBC_DES       EventDestinationV1140SnmpEncryptionProtocols = "CBC_DES"
	EVENTDESTINATIONV1140SNMPENCRYPTIONPROTOCOLS_CFB128_AES128 EventDestinationV1140SnmpEncryptionProtocols = "CFB128_AES128"
	EVENTDESTINATIONV1140SNMPENCRYPTIONPROTOCOLS_CFB128_AES192 EventDestinationV1140SnmpEncryptionProtocols = "CFB128_AES192"
	EVENTDESTINATIONV1140SNMPENCRYPTIONPROTOCOLS_CFB128_AES256 EventDestinationV1140SnmpEncryptionProtocols = "CFB128_AES256"
)

// AllowedEventDestinationV1140SnmpEncryptionProtocolsEnumValues is all the allowed values of EventDestinationV1140SnmpEncryptionProtocols enum
var AllowedEventDestinationV1140SnmpEncryptionProtocolsEnumValues = []EventDestinationV1140SnmpEncryptionProtocols{
	"None",
	"CBC_DES",
	"CFB128_AES128",
	"CFB128_AES192",
	"CFB128_AES256",
}

// validEventDestinationV1140SnmpEncryptionProtocolsEnumValue provides a map of EventDestinationV1140SnmpEncryptionProtocolss for fast verification of use input
var validEventDestinationV1140SnmpEncryptionProtocolsEnumValues = map[EventDestinationV1140SnmpEncryptionProtocols]struct{}{
	"None":          {},
	"CBC_DES":       {},
	"CFB128_AES128": {},
	"CFB128_AES192": {},
	"CFB128_AES256": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EventDestinationV1140SnmpEncryptionProtocols) IsValid() bool {
	_, ok := validEventDestinationV1140SnmpEncryptionProtocolsEnumValues[v]
	return ok
}

// NewEventDestinationV1140SnmpEncryptionProtocolsFromValue returns a pointer to a valid EventDestinationV1140SnmpEncryptionProtocols
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEventDestinationV1140SnmpEncryptionProtocolsFromValue(v string) (EventDestinationV1140SnmpEncryptionProtocols, error) {
	ev := EventDestinationV1140SnmpEncryptionProtocols(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for EventDestinationV1140SnmpEncryptionProtocols: valid values are %v", v, AllowedEventDestinationV1140SnmpEncryptionProtocolsEnumValues)
}

// AssertEventDestinationV1140SnmpEncryptionProtocolsRequired checks if the required fields are not zero-ed
func AssertEventDestinationV1140SnmpEncryptionProtocolsRequired(obj EventDestinationV1140SnmpEncryptionProtocols) error {
	return nil
}

// AssertEventDestinationV1140SnmpEncryptionProtocolsConstraints checks if the values respects the defined constraints
func AssertEventDestinationV1140SnmpEncryptionProtocolsConstraints(obj EventDestinationV1140SnmpEncryptionProtocols) error {
	return nil
}
