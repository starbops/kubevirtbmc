// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type OutletReceptacleType string

// List of OutletReceptacleType
const (
	OUTLETRECEPTACLETYPE_NEMA_5_15_R      OutletReceptacleType = "NEMA_5_15R"
	OUTLETRECEPTACLETYPE_NEMA_5_20_R      OutletReceptacleType = "NEMA_5_20R"
	OUTLETRECEPTACLETYPE_NEMA_L5_20_R     OutletReceptacleType = "NEMA_L5_20R"
	OUTLETRECEPTACLETYPE_NEMA_L5_30_R     OutletReceptacleType = "NEMA_L5_30R"
	OUTLETRECEPTACLETYPE_NEMA_L6_20_R     OutletReceptacleType = "NEMA_L6_20R"
	OUTLETRECEPTACLETYPE_NEMA_L6_30_R     OutletReceptacleType = "NEMA_L6_30R"
	OUTLETRECEPTACLETYPE_IEC_60320_C13    OutletReceptacleType = "IEC_60320_C13"
	OUTLETRECEPTACLETYPE_IEC_60320_C19    OutletReceptacleType = "IEC_60320_C19"
	OUTLETRECEPTACLETYPE_CEE_7_TYPE_E     OutletReceptacleType = "CEE_7_Type_E"
	OUTLETRECEPTACLETYPE_CEE_7_TYPE_F     OutletReceptacleType = "CEE_7_Type_F"
	OUTLETRECEPTACLETYPE_SEV_1011_TYPE_12 OutletReceptacleType = "SEV_1011_TYPE_12"
	OUTLETRECEPTACLETYPE_SEV_1011_TYPE_23 OutletReceptacleType = "SEV_1011_TYPE_23"
	OUTLETRECEPTACLETYPE_BS_1363_TYPE_G   OutletReceptacleType = "BS_1363_Type_G"
	OUTLETRECEPTACLETYPE_BUS_CONNECTION   OutletReceptacleType = "BusConnection"
)

// AllowedOutletReceptacleTypeEnumValues is all the allowed values of OutletReceptacleType enum
var AllowedOutletReceptacleTypeEnumValues = []OutletReceptacleType{
	"NEMA_5_15R",
	"NEMA_5_20R",
	"NEMA_L5_20R",
	"NEMA_L5_30R",
	"NEMA_L6_20R",
	"NEMA_L6_30R",
	"IEC_60320_C13",
	"IEC_60320_C19",
	"CEE_7_Type_E",
	"CEE_7_Type_F",
	"SEV_1011_TYPE_12",
	"SEV_1011_TYPE_23",
	"BS_1363_Type_G",
	"BusConnection",
}

// validOutletReceptacleTypeEnumValue provides a map of OutletReceptacleTypes for fast verification of use input
var validOutletReceptacleTypeEnumValues = map[OutletReceptacleType]struct{}{
	"NEMA_5_15R":       {},
	"NEMA_5_20R":       {},
	"NEMA_L5_20R":      {},
	"NEMA_L5_30R":      {},
	"NEMA_L6_20R":      {},
	"NEMA_L6_30R":      {},
	"IEC_60320_C13":    {},
	"IEC_60320_C19":    {},
	"CEE_7_Type_E":     {},
	"CEE_7_Type_F":     {},
	"SEV_1011_TYPE_12": {},
	"SEV_1011_TYPE_23": {},
	"BS_1363_Type_G":   {},
	"BusConnection":    {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OutletReceptacleType) IsValid() bool {
	_, ok := validOutletReceptacleTypeEnumValues[v]
	return ok
}

// NewOutletReceptacleTypeFromValue returns a pointer to a valid OutletReceptacleType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOutletReceptacleTypeFromValue(v string) (OutletReceptacleType, error) {
	ev := OutletReceptacleType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for OutletReceptacleType: valid values are %v", v, AllowedOutletReceptacleTypeEnumValues)
}

// AssertOutletReceptacleTypeRequired checks if the required fields are not zero-ed
func AssertOutletReceptacleTypeRequired(obj OutletReceptacleType) error {
	return nil
}

// AssertOutletReceptacleTypeConstraints checks if the values respects the defined constraints
func AssertOutletReceptacleTypeConstraints(obj OutletReceptacleType) error {
	return nil
}
