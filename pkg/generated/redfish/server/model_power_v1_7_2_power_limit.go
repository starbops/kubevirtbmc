// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"errors"
)

// PowerV172PowerLimit - The power limit status and configuration information for the chassis.
type PowerV172PowerLimit struct {

	// The time required for the limiting process to reduce power consumption to below the limit.
	CorrectionInMs *int64 `json:"CorrectionInMs,omitempty"`

	LimitException PowerV172PowerLimitException `json:"LimitException,omitempty"`

	// The power limit, in watt units.  If `null`, power capping is disabled.
	LimitInWatts *float32 `json:"LimitInWatts,omitempty"`
}

// AssertPowerV172PowerLimitRequired checks if the required fields are not zero-ed
func AssertPowerV172PowerLimitRequired(obj PowerV172PowerLimit) error {
	return nil
}

// AssertPowerV172PowerLimitConstraints checks if the values respects the defined constraints
func AssertPowerV172PowerLimitConstraints(obj PowerV172PowerLimit) error {
	if obj.LimitInWatts != nil && *obj.LimitInWatts < 0 {
		return &ParsingError{Param: "LimitInWatts", Err: errors.New(errMsgMinValueConstraint)}
	}
	return nil
}
