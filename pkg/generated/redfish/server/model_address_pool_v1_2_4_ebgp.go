// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

// AddressPoolV124Ebgp - External BGP (eBGP) related properties for an Ethernet fabric.
type AddressPoolV124Ebgp struct {
	ASNumberRange AddressPoolV124AsNumberRange `json:"ASNumberRange,omitempty"`

	// Allow duplicate Autonomous System (AS) path.
	AllowDuplicateASEnabled *bool `json:"AllowDuplicateASEnabled,omitempty"`

	// Option to override an Autonomous System (AS) number with the AS number of the sending peer.
	AllowOverrideASEnabled *bool `json:"AllowOverrideASEnabled,omitempty"`

	// Compare Multi Exit Discriminator (MED) status.
	AlwaysCompareMEDEnabled *bool `json:"AlwaysCompareMEDEnabled,omitempty"`

	// Local preference value.
	BGPLocalPreference *int64 `json:"BGPLocalPreference,omitempty"`

	BGPNeighbor AddressPoolV124BgpNeighbor `json:"BGPNeighbor,omitempty"`

	BGPRoute AddressPoolV124BgpRoute `json:"BGPRoute,omitempty"`

	// BGP weight attribute.
	BGPWeight *int64 `json:"BGPWeight,omitempty"`

	GracefulRestart AddressPoolV124GracefulRestart `json:"GracefulRestart,omitempty"`

	// BGP Multi Exit Discriminator (MED) value.
	MED *int64 `json:"MED,omitempty"`

	// External BGP (eBGP) multihop status.
	MultihopEnabled *bool `json:"MultihopEnabled,omitempty"`

	// External BGP (eBGP) multihop Time to Live (TTL) value.
	MultihopTTL *int64 `json:"MultihopTTL,omitempty"`

	MultiplePaths AddressPoolV124MultiplePaths `json:"MultiplePaths,omitempty"`

	// Indicates whether community attributes are sent.
	SendCommunityEnabled *bool `json:"SendCommunityEnabled,omitempty"`
}

// AssertAddressPoolV124EbgpRequired checks if the required fields are not zero-ed
func AssertAddressPoolV124EbgpRequired(obj AddressPoolV124Ebgp) error {
	if err := AssertAddressPoolV124AsNumberRangeRequired(obj.ASNumberRange); err != nil {
		return err
	}
	if err := AssertAddressPoolV124BgpNeighborRequired(obj.BGPNeighbor); err != nil {
		return err
	}
	if err := AssertAddressPoolV124BgpRouteRequired(obj.BGPRoute); err != nil {
		return err
	}
	if err := AssertAddressPoolV124GracefulRestartRequired(obj.GracefulRestart); err != nil {
		return err
	}
	if err := AssertAddressPoolV124MultiplePathsRequired(obj.MultiplePaths); err != nil {
		return err
	}
	return nil
}

// AssertAddressPoolV124EbgpConstraints checks if the values respects the defined constraints
func AssertAddressPoolV124EbgpConstraints(obj AddressPoolV124Ebgp) error {
	if err := AssertAddressPoolV124AsNumberRangeConstraints(obj.ASNumberRange); err != nil {
		return err
	}
	if err := AssertAddressPoolV124BgpNeighborConstraints(obj.BGPNeighbor); err != nil {
		return err
	}
	if err := AssertAddressPoolV124BgpRouteConstraints(obj.BGPRoute); err != nil {
		return err
	}
	if err := AssertAddressPoolV124GracefulRestartConstraints(obj.GracefulRestart); err != nil {
		return err
	}
	if err := AssertAddressPoolV124MultiplePathsConstraints(obj.MultiplePaths); err != nil {
		return err
	}
	return nil
}
