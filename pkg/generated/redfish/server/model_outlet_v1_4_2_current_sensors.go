// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

// OutletV142CurrentSensors - The current sensors for this outlet.
type OutletV142CurrentSensors struct {
	Line1 SensorSensorCurrentExcerpt `json:"Line1,omitempty"`

	Line2 SensorSensorCurrentExcerpt `json:"Line2,omitempty"`

	Line3 SensorSensorCurrentExcerpt `json:"Line3,omitempty"`

	Neutral SensorSensorCurrentExcerpt `json:"Neutral,omitempty"`
}

// AssertOutletV142CurrentSensorsRequired checks if the required fields are not zero-ed
func AssertOutletV142CurrentSensorsRequired(obj OutletV142CurrentSensors) error {
	if err := AssertSensorSensorCurrentExcerptRequired(obj.Line1); err != nil {
		return err
	}
	if err := AssertSensorSensorCurrentExcerptRequired(obj.Line2); err != nil {
		return err
	}
	if err := AssertSensorSensorCurrentExcerptRequired(obj.Line3); err != nil {
		return err
	}
	if err := AssertSensorSensorCurrentExcerptRequired(obj.Neutral); err != nil {
		return err
	}
	return nil
}

// AssertOutletV142CurrentSensorsConstraints checks if the values respects the defined constraints
func AssertOutletV142CurrentSensorsConstraints(obj OutletV142CurrentSensors) error {
	if err := AssertSensorSensorCurrentExcerptConstraints(obj.Line1); err != nil {
		return err
	}
	if err := AssertSensorSensorCurrentExcerptConstraints(obj.Line2); err != nil {
		return err
	}
	if err := AssertSensorSensorCurrentExcerptConstraints(obj.Line3); err != nil {
		return err
	}
	if err := AssertSensorSensorCurrentExcerptConstraints(obj.Neutral); err != nil {
		return err
	}
	return nil
}
