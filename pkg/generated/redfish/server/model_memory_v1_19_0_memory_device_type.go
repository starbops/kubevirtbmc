// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type MemoryV1190MemoryDeviceType string

// List of MemoryV1190MemoryDeviceType
const (
	MEMORYV1190MEMORYDEVICETYPE_DDR                      MemoryV1190MemoryDeviceType = "DDR"
	MEMORYV1190MEMORYDEVICETYPE_DDR2                     MemoryV1190MemoryDeviceType = "DDR2"
	MEMORYV1190MEMORYDEVICETYPE_DDR3                     MemoryV1190MemoryDeviceType = "DDR3"
	MEMORYV1190MEMORYDEVICETYPE_DDR4                     MemoryV1190MemoryDeviceType = "DDR4"
	MEMORYV1190MEMORYDEVICETYPE_DDR4_SDRAM               MemoryV1190MemoryDeviceType = "DDR4_SDRAM"
	MEMORYV1190MEMORYDEVICETYPE_DDR4_E_SDRAM             MemoryV1190MemoryDeviceType = "DDR4E_SDRAM"
	MEMORYV1190MEMORYDEVICETYPE_LPDDR4_SDRAM             MemoryV1190MemoryDeviceType = "LPDDR4_SDRAM"
	MEMORYV1190MEMORYDEVICETYPE_DDR3_SDRAM               MemoryV1190MemoryDeviceType = "DDR3_SDRAM"
	MEMORYV1190MEMORYDEVICETYPE_LPDDR3_SDRAM             MemoryV1190MemoryDeviceType = "LPDDR3_SDRAM"
	MEMORYV1190MEMORYDEVICETYPE_DDR2_SDRAM               MemoryV1190MemoryDeviceType = "DDR2_SDRAM"
	MEMORYV1190MEMORYDEVICETYPE_DDR2_SDRAM_FB_DIMM       MemoryV1190MemoryDeviceType = "DDR2_SDRAM_FB_DIMM"
	MEMORYV1190MEMORYDEVICETYPE_DDR2_SDRAM_FB_DIMM_PROBE MemoryV1190MemoryDeviceType = "DDR2_SDRAM_FB_DIMM_PROBE"
	MEMORYV1190MEMORYDEVICETYPE_DDR_SGRAM                MemoryV1190MemoryDeviceType = "DDR_SGRAM"
	MEMORYV1190MEMORYDEVICETYPE_DDR_SDRAM                MemoryV1190MemoryDeviceType = "DDR_SDRAM"
	MEMORYV1190MEMORYDEVICETYPE_ROM                      MemoryV1190MemoryDeviceType = "ROM"
	MEMORYV1190MEMORYDEVICETYPE_SDRAM                    MemoryV1190MemoryDeviceType = "SDRAM"
	MEMORYV1190MEMORYDEVICETYPE_EDO                      MemoryV1190MemoryDeviceType = "EDO"
	MEMORYV1190MEMORYDEVICETYPE_FAST_PAGE_MODE           MemoryV1190MemoryDeviceType = "FastPageMode"
	MEMORYV1190MEMORYDEVICETYPE_PIPELINED_NIBBLE         MemoryV1190MemoryDeviceType = "PipelinedNibble"
	MEMORYV1190MEMORYDEVICETYPE_LOGICAL                  MemoryV1190MemoryDeviceType = "Logical"
	MEMORYV1190MEMORYDEVICETYPE_HBM                      MemoryV1190MemoryDeviceType = "HBM"
	MEMORYV1190MEMORYDEVICETYPE_HBM2                     MemoryV1190MemoryDeviceType = "HBM2"
	MEMORYV1190MEMORYDEVICETYPE_HBM2_E                   MemoryV1190MemoryDeviceType = "HBM2E"
	MEMORYV1190MEMORYDEVICETYPE_HBM3                     MemoryV1190MemoryDeviceType = "HBM3"
	MEMORYV1190MEMORYDEVICETYPE_GDDR                     MemoryV1190MemoryDeviceType = "GDDR"
	MEMORYV1190MEMORYDEVICETYPE_GDDR2                    MemoryV1190MemoryDeviceType = "GDDR2"
	MEMORYV1190MEMORYDEVICETYPE_GDDR3                    MemoryV1190MemoryDeviceType = "GDDR3"
	MEMORYV1190MEMORYDEVICETYPE_GDDR4                    MemoryV1190MemoryDeviceType = "GDDR4"
	MEMORYV1190MEMORYDEVICETYPE_GDDR5                    MemoryV1190MemoryDeviceType = "GDDR5"
	MEMORYV1190MEMORYDEVICETYPE_GDDR5_X                  MemoryV1190MemoryDeviceType = "GDDR5X"
	MEMORYV1190MEMORYDEVICETYPE_GDDR6                    MemoryV1190MemoryDeviceType = "GDDR6"
	MEMORYV1190MEMORYDEVICETYPE_DDR5                     MemoryV1190MemoryDeviceType = "DDR5"
	MEMORYV1190MEMORYDEVICETYPE_OEM                      MemoryV1190MemoryDeviceType = "OEM"
	MEMORYV1190MEMORYDEVICETYPE_LPDDR5_SDRAM             MemoryV1190MemoryDeviceType = "LPDDR5_SDRAM"
)

// AllowedMemoryV1190MemoryDeviceTypeEnumValues is all the allowed values of MemoryV1190MemoryDeviceType enum
var AllowedMemoryV1190MemoryDeviceTypeEnumValues = []MemoryV1190MemoryDeviceType{
	"DDR",
	"DDR2",
	"DDR3",
	"DDR4",
	"DDR4_SDRAM",
	"DDR4E_SDRAM",
	"LPDDR4_SDRAM",
	"DDR3_SDRAM",
	"LPDDR3_SDRAM",
	"DDR2_SDRAM",
	"DDR2_SDRAM_FB_DIMM",
	"DDR2_SDRAM_FB_DIMM_PROBE",
	"DDR_SGRAM",
	"DDR_SDRAM",
	"ROM",
	"SDRAM",
	"EDO",
	"FastPageMode",
	"PipelinedNibble",
	"Logical",
	"HBM",
	"HBM2",
	"HBM2E",
	"HBM3",
	"GDDR",
	"GDDR2",
	"GDDR3",
	"GDDR4",
	"GDDR5",
	"GDDR5X",
	"GDDR6",
	"DDR5",
	"OEM",
	"LPDDR5_SDRAM",
}

// validMemoryV1190MemoryDeviceTypeEnumValue provides a map of MemoryV1190MemoryDeviceTypes for fast verification of use input
var validMemoryV1190MemoryDeviceTypeEnumValues = map[MemoryV1190MemoryDeviceType]struct{}{
	"DDR":                      {},
	"DDR2":                     {},
	"DDR3":                     {},
	"DDR4":                     {},
	"DDR4_SDRAM":               {},
	"DDR4E_SDRAM":              {},
	"LPDDR4_SDRAM":             {},
	"DDR3_SDRAM":               {},
	"LPDDR3_SDRAM":             {},
	"DDR2_SDRAM":               {},
	"DDR2_SDRAM_FB_DIMM":       {},
	"DDR2_SDRAM_FB_DIMM_PROBE": {},
	"DDR_SGRAM":                {},
	"DDR_SDRAM":                {},
	"ROM":                      {},
	"SDRAM":                    {},
	"EDO":                      {},
	"FastPageMode":             {},
	"PipelinedNibble":          {},
	"Logical":                  {},
	"HBM":                      {},
	"HBM2":                     {},
	"HBM2E":                    {},
	"HBM3":                     {},
	"GDDR":                     {},
	"GDDR2":                    {},
	"GDDR3":                    {},
	"GDDR4":                    {},
	"GDDR5":                    {},
	"GDDR5X":                   {},
	"GDDR6":                    {},
	"DDR5":                     {},
	"OEM":                      {},
	"LPDDR5_SDRAM":             {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MemoryV1190MemoryDeviceType) IsValid() bool {
	_, ok := validMemoryV1190MemoryDeviceTypeEnumValues[v]
	return ok
}

// NewMemoryV1190MemoryDeviceTypeFromValue returns a pointer to a valid MemoryV1190MemoryDeviceType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMemoryV1190MemoryDeviceTypeFromValue(v string) (MemoryV1190MemoryDeviceType, error) {
	ev := MemoryV1190MemoryDeviceType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for MemoryV1190MemoryDeviceType: valid values are %v", v, AllowedMemoryV1190MemoryDeviceTypeEnumValues)
}

// AssertMemoryV1190MemoryDeviceTypeRequired checks if the required fields are not zero-ed
func AssertMemoryV1190MemoryDeviceTypeRequired(obj MemoryV1190MemoryDeviceType) error {
	return nil
}

// AssertMemoryV1190MemoryDeviceTypeConstraints checks if the values respects the defined constraints
func AssertMemoryV1190MemoryDeviceTypeConstraints(obj MemoryV1190MemoryDeviceType) error {
	return nil
}
