// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"errors"
)

// OperatingConfigV103TurboProfileDatapoint - The turbo profile for a set of active cores.
type OperatingConfigV103TurboProfileDatapoint struct {

	// The number of active cores to be configured with the specified maximum clock speed.
	ActiveCoreCount *int64 `json:"ActiveCoreCount,omitempty"`

	// The maximum turbo clock speed that correspond to the number of active cores in MHz.
	MaxSpeedMHz *int64 `json:"MaxSpeedMHz,omitempty"`
}

// AssertOperatingConfigV103TurboProfileDatapointRequired checks if the required fields are not zero-ed
func AssertOperatingConfigV103TurboProfileDatapointRequired(obj OperatingConfigV103TurboProfileDatapoint) error {
	return nil
}

// AssertOperatingConfigV103TurboProfileDatapointConstraints checks if the values respects the defined constraints
func AssertOperatingConfigV103TurboProfileDatapointConstraints(obj OperatingConfigV103TurboProfileDatapoint) error {
	if obj.ActiveCoreCount != nil && *obj.ActiveCoreCount < 0 {
		return &ParsingError{Param: "ActiveCoreCount", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.MaxSpeedMHz != nil && *obj.MaxSpeedMHz < 0 {
		return &ParsingError{Param: "MaxSpeedMHz", Err: errors.New(errMsgMinValueConstraint)}
	}
	return nil
}
