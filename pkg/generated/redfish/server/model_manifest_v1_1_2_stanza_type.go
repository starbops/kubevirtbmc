// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type ManifestV112StanzaType string

// List of ManifestV112StanzaType
const (
	MANIFESTV112STANZATYPE_COMPOSE_SYSTEM          ManifestV112StanzaType = "ComposeSystem"
	MANIFESTV112STANZATYPE_DECOMPOSE_SYSTEM        ManifestV112StanzaType = "DecomposeSystem"
	MANIFESTV112STANZATYPE_COMPOSE_RESOURCE        ManifestV112StanzaType = "ComposeResource"
	MANIFESTV112STANZATYPE_DECOMPOSE_RESOURCE      ManifestV112StanzaType = "DecomposeResource"
	MANIFESTV112STANZATYPE_OEM                     ManifestV112StanzaType = "OEM"
	MANIFESTV112STANZATYPE_REGISTER_RESOURCE_BLOCK ManifestV112StanzaType = "RegisterResourceBlock"
)

// AllowedManifestV112StanzaTypeEnumValues is all the allowed values of ManifestV112StanzaType enum
var AllowedManifestV112StanzaTypeEnumValues = []ManifestV112StanzaType{
	"ComposeSystem",
	"DecomposeSystem",
	"ComposeResource",
	"DecomposeResource",
	"OEM",
	"RegisterResourceBlock",
}

// validManifestV112StanzaTypeEnumValue provides a map of ManifestV112StanzaTypes for fast verification of use input
var validManifestV112StanzaTypeEnumValues = map[ManifestV112StanzaType]struct{}{
	"ComposeSystem":         {},
	"DecomposeSystem":       {},
	"ComposeResource":       {},
	"DecomposeResource":     {},
	"OEM":                   {},
	"RegisterResourceBlock": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ManifestV112StanzaType) IsValid() bool {
	_, ok := validManifestV112StanzaTypeEnumValues[v]
	return ok
}

// NewManifestV112StanzaTypeFromValue returns a pointer to a valid ManifestV112StanzaType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewManifestV112StanzaTypeFromValue(v string) (ManifestV112StanzaType, error) {
	ev := ManifestV112StanzaType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ManifestV112StanzaType: valid values are %v", v, AllowedManifestV112StanzaTypeEnumValues)
}

// AssertManifestV112StanzaTypeRequired checks if the required fields are not zero-ed
func AssertManifestV112StanzaTypeRequired(obj ManifestV112StanzaType) error {
	return nil
}

// AssertManifestV112StanzaTypeConstraints checks if the values respects the defined constraints
func AssertManifestV112StanzaTypeConstraints(obj ManifestV112StanzaType) error {
	return nil
}
