// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2024.3
 */

package server

import (
	"fmt"
)

type VirtualMediaV164EjectPolicy string

// List of VirtualMediaV164EjectPolicy
const (
	VIRTUALMEDIAV164EJECTPOLICY_ON_POWER_OFF VirtualMediaV164EjectPolicy = "OnPowerOff"
	VIRTUALMEDIAV164EJECTPOLICY_SESSION      VirtualMediaV164EjectPolicy = "Session"
	VIRTUALMEDIAV164EJECTPOLICY_TIMED        VirtualMediaV164EjectPolicy = "Timed"
	VIRTUALMEDIAV164EJECTPOLICY_AFTER_USE    VirtualMediaV164EjectPolicy = "AfterUse"
	VIRTUALMEDIAV164EJECTPOLICY_PERSISTENT   VirtualMediaV164EjectPolicy = "Persistent"
)

// AllowedVirtualMediaV164EjectPolicyEnumValues is all the allowed values of VirtualMediaV164EjectPolicy enum
var AllowedVirtualMediaV164EjectPolicyEnumValues = []VirtualMediaV164EjectPolicy{
	"OnPowerOff",
	"Session",
	"Timed",
	"AfterUse",
	"Persistent",
}

// validVirtualMediaV164EjectPolicyEnumValue provides a map of VirtualMediaV164EjectPolicys for fast verification of use input
var validVirtualMediaV164EjectPolicyEnumValues = map[VirtualMediaV164EjectPolicy]struct{}{
	"OnPowerOff": {},
	"Session":    {},
	"Timed":      {},
	"AfterUse":   {},
	"Persistent": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v VirtualMediaV164EjectPolicy) IsValid() bool {
	_, ok := validVirtualMediaV164EjectPolicyEnumValues[v]
	return ok
}

// NewVirtualMediaV164EjectPolicyFromValue returns a pointer to a valid VirtualMediaV164EjectPolicy
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewVirtualMediaV164EjectPolicyFromValue(v string) (VirtualMediaV164EjectPolicy, error) {
	ev := VirtualMediaV164EjectPolicy(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for VirtualMediaV164EjectPolicy: valid values are %v", v, AllowedVirtualMediaV164EjectPolicyEnumValues)
}

// AssertVirtualMediaV164EjectPolicyRequired checks if the required fields are not zero-ed
func AssertVirtualMediaV164EjectPolicyRequired(obj VirtualMediaV164EjectPolicy) error {
	return nil
}

// AssertVirtualMediaV164EjectPolicyConstraints checks if the values respects the defined constraints
func AssertVirtualMediaV164EjectPolicyConstraints(obj VirtualMediaV164EjectPolicy) error {
	return nil
}
