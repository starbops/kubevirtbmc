// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type ResourceResetType string

// List of ResourceResetType
const (
	RESOURCERESETTYPE_ON                ResourceResetType = "On"
	RESOURCERESETTYPE_FORCE_OFF         ResourceResetType = "ForceOff"
	RESOURCERESETTYPE_GRACEFUL_SHUTDOWN ResourceResetType = "GracefulShutdown"
	RESOURCERESETTYPE_GRACEFUL_RESTART  ResourceResetType = "GracefulRestart"
	RESOURCERESETTYPE_FORCE_RESTART     ResourceResetType = "ForceRestart"
	RESOURCERESETTYPE_NMI               ResourceResetType = "Nmi"
	RESOURCERESETTYPE_FORCE_ON          ResourceResetType = "ForceOn"
	RESOURCERESETTYPE_PUSH_POWER_BUTTON ResourceResetType = "PushPowerButton"
	RESOURCERESETTYPE_POWER_CYCLE       ResourceResetType = "PowerCycle"
	RESOURCERESETTYPE_SUSPEND           ResourceResetType = "Suspend"
	RESOURCERESETTYPE_PAUSE             ResourceResetType = "Pause"
	RESOURCERESETTYPE_RESUME            ResourceResetType = "Resume"
)

// AllowedResourceResetTypeEnumValues is all the allowed values of ResourceResetType enum
var AllowedResourceResetTypeEnumValues = []ResourceResetType{
	"On",
	"ForceOff",
	"GracefulShutdown",
	"GracefulRestart",
	"ForceRestart",
	"Nmi",
	"ForceOn",
	"PushPowerButton",
	"PowerCycle",
	"Suspend",
	"Pause",
	"Resume",
}

// validResourceResetTypeEnumValue provides a map of ResourceResetTypes for fast verification of use input
var validResourceResetTypeEnumValues = map[ResourceResetType]struct{}{
	"On":               {},
	"ForceOff":         {},
	"GracefulShutdown": {},
	"GracefulRestart":  {},
	"ForceRestart":     {},
	"Nmi":              {},
	"ForceOn":          {},
	"PushPowerButton":  {},
	"PowerCycle":       {},
	"Suspend":          {},
	"Pause":            {},
	"Resume":           {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ResourceResetType) IsValid() bool {
	_, ok := validResourceResetTypeEnumValues[v]
	return ok
}

// NewResourceResetTypeFromValue returns a pointer to a valid ResourceResetType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewResourceResetTypeFromValue(v string) (ResourceResetType, error) {
	ev := ResourceResetType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ResourceResetType: valid values are %v", v, AllowedResourceResetTypeEnumValues)
}

// AssertResourceResetTypeRequired checks if the required fields are not zero-ed
func AssertResourceResetTypeRequired(obj ResourceResetType) error {
	return nil
}

// AssertResourceResetTypeConstraints checks if the values respects the defined constraints
func AssertResourceResetTypeConstraints(obj ResourceResetType) error {
	return nil
}
