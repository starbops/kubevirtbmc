// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type ComputerSystemV1220DecommissionType string

// List of ComputerSystemV1220DecommissionType
const (
	COMPUTERSYSTEMV1220DECOMMISSIONTYPE_ALL            ComputerSystemV1220DecommissionType = "All"
	COMPUTERSYSTEMV1220DECOMMISSIONTYPE_USER_DATA      ComputerSystemV1220DecommissionType = "UserData"
	COMPUTERSYSTEMV1220DECOMMISSIONTYPE_MANAGER_CONFIG ComputerSystemV1220DecommissionType = "ManagerConfig"
	COMPUTERSYSTEMV1220DECOMMISSIONTYPE_BIOS_CONFIG    ComputerSystemV1220DecommissionType = "BIOSConfig"
	COMPUTERSYSTEMV1220DECOMMISSIONTYPE_NETWORK_CONFIG ComputerSystemV1220DecommissionType = "NetworkConfig"
	COMPUTERSYSTEMV1220DECOMMISSIONTYPE_STORAGE_CONFIG ComputerSystemV1220DecommissionType = "StorageConfig"
	COMPUTERSYSTEMV1220DECOMMISSIONTYPE_LOGS           ComputerSystemV1220DecommissionType = "Logs"
)

// AllowedComputerSystemV1220DecommissionTypeEnumValues is all the allowed values of ComputerSystemV1220DecommissionType enum
var AllowedComputerSystemV1220DecommissionTypeEnumValues = []ComputerSystemV1220DecommissionType{
	"All",
	"UserData",
	"ManagerConfig",
	"BIOSConfig",
	"NetworkConfig",
	"StorageConfig",
	"Logs",
}

// validComputerSystemV1220DecommissionTypeEnumValue provides a map of ComputerSystemV1220DecommissionTypes for fast verification of use input
var validComputerSystemV1220DecommissionTypeEnumValues = map[ComputerSystemV1220DecommissionType]struct{}{
	"All":           {},
	"UserData":      {},
	"ManagerConfig": {},
	"BIOSConfig":    {},
	"NetworkConfig": {},
	"StorageConfig": {},
	"Logs":          {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ComputerSystemV1220DecommissionType) IsValid() bool {
	_, ok := validComputerSystemV1220DecommissionTypeEnumValues[v]
	return ok
}

// NewComputerSystemV1220DecommissionTypeFromValue returns a pointer to a valid ComputerSystemV1220DecommissionType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewComputerSystemV1220DecommissionTypeFromValue(v string) (ComputerSystemV1220DecommissionType, error) {
	ev := ComputerSystemV1220DecommissionType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ComputerSystemV1220DecommissionType: valid values are %v", v, AllowedComputerSystemV1220DecommissionTypeEnumValues)
}

// AssertComputerSystemV1220DecommissionTypeRequired checks if the required fields are not zero-ed
func AssertComputerSystemV1220DecommissionTypeRequired(obj ComputerSystemV1220DecommissionType) error {
	return nil
}

// AssertComputerSystemV1220DecommissionTypeConstraints checks if the values respects the defined constraints
func AssertComputerSystemV1220DecommissionTypeConstraints(obj ComputerSystemV1220DecommissionType) error {
	return nil
}
