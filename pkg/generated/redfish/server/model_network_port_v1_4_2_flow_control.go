// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type NetworkPortV142FlowControl string

// List of NetworkPortV142FlowControl
const (
	NETWORKPORTV142FLOWCONTROL_NONE  NetworkPortV142FlowControl = "None"
	NETWORKPORTV142FLOWCONTROL_TX    NetworkPortV142FlowControl = "TX"
	NETWORKPORTV142FLOWCONTROL_RX    NetworkPortV142FlowControl = "RX"
	NETWORKPORTV142FLOWCONTROL_TX_RX NetworkPortV142FlowControl = "TX_RX"
)

// AllowedNetworkPortV142FlowControlEnumValues is all the allowed values of NetworkPortV142FlowControl enum
var AllowedNetworkPortV142FlowControlEnumValues = []NetworkPortV142FlowControl{
	"None",
	"TX",
	"RX",
	"TX_RX",
}

// validNetworkPortV142FlowControlEnumValue provides a map of NetworkPortV142FlowControls for fast verification of use input
var validNetworkPortV142FlowControlEnumValues = map[NetworkPortV142FlowControl]struct{}{
	"None":  {},
	"TX":    {},
	"RX":    {},
	"TX_RX": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v NetworkPortV142FlowControl) IsValid() bool {
	_, ok := validNetworkPortV142FlowControlEnumValues[v]
	return ok
}

// NewNetworkPortV142FlowControlFromValue returns a pointer to a valid NetworkPortV142FlowControl
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewNetworkPortV142FlowControlFromValue(v string) (NetworkPortV142FlowControl, error) {
	ev := NetworkPortV142FlowControl(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for NetworkPortV142FlowControl: valid values are %v", v, AllowedNetworkPortV142FlowControlEnumValues)
}

// AssertNetworkPortV142FlowControlRequired checks if the required fields are not zero-ed
func AssertNetworkPortV142FlowControlRequired(obj NetworkPortV142FlowControl) error {
	return nil
}

// AssertNetworkPortV142FlowControlConstraints checks if the values respects the defined constraints
func AssertNetworkPortV142FlowControlConstraints(obj NetworkPortV142FlowControl) error {
	return nil
}
