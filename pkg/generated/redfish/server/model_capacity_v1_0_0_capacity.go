// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

// CapacityV100Capacity - This is the schema definition for the Capacity of a device. It represents the properties for capacity for any data store.
type CapacityV100Capacity struct {
	Data CapacityV100CapacityInfo `json:"Data,omitempty"`

	// Marks that the capacity is not necessarily fully allocated.
	IsThinProvisioned *bool `json:"IsThinProvisioned,omitempty"`

	Metadata CapacityV100CapacityInfo `json:"Metadata,omitempty"`

	Snapshot CapacityV100CapacityInfo `json:"Snapshot,omitempty"`
}

// AssertCapacityV100CapacityRequired checks if the required fields are not zero-ed
func AssertCapacityV100CapacityRequired(obj CapacityV100Capacity) error {
	if err := AssertCapacityV100CapacityInfoRequired(obj.Data); err != nil {
		return err
	}
	if err := AssertCapacityV100CapacityInfoRequired(obj.Metadata); err != nil {
		return err
	}
	if err := AssertCapacityV100CapacityInfoRequired(obj.Snapshot); err != nil {
		return err
	}
	return nil
}

// AssertCapacityV100CapacityConstraints checks if the values respects the defined constraints
func AssertCapacityV100CapacityConstraints(obj CapacityV100Capacity) error {
	if err := AssertCapacityV100CapacityInfoConstraints(obj.Data); err != nil {
		return err
	}
	if err := AssertCapacityV100CapacityInfoConstraints(obj.Metadata); err != nil {
		return err
	}
	if err := AssertCapacityV100CapacityInfoConstraints(obj.Snapshot); err != nil {
		return err
	}
	return nil
}
