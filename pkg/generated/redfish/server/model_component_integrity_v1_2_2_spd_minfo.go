// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

// ComponentIntegrityV122SpdMinfo - Integrity information about an SPDM Responder as reported by an SPDM Requester.
type ComponentIntegrityV122SpdMinfo struct {
	ComponentCommunication ComponentIntegrityV122SpdMcommunication `json:"ComponentCommunication,omitempty"`

	IdentityAuthentication ComponentIntegrityV122SpdMidentity `json:"IdentityAuthentication,omitempty"`

	MeasurementSet ComponentIntegrityV122SpdMmeasurementSet `json:"MeasurementSet,omitempty"`

	Requester OdataV4IdRef `json:"Requester"`
}

// AssertComponentIntegrityV122SpdMinfoRequired checks if the required fields are not zero-ed
func AssertComponentIntegrityV122SpdMinfoRequired(obj ComponentIntegrityV122SpdMinfo) error {
	elements := map[string]interface{}{
		"Requester": obj.Requester,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertComponentIntegrityV122SpdMcommunicationRequired(obj.ComponentCommunication); err != nil {
		return err
	}
	if err := AssertComponentIntegrityV122SpdMidentityRequired(obj.IdentityAuthentication); err != nil {
		return err
	}
	if err := AssertComponentIntegrityV122SpdMmeasurementSetRequired(obj.MeasurementSet); err != nil {
		return err
	}
	if err := AssertOdataV4IdRefRequired(obj.Requester); err != nil {
		return err
	}
	return nil
}

// AssertComponentIntegrityV122SpdMinfoConstraints checks if the values respects the defined constraints
func AssertComponentIntegrityV122SpdMinfoConstraints(obj ComponentIntegrityV122SpdMinfo) error {
	if err := AssertComponentIntegrityV122SpdMcommunicationConstraints(obj.ComponentCommunication); err != nil {
		return err
	}
	if err := AssertComponentIntegrityV122SpdMidentityConstraints(obj.IdentityAuthentication); err != nil {
		return err
	}
	if err := AssertComponentIntegrityV122SpdMmeasurementSetConstraints(obj.MeasurementSet); err != nil {
		return err
	}
	if err := AssertOdataV4IdRefConstraints(obj.Requester); err != nil {
		return err
	}
	return nil
}
