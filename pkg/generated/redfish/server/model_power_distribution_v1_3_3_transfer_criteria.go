// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"errors"
)

// PowerDistributionV133TransferCriteria - The criteria used to initiate a transfer for an automatic transfer switch.
type PowerDistributionV133TransferCriteria struct {

	// The frequency in hertz units over the nominal value that satisfies a criterion for transfer.
	OverNominalFrequencyHz *float32 `json:"OverNominalFrequencyHz,omitempty"`

	// The positive percentage of voltage RMS over the nominal value that satisfies a criterion for transfer.
	OverVoltageRMSPercentage *float32 `json:"OverVoltageRMSPercentage,omitempty"`

	TransferSensitivity PowerDistributionV133TransferSensitivityType `json:"TransferSensitivity,omitempty"`

	// The frequency in hertz units under the nominal value that satisfies a criterion for transfer.
	UnderNominalFrequencyHz *float32 `json:"UnderNominalFrequencyHz,omitempty"`

	// The negative percentage of voltage RMS under the nominal value that satisfies a criterion for transfer.
	UnderVoltageRMSPercentage *float32 `json:"UnderVoltageRMSPercentage,omitempty"`
}

// AssertPowerDistributionV133TransferCriteriaRequired checks if the required fields are not zero-ed
func AssertPowerDistributionV133TransferCriteriaRequired(obj PowerDistributionV133TransferCriteria) error {
	return nil
}

// AssertPowerDistributionV133TransferCriteriaConstraints checks if the values respects the defined constraints
func AssertPowerDistributionV133TransferCriteriaConstraints(obj PowerDistributionV133TransferCriteria) error {
	if obj.OverVoltageRMSPercentage != nil && *obj.OverVoltageRMSPercentage < 0 {
		return &ParsingError{Param: "OverVoltageRMSPercentage", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.UnderVoltageRMSPercentage != nil && *obj.UnderVoltageRMSPercentage > 0 {
		return &ParsingError{Param: "UnderVoltageRMSPercentage", Err: errors.New(errMsgMaxValueConstraint)}
	}
	return nil
}
