// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type EventServiceV1101SmtpConnectionProtocol string

// List of EventServiceV1101SmtpConnectionProtocol
const (
	EVENTSERVICEV1101SMTPCONNECTIONPROTOCOL_NONE        EventServiceV1101SmtpConnectionProtocol = "None"
	EVENTSERVICEV1101SMTPCONNECTIONPROTOCOL_AUTO_DETECT EventServiceV1101SmtpConnectionProtocol = "AutoDetect"
	EVENTSERVICEV1101SMTPCONNECTIONPROTOCOL_START_TLS   EventServiceV1101SmtpConnectionProtocol = "StartTLS"
	EVENTSERVICEV1101SMTPCONNECTIONPROTOCOL_TLS_SSL     EventServiceV1101SmtpConnectionProtocol = "TLS_SSL"
)

// AllowedEventServiceV1101SmtpConnectionProtocolEnumValues is all the allowed values of EventServiceV1101SmtpConnectionProtocol enum
var AllowedEventServiceV1101SmtpConnectionProtocolEnumValues = []EventServiceV1101SmtpConnectionProtocol{
	"None",
	"AutoDetect",
	"StartTLS",
	"TLS_SSL",
}

// validEventServiceV1101SmtpConnectionProtocolEnumValue provides a map of EventServiceV1101SmtpConnectionProtocols for fast verification of use input
var validEventServiceV1101SmtpConnectionProtocolEnumValues = map[EventServiceV1101SmtpConnectionProtocol]struct{}{
	"None":       {},
	"AutoDetect": {},
	"StartTLS":   {},
	"TLS_SSL":    {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EventServiceV1101SmtpConnectionProtocol) IsValid() bool {
	_, ok := validEventServiceV1101SmtpConnectionProtocolEnumValues[v]
	return ok
}

// NewEventServiceV1101SmtpConnectionProtocolFromValue returns a pointer to a valid EventServiceV1101SmtpConnectionProtocol
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEventServiceV1101SmtpConnectionProtocolFromValue(v string) (EventServiceV1101SmtpConnectionProtocol, error) {
	ev := EventServiceV1101SmtpConnectionProtocol(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for EventServiceV1101SmtpConnectionProtocol: valid values are %v", v, AllowedEventServiceV1101SmtpConnectionProtocolEnumValues)
}

// AssertEventServiceV1101SmtpConnectionProtocolRequired checks if the required fields are not zero-ed
func AssertEventServiceV1101SmtpConnectionProtocolRequired(obj EventServiceV1101SmtpConnectionProtocol) error {
	return nil
}

// AssertEventServiceV1101SmtpConnectionProtocolConstraints checks if the values respects the defined constraints
func AssertEventServiceV1101SmtpConnectionProtocolConstraints(obj EventServiceV1101SmtpConnectionProtocol) error {
	return nil
}
