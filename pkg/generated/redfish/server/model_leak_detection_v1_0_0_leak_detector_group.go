// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

// LeakDetectionV100LeakDetectorGroup - A group of leak detection equipment.
type LeakDetectionV100LeakDetectorGroup struct {

	// The leak detection states from all related leak detection devices in this group.
	Detectors []LeakDetectorLeakDetectorArrayExcerpt `json:"Detectors,omitempty"`

	// The number of items in a collection.
	DetectorsodataCount int64 `json:"Detectors@odata.count,omitempty"`

	// The name of this leak detector group.
	GroupName string `json:"GroupName,omitempty"`

	HumidityPercent SensorSensorExcerpt `json:"HumidityPercent,omitempty"`
}

// AssertLeakDetectionV100LeakDetectorGroupRequired checks if the required fields are not zero-ed
func AssertLeakDetectionV100LeakDetectorGroupRequired(obj LeakDetectionV100LeakDetectorGroup) error {
	for _, el := range obj.Detectors {
		if err := AssertLeakDetectorLeakDetectorArrayExcerptRequired(el); err != nil {
			return err
		}
	}
	if err := AssertSensorSensorExcerptRequired(obj.HumidityPercent); err != nil {
		return err
	}
	return nil
}

// AssertLeakDetectionV100LeakDetectorGroupConstraints checks if the values respects the defined constraints
func AssertLeakDetectionV100LeakDetectorGroupConstraints(obj LeakDetectionV100LeakDetectorGroup) error {
	for _, el := range obj.Detectors {
		if err := AssertLeakDetectorLeakDetectorArrayExcerptConstraints(el); err != nil {
			return err
		}
	}
	if err := AssertSensorSensorExcerptConstraints(obj.HumidityPercent); err != nil {
		return err
	}
	return nil
}
