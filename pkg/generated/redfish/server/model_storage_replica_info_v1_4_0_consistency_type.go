// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

// StorageReplicaInfoV140ConsistencyType : The values of ConsistencyType indicates the consistency type used by the source and its associated target group.
type StorageReplicaInfoV140ConsistencyType string

// List of StorageReplicaInfoV140ConsistencyType
const (
	STORAGEREPLICAINFOV140CONSISTENCYTYPE_SEQUENTIALLY_CONSISTENT StorageReplicaInfoV140ConsistencyType = "SequentiallyConsistent"
)

// AllowedStorageReplicaInfoV140ConsistencyTypeEnumValues is all the allowed values of StorageReplicaInfoV140ConsistencyType enum
var AllowedStorageReplicaInfoV140ConsistencyTypeEnumValues = []StorageReplicaInfoV140ConsistencyType{
	"SequentiallyConsistent",
}

// validStorageReplicaInfoV140ConsistencyTypeEnumValue provides a map of StorageReplicaInfoV140ConsistencyTypes for fast verification of use input
var validStorageReplicaInfoV140ConsistencyTypeEnumValues = map[StorageReplicaInfoV140ConsistencyType]struct{}{
	"SequentiallyConsistent": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v StorageReplicaInfoV140ConsistencyType) IsValid() bool {
	_, ok := validStorageReplicaInfoV140ConsistencyTypeEnumValues[v]
	return ok
}

// NewStorageReplicaInfoV140ConsistencyTypeFromValue returns a pointer to a valid StorageReplicaInfoV140ConsistencyType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewStorageReplicaInfoV140ConsistencyTypeFromValue(v string) (StorageReplicaInfoV140ConsistencyType, error) {
	ev := StorageReplicaInfoV140ConsistencyType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for StorageReplicaInfoV140ConsistencyType: valid values are %v", v, AllowedStorageReplicaInfoV140ConsistencyTypeEnumValues)
}

// AssertStorageReplicaInfoV140ConsistencyTypeRequired checks if the required fields are not zero-ed
func AssertStorageReplicaInfoV140ConsistencyTypeRequired(obj StorageReplicaInfoV140ConsistencyType) error {
	return nil
}

// AssertStorageReplicaInfoV140ConsistencyTypeConstraints checks if the values respects the defined constraints
func AssertStorageReplicaInfoV140ConsistencyTypeConstraints(obj StorageReplicaInfoV140ConsistencyType) error {
	return nil
}
