// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type PcieDeviceV1130LaneSplittingType string

// List of PcieDeviceV1130LaneSplittingType
const (
	PCIEDEVICEV1130LANESPLITTINGTYPE_NONE       PcieDeviceV1130LaneSplittingType = "None"
	PCIEDEVICEV1130LANESPLITTINGTYPE_BRIDGED    PcieDeviceV1130LaneSplittingType = "Bridged"
	PCIEDEVICEV1130LANESPLITTINGTYPE_BIFURCATED PcieDeviceV1130LaneSplittingType = "Bifurcated"
)

// AllowedPcieDeviceV1130LaneSplittingTypeEnumValues is all the allowed values of PcieDeviceV1130LaneSplittingType enum
var AllowedPcieDeviceV1130LaneSplittingTypeEnumValues = []PcieDeviceV1130LaneSplittingType{
	"None",
	"Bridged",
	"Bifurcated",
}

// validPcieDeviceV1130LaneSplittingTypeEnumValue provides a map of PcieDeviceV1130LaneSplittingTypes for fast verification of use input
var validPcieDeviceV1130LaneSplittingTypeEnumValues = map[PcieDeviceV1130LaneSplittingType]struct{}{
	"None":       {},
	"Bridged":    {},
	"Bifurcated": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PcieDeviceV1130LaneSplittingType) IsValid() bool {
	_, ok := validPcieDeviceV1130LaneSplittingTypeEnumValues[v]
	return ok
}

// NewPcieDeviceV1130LaneSplittingTypeFromValue returns a pointer to a valid PcieDeviceV1130LaneSplittingType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPcieDeviceV1130LaneSplittingTypeFromValue(v string) (PcieDeviceV1130LaneSplittingType, error) {
	ev := PcieDeviceV1130LaneSplittingType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for PcieDeviceV1130LaneSplittingType: valid values are %v", v, AllowedPcieDeviceV1130LaneSplittingTypeEnumValues)
}

// AssertPcieDeviceV1130LaneSplittingTypeRequired checks if the required fields are not zero-ed
func AssertPcieDeviceV1130LaneSplittingTypeRequired(obj PcieDeviceV1130LaneSplittingType) error {
	return nil
}

// AssertPcieDeviceV1130LaneSplittingTypeConstraints checks if the values respects the defined constraints
func AssertPcieDeviceV1130LaneSplittingTypeConstraints(obj PcieDeviceV1130LaneSplittingType) error {
	return nil
}
