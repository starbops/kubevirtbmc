// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"errors"
)

// PcieDevicePcieInterface - Properties that describe a PCIe interface.
type PcieDevicePcieInterface struct {

	// The number of PCIe lanes in use by this device.
	LanesInUse *int64 `json:"LanesInUse,omitempty"`

	// The number of PCIe lanes supported by this device.
	MaxLanes *int64 `json:"MaxLanes,omitempty"`

	MaxPCIeType *PcieDevicePcieTypes `json:"MaxPCIeType,omitempty"`

	// The OEM extension.
	Oem map[string]interface{} `json:"Oem,omitempty"`

	PCIeType *PcieDevicePcieTypes `json:"PCIeType,omitempty"`
}

// AssertPcieDevicePcieInterfaceRequired checks if the required fields are not zero-ed
func AssertPcieDevicePcieInterfaceRequired(obj PcieDevicePcieInterface) error {
	return nil
}

// AssertPcieDevicePcieInterfaceConstraints checks if the values respects the defined constraints
func AssertPcieDevicePcieInterfaceConstraints(obj PcieDevicePcieInterface) error {
	if obj.LanesInUse != nil && *obj.LanesInUse > 32 {
		return &ParsingError{Param: "LanesInUse", Err: errors.New(errMsgMaxValueConstraint)}
	}
	if obj.MaxLanes != nil && *obj.MaxLanes > 32 {
		return &ParsingError{Param: "MaxLanes", Err: errors.New(errMsgMaxValueConstraint)}
	}
	return nil
}
