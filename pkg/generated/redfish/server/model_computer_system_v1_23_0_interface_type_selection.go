// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2024.3
 */

package server

import (
	"fmt"
)

// ComputerSystemV1230InterfaceTypeSelection : The enumerations of `InterfaceTypeSelection` specify the method for switching the TrustedModule InterfaceType, for instance between TPM1_2 and TPM2_0, if supported.
type ComputerSystemV1230InterfaceTypeSelection string

// List of ComputerSystemV1230InterfaceTypeSelection
const (
	COMPUTERSYSTEMV1230INTERFACETYPESELECTION_NONE            ComputerSystemV1230InterfaceTypeSelection = "None"
	COMPUTERSYSTEMV1230INTERFACETYPESELECTION_FIRMWARE_UPDATE ComputerSystemV1230InterfaceTypeSelection = "FirmwareUpdate"
	COMPUTERSYSTEMV1230INTERFACETYPESELECTION_BIOS_SETTING    ComputerSystemV1230InterfaceTypeSelection = "BiosSetting"
	COMPUTERSYSTEMV1230INTERFACETYPESELECTION_OEM_METHOD      ComputerSystemV1230InterfaceTypeSelection = "OemMethod"
)

// AllowedComputerSystemV1230InterfaceTypeSelectionEnumValues is all the allowed values of ComputerSystemV1230InterfaceTypeSelection enum
var AllowedComputerSystemV1230InterfaceTypeSelectionEnumValues = []ComputerSystemV1230InterfaceTypeSelection{
	"None",
	"FirmwareUpdate",
	"BiosSetting",
	"OemMethod",
}

// validComputerSystemV1230InterfaceTypeSelectionEnumValue provides a map of ComputerSystemV1230InterfaceTypeSelections for fast verification of use input
var validComputerSystemV1230InterfaceTypeSelectionEnumValues = map[ComputerSystemV1230InterfaceTypeSelection]struct{}{
	"None":           {},
	"FirmwareUpdate": {},
	"BiosSetting":    {},
	"OemMethod":      {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ComputerSystemV1230InterfaceTypeSelection) IsValid() bool {
	_, ok := validComputerSystemV1230InterfaceTypeSelectionEnumValues[v]
	return ok
}

// NewComputerSystemV1230InterfaceTypeSelectionFromValue returns a pointer to a valid ComputerSystemV1230InterfaceTypeSelection
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewComputerSystemV1230InterfaceTypeSelectionFromValue(v string) (ComputerSystemV1230InterfaceTypeSelection, error) {
	ev := ComputerSystemV1230InterfaceTypeSelection(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ComputerSystemV1230InterfaceTypeSelection: valid values are %v", v, AllowedComputerSystemV1230InterfaceTypeSelectionEnumValues)
}

// AssertComputerSystemV1230InterfaceTypeSelectionRequired checks if the required fields are not zero-ed
func AssertComputerSystemV1230InterfaceTypeSelectionRequired(obj ComputerSystemV1230InterfaceTypeSelection) error {
	return nil
}

// AssertComputerSystemV1230InterfaceTypeSelectionConstraints checks if the values respects the defined constraints
func AssertComputerSystemV1230InterfaceTypeSelectionConstraints(obj ComputerSystemV1230InterfaceTypeSelection) error {
	return nil
}
