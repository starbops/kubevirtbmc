// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

// UsbControllerV100Links - The links to other resources that are related to this resource.
type UsbControllerV100Links struct {

	// The OEM extension.
	Oem map[string]interface{} `json:"Oem,omitempty"`

	PCIeDevice OdataV4IdRef `json:"PCIeDevice,omitempty"`

	// An array of links to the processors that can utilize this USB controller.
	Processors []OdataV4IdRef `json:"Processors,omitempty"`

	// The number of items in a collection.
	ProcessorsodataCount int64 `json:"Processors@odata.count,omitempty"`
}

// AssertUsbControllerV100LinksRequired checks if the required fields are not zero-ed
func AssertUsbControllerV100LinksRequired(obj UsbControllerV100Links) error {
	if err := AssertOdataV4IdRefRequired(obj.PCIeDevice); err != nil {
		return err
	}
	for _, el := range obj.Processors {
		if err := AssertOdataV4IdRefRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertUsbControllerV100LinksConstraints checks if the values respects the defined constraints
func AssertUsbControllerV100LinksConstraints(obj UsbControllerV100Links) error {
	if err := AssertOdataV4IdRefConstraints(obj.PCIeDevice); err != nil {
		return err
	}
	for _, el := range obj.Processors {
		if err := AssertOdataV4IdRefConstraints(el); err != nil {
			return err
		}
	}
	return nil
}
