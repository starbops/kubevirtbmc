// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

// TrustedComponentV130TrustedComponent - The TrustedComponent resource represents a trusted device, such as a TPM.
type TrustedComponentV130TrustedComponent struct {

	// The OData description of a payload.
	OdataContext string `json:"@odata.context,omitempty"`

	// The current ETag of the resource.
	OdataEtag string `json:"@odata.etag,omitempty"`

	// The unique identifier for a resource.
	OdataId string `json:"@odata.id"`

	// The type of a resource.
	OdataType string `json:"@odata.type"`

	Actions TrustedComponentV130Actions `json:"Actions,omitempty"`

	Certificates OdataV4IdRef `json:"Certificates,omitempty"`

	// The description of this resource.  Used for commonality in the schema definitions.
	Description string `json:"Description,omitempty"`

	// The software version of the active software image on the trusted component.
	FirmwareVersion *string `json:"FirmwareVersion,omitempty"`

	// The unique identifier for this resource within the collection of similar resources.
	Id string `json:"Id"`

	Links TrustedComponentV130Links `json:"Links,omitempty"`

	// The manufacturer of this trusted component.
	Manufacturer *string `json:"Manufacturer,omitempty"`

	// The model number of the trusted component.
	Model *string `json:"Model,omitempty"`

	// The name of the resource or array member.
	Name string `json:"Name"`

	// The OEM extension.
	Oem map[string]interface{} `json:"Oem,omitempty"`

	// The part number of the trusted component.
	PartNumber *string `json:"PartNumber,omitempty"`

	// The SKU of the trusted component.
	SKU *string `json:"SKU,omitempty"`

	// The serial number of the trusted component.
	SerialNumber *string `json:"SerialNumber,omitempty"`

	Status ResourceStatus `json:"Status,omitempty"`

	TPM TrustedComponentV130Tpm `json:"TPM,omitempty"`

	TrustedComponentType TrustedComponentV130TrustedComponentType `json:"TrustedComponentType"`

	UUID string `json:"UUID,omitempty" validate:"regexp=^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"`
}

// AssertTrustedComponentV130TrustedComponentRequired checks if the required fields are not zero-ed
func AssertTrustedComponentV130TrustedComponentRequired(obj TrustedComponentV130TrustedComponent) error {
	elements := map[string]interface{}{
		"@odata.id":            obj.OdataId,
		"@odata.type":          obj.OdataType,
		"Id":                   obj.Id,
		"Name":                 obj.Name,
		"TrustedComponentType": obj.TrustedComponentType,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertTrustedComponentV130ActionsRequired(obj.Actions); err != nil {
		return err
	}
	if err := AssertOdataV4IdRefRequired(obj.Certificates); err != nil {
		return err
	}
	if err := AssertTrustedComponentV130LinksRequired(obj.Links); err != nil {
		return err
	}
	if err := AssertResourceStatusRequired(obj.Status); err != nil {
		return err
	}
	if err := AssertTrustedComponentV130TpmRequired(obj.TPM); err != nil {
		return err
	}
	return nil
}

// AssertTrustedComponentV130TrustedComponentConstraints checks if the values respects the defined constraints
func AssertTrustedComponentV130TrustedComponentConstraints(obj TrustedComponentV130TrustedComponent) error {
	if err := AssertTrustedComponentV130ActionsConstraints(obj.Actions); err != nil {
		return err
	}
	if err := AssertOdataV4IdRefConstraints(obj.Certificates); err != nil {
		return err
	}
	if err := AssertTrustedComponentV130LinksConstraints(obj.Links); err != nil {
		return err
	}
	if err := AssertResourceStatusConstraints(obj.Status); err != nil {
		return err
	}
	if err := AssertTrustedComponentV130TpmConstraints(obj.TPM); err != nil {
		return err
	}
	return nil
}
