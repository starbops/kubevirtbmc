// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"errors"
)

// PowerV172InputRange - This type describes an input range for a power supply.
type PowerV172InputRange struct {
	InputType PowerV172InputType `json:"InputType,omitempty"`

	// The maximum line input frequency at which this power supply input range is effective.
	MaximumFrequencyHz *float32 `json:"MaximumFrequencyHz,omitempty"`

	// The maximum line input voltage at which this power supply input range is effective.
	MaximumVoltage *float32 `json:"MaximumVoltage,omitempty"`

	// The minimum line input frequency at which this power supply input range is effective.
	MinimumFrequencyHz *float32 `json:"MinimumFrequencyHz,omitempty"`

	// The minimum line input voltage at which this power supply input range is effective.
	MinimumVoltage *float32 `json:"MinimumVoltage,omitempty"`

	// The OEM extension.
	Oem map[string]interface{} `json:"Oem,omitempty"`

	// The maximum capacity of this power supply when operating in this input range.
	OutputWattage *float32 `json:"OutputWattage,omitempty"`
}

// AssertPowerV172InputRangeRequired checks if the required fields are not zero-ed
func AssertPowerV172InputRangeRequired(obj PowerV172InputRange) error {
	return nil
}

// AssertPowerV172InputRangeConstraints checks if the values respects the defined constraints
func AssertPowerV172InputRangeConstraints(obj PowerV172InputRange) error {
	if obj.MaximumFrequencyHz != nil && *obj.MaximumFrequencyHz < 0 {
		return &ParsingError{Param: "MaximumFrequencyHz", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.MinimumFrequencyHz != nil && *obj.MinimumFrequencyHz < 0 {
		return &ParsingError{Param: "MinimumFrequencyHz", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.OutputWattage != nil && *obj.OutputWattage < 0 {
		return &ParsingError{Param: "OutputWattage", Err: errors.New(errMsgMinValueConstraint)}
	}
	return nil
}
