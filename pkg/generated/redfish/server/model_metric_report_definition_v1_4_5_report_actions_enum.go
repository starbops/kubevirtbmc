// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

// MetricReportDefinitionV145ReportActionsEnum : Actions to perform when a metric report is generated.
type MetricReportDefinitionV145ReportActionsEnum string

// List of MetricReportDefinitionV145ReportActionsEnum
const (
	METRICREPORTDEFINITIONV145REPORTACTIONSENUM_LOG_TO_METRIC_REPORTS_COLLECTION MetricReportDefinitionV145ReportActionsEnum = "LogToMetricReportsCollection"
	METRICREPORTDEFINITIONV145REPORTACTIONSENUM_REDFISH_EVENT                    MetricReportDefinitionV145ReportActionsEnum = "RedfishEvent"
)

// AllowedMetricReportDefinitionV145ReportActionsEnumEnumValues is all the allowed values of MetricReportDefinitionV145ReportActionsEnum enum
var AllowedMetricReportDefinitionV145ReportActionsEnumEnumValues = []MetricReportDefinitionV145ReportActionsEnum{
	"LogToMetricReportsCollection",
	"RedfishEvent",
}

// validMetricReportDefinitionV145ReportActionsEnumEnumValue provides a map of MetricReportDefinitionV145ReportActionsEnums for fast verification of use input
var validMetricReportDefinitionV145ReportActionsEnumEnumValues = map[MetricReportDefinitionV145ReportActionsEnum]struct{}{
	"LogToMetricReportsCollection": {},
	"RedfishEvent":                 {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MetricReportDefinitionV145ReportActionsEnum) IsValid() bool {
	_, ok := validMetricReportDefinitionV145ReportActionsEnumEnumValues[v]
	return ok
}

// NewMetricReportDefinitionV145ReportActionsEnumFromValue returns a pointer to a valid MetricReportDefinitionV145ReportActionsEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMetricReportDefinitionV145ReportActionsEnumFromValue(v string) (MetricReportDefinitionV145ReportActionsEnum, error) {
	ev := MetricReportDefinitionV145ReportActionsEnum(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for MetricReportDefinitionV145ReportActionsEnum: valid values are %v", v, AllowedMetricReportDefinitionV145ReportActionsEnumEnumValues)
}

// AssertMetricReportDefinitionV145ReportActionsEnumRequired checks if the required fields are not zero-ed
func AssertMetricReportDefinitionV145ReportActionsEnumRequired(obj MetricReportDefinitionV145ReportActionsEnum) error {
	return nil
}

// AssertMetricReportDefinitionV145ReportActionsEnumConstraints checks if the values respects the defined constraints
func AssertMetricReportDefinitionV145ReportActionsEnumConstraints(obj MetricReportDefinitionV145ReportActionsEnum) error {
	return nil
}
