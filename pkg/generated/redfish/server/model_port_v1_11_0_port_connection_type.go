// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type PortV1110PortConnectionType string

// List of PortV1110PortConnectionType
const (
	PORTV1110PORTCONNECTIONTYPE_NOT_CONNECTED   PortV1110PortConnectionType = "NotConnected"
	PORTV1110PORTCONNECTIONTYPE_N_PORT          PortV1110PortConnectionType = "NPort"
	PORTV1110PORTCONNECTIONTYPE_POINT_TO_POINT  PortV1110PortConnectionType = "PointToPoint"
	PORTV1110PORTCONNECTIONTYPE_PRIVATE_LOOP    PortV1110PortConnectionType = "PrivateLoop"
	PORTV1110PORTCONNECTIONTYPE_PUBLIC_LOOP     PortV1110PortConnectionType = "PublicLoop"
	PORTV1110PORTCONNECTIONTYPE_GENERIC         PortV1110PortConnectionType = "Generic"
	PORTV1110PORTCONNECTIONTYPE_EXTENDER_FABRIC PortV1110PortConnectionType = "ExtenderFabric"
	PORTV1110PORTCONNECTIONTYPE_F_PORT          PortV1110PortConnectionType = "FPort"
	PORTV1110PORTCONNECTIONTYPE_E_PORT          PortV1110PortConnectionType = "EPort"
	PORTV1110PORTCONNECTIONTYPE_TE_PORT         PortV1110PortConnectionType = "TEPort"
	PORTV1110PORTCONNECTIONTYPE_NP_PORT         PortV1110PortConnectionType = "NPPort"
	PORTV1110PORTCONNECTIONTYPE_G_PORT          PortV1110PortConnectionType = "GPort"
	PORTV1110PORTCONNECTIONTYPE_NL_PORT         PortV1110PortConnectionType = "NLPort"
	PORTV1110PORTCONNECTIONTYPE_FL_PORT         PortV1110PortConnectionType = "FLPort"
	PORTV1110PORTCONNECTIONTYPE_EX_PORT         PortV1110PortConnectionType = "EXPort"
	PORTV1110PORTCONNECTIONTYPE_U_PORT          PortV1110PortConnectionType = "UPort"
	PORTV1110PORTCONNECTIONTYPE_D_PORT          PortV1110PortConnectionType = "DPort"
)

// AllowedPortV1110PortConnectionTypeEnumValues is all the allowed values of PortV1110PortConnectionType enum
var AllowedPortV1110PortConnectionTypeEnumValues = []PortV1110PortConnectionType{
	"NotConnected",
	"NPort",
	"PointToPoint",
	"PrivateLoop",
	"PublicLoop",
	"Generic",
	"ExtenderFabric",
	"FPort",
	"EPort",
	"TEPort",
	"NPPort",
	"GPort",
	"NLPort",
	"FLPort",
	"EXPort",
	"UPort",
	"DPort",
}

// validPortV1110PortConnectionTypeEnumValue provides a map of PortV1110PortConnectionTypes for fast verification of use input
var validPortV1110PortConnectionTypeEnumValues = map[PortV1110PortConnectionType]struct{}{
	"NotConnected":   {},
	"NPort":          {},
	"PointToPoint":   {},
	"PrivateLoop":    {},
	"PublicLoop":     {},
	"Generic":        {},
	"ExtenderFabric": {},
	"FPort":          {},
	"EPort":          {},
	"TEPort":         {},
	"NPPort":         {},
	"GPort":          {},
	"NLPort":         {},
	"FLPort":         {},
	"EXPort":         {},
	"UPort":          {},
	"DPort":          {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PortV1110PortConnectionType) IsValid() bool {
	_, ok := validPortV1110PortConnectionTypeEnumValues[v]
	return ok
}

// NewPortV1110PortConnectionTypeFromValue returns a pointer to a valid PortV1110PortConnectionType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPortV1110PortConnectionTypeFromValue(v string) (PortV1110PortConnectionType, error) {
	ev := PortV1110PortConnectionType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for PortV1110PortConnectionType: valid values are %v", v, AllowedPortV1110PortConnectionTypeEnumValues)
}

// AssertPortV1110PortConnectionTypeRequired checks if the required fields are not zero-ed
func AssertPortV1110PortConnectionTypeRequired(obj PortV1110PortConnectionType) error {
	return nil
}

// AssertPortV1110PortConnectionTypeConstraints checks if the values respects the defined constraints
func AssertPortV1110PortConnectionTypeConstraints(obj PortV1110PortConnectionType) error {
	return nil
}
