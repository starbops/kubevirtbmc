// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type NetworkDeviceFunctionV191BootMode string

// List of NetworkDeviceFunctionV191BootMode
const (
	NETWORKDEVICEFUNCTIONV191BOOTMODE_DISABLED                    NetworkDeviceFunctionV191BootMode = "Disabled"
	NETWORKDEVICEFUNCTIONV191BOOTMODE_PXE                         NetworkDeviceFunctionV191BootMode = "PXE"
	NETWORKDEVICEFUNCTIONV191BOOTMODE_I_SCSI                      NetworkDeviceFunctionV191BootMode = "iSCSI"
	NETWORKDEVICEFUNCTIONV191BOOTMODE_FIBRE_CHANNEL               NetworkDeviceFunctionV191BootMode = "FibreChannel"
	NETWORKDEVICEFUNCTIONV191BOOTMODE_FIBRE_CHANNEL_OVER_ETHERNET NetworkDeviceFunctionV191BootMode = "FibreChannelOverEthernet"
	NETWORKDEVICEFUNCTIONV191BOOTMODE_HTTP                        NetworkDeviceFunctionV191BootMode = "HTTP"
)

// AllowedNetworkDeviceFunctionV191BootModeEnumValues is all the allowed values of NetworkDeviceFunctionV191BootMode enum
var AllowedNetworkDeviceFunctionV191BootModeEnumValues = []NetworkDeviceFunctionV191BootMode{
	"Disabled",
	"PXE",
	"iSCSI",
	"FibreChannel",
	"FibreChannelOverEthernet",
	"HTTP",
}

// validNetworkDeviceFunctionV191BootModeEnumValue provides a map of NetworkDeviceFunctionV191BootModes for fast verification of use input
var validNetworkDeviceFunctionV191BootModeEnumValues = map[NetworkDeviceFunctionV191BootMode]struct{}{
	"Disabled":                 {},
	"PXE":                      {},
	"iSCSI":                    {},
	"FibreChannel":             {},
	"FibreChannelOverEthernet": {},
	"HTTP":                     {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v NetworkDeviceFunctionV191BootMode) IsValid() bool {
	_, ok := validNetworkDeviceFunctionV191BootModeEnumValues[v]
	return ok
}

// NewNetworkDeviceFunctionV191BootModeFromValue returns a pointer to a valid NetworkDeviceFunctionV191BootMode
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewNetworkDeviceFunctionV191BootModeFromValue(v string) (NetworkDeviceFunctionV191BootMode, error) {
	ev := NetworkDeviceFunctionV191BootMode(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for NetworkDeviceFunctionV191BootMode: valid values are %v", v, AllowedNetworkDeviceFunctionV191BootModeEnumValues)
}

// AssertNetworkDeviceFunctionV191BootModeRequired checks if the required fields are not zero-ed
func AssertNetworkDeviceFunctionV191BootModeRequired(obj NetworkDeviceFunctionV191BootMode) error {
	return nil
}

// AssertNetworkDeviceFunctionV191BootModeConstraints checks if the values respects the defined constraints
func AssertNetworkDeviceFunctionV191BootModeConstraints(obj NetworkDeviceFunctionV191BootMode) error {
	return nil
}
