// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"errors"
)

// ManagerNetworkProtocolV1100SsdProtocol - The settings for a network protocol associated with a manager.
type ManagerNetworkProtocolV1100SsdProtocol struct {
	NotifyIPv6Scope ManagerNetworkProtocolV1100NotifyIpv6Scope `json:"NotifyIPv6Scope,omitempty"`

	// The time interval, in seconds, between transmissions of the multicast NOTIFY ALIVE message from this service for SSDP.
	NotifyMulticastIntervalSeconds *int64 `json:"NotifyMulticastIntervalSeconds,omitempty"`

	// The time-to-live hop count for SSDP multicast NOTIFY messages.
	NotifyTTL *int64 `json:"NotifyTTL,omitempty"`

	// The protocol port.
	Port *int64 `json:"Port,omitempty"`

	// An indication of whether the protocol is enabled.
	ProtocolEnabled *bool `json:"ProtocolEnabled,omitempty"`
}

// AssertManagerNetworkProtocolV1100SsdProtocolRequired checks if the required fields are not zero-ed
func AssertManagerNetworkProtocolV1100SsdProtocolRequired(obj ManagerNetworkProtocolV1100SsdProtocol) error {
	return nil
}

// AssertManagerNetworkProtocolV1100SsdProtocolConstraints checks if the values respects the defined constraints
func AssertManagerNetworkProtocolV1100SsdProtocolConstraints(obj ManagerNetworkProtocolV1100SsdProtocol) error {
	if obj.NotifyMulticastIntervalSeconds != nil && *obj.NotifyMulticastIntervalSeconds < 0 {
		return &ParsingError{Param: "NotifyMulticastIntervalSeconds", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.NotifyTTL != nil && *obj.NotifyTTL < 1 {
		return &ParsingError{Param: "NotifyTTL", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.Port != nil && *obj.Port < 0 {
		return &ParsingError{Param: "Port", Err: errors.New(errMsgMinValueConstraint)}
	}
	return nil
}
