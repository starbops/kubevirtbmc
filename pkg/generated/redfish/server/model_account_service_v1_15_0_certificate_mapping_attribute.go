// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type AccountServiceV1150CertificateMappingAttribute string

// List of AccountServiceV1150CertificateMappingAttribute
const (
	ACCOUNTSERVICEV1150CERTIFICATEMAPPINGATTRIBUTE_WHOLE               AccountServiceV1150CertificateMappingAttribute = "Whole"
	ACCOUNTSERVICEV1150CERTIFICATEMAPPINGATTRIBUTE_COMMON_NAME         AccountServiceV1150CertificateMappingAttribute = "CommonName"
	ACCOUNTSERVICEV1150CERTIFICATEMAPPINGATTRIBUTE_USER_PRINCIPAL_NAME AccountServiceV1150CertificateMappingAttribute = "UserPrincipalName"
)

// AllowedAccountServiceV1150CertificateMappingAttributeEnumValues is all the allowed values of AccountServiceV1150CertificateMappingAttribute enum
var AllowedAccountServiceV1150CertificateMappingAttributeEnumValues = []AccountServiceV1150CertificateMappingAttribute{
	"Whole",
	"CommonName",
	"UserPrincipalName",
}

// validAccountServiceV1150CertificateMappingAttributeEnumValue provides a map of AccountServiceV1150CertificateMappingAttributes for fast verification of use input
var validAccountServiceV1150CertificateMappingAttributeEnumValues = map[AccountServiceV1150CertificateMappingAttribute]struct{}{
	"Whole":             {},
	"CommonName":        {},
	"UserPrincipalName": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AccountServiceV1150CertificateMappingAttribute) IsValid() bool {
	_, ok := validAccountServiceV1150CertificateMappingAttributeEnumValues[v]
	return ok
}

// NewAccountServiceV1150CertificateMappingAttributeFromValue returns a pointer to a valid AccountServiceV1150CertificateMappingAttribute
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAccountServiceV1150CertificateMappingAttributeFromValue(v string) (AccountServiceV1150CertificateMappingAttribute, error) {
	ev := AccountServiceV1150CertificateMappingAttribute(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for AccountServiceV1150CertificateMappingAttribute: valid values are %v", v, AllowedAccountServiceV1150CertificateMappingAttributeEnumValues)
}

// AssertAccountServiceV1150CertificateMappingAttributeRequired checks if the required fields are not zero-ed
func AssertAccountServiceV1150CertificateMappingAttributeRequired(obj AccountServiceV1150CertificateMappingAttribute) error {
	return nil
}

// AssertAccountServiceV1150CertificateMappingAttributeConstraints checks if the values respects the defined constraints
func AssertAccountServiceV1150CertificateMappingAttributeConstraints(obj AccountServiceV1150CertificateMappingAttribute) error {
	return nil
}
