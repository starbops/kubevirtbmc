// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

// MetricReportDefinitionV145CalculationAlgorithmEnum : The function to apply to the list of metric properties.
type MetricReportDefinitionV145CalculationAlgorithmEnum string

// List of MetricReportDefinitionV145CalculationAlgorithmEnum
const (
	METRICREPORTDEFINITIONV145CALCULATIONALGORITHMENUM_AVERAGE   MetricReportDefinitionV145CalculationAlgorithmEnum = "Average"
	METRICREPORTDEFINITIONV145CALCULATIONALGORITHMENUM_MAXIMUM   MetricReportDefinitionV145CalculationAlgorithmEnum = "Maximum"
	METRICREPORTDEFINITIONV145CALCULATIONALGORITHMENUM_MINIMUM   MetricReportDefinitionV145CalculationAlgorithmEnum = "Minimum"
	METRICREPORTDEFINITIONV145CALCULATIONALGORITHMENUM_SUMMATION MetricReportDefinitionV145CalculationAlgorithmEnum = "Summation"
)

// AllowedMetricReportDefinitionV145CalculationAlgorithmEnumEnumValues is all the allowed values of MetricReportDefinitionV145CalculationAlgorithmEnum enum
var AllowedMetricReportDefinitionV145CalculationAlgorithmEnumEnumValues = []MetricReportDefinitionV145CalculationAlgorithmEnum{
	"Average",
	"Maximum",
	"Minimum",
	"Summation",
}

// validMetricReportDefinitionV145CalculationAlgorithmEnumEnumValue provides a map of MetricReportDefinitionV145CalculationAlgorithmEnums for fast verification of use input
var validMetricReportDefinitionV145CalculationAlgorithmEnumEnumValues = map[MetricReportDefinitionV145CalculationAlgorithmEnum]struct{}{
	"Average":   {},
	"Maximum":   {},
	"Minimum":   {},
	"Summation": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MetricReportDefinitionV145CalculationAlgorithmEnum) IsValid() bool {
	_, ok := validMetricReportDefinitionV145CalculationAlgorithmEnumEnumValues[v]
	return ok
}

// NewMetricReportDefinitionV145CalculationAlgorithmEnumFromValue returns a pointer to a valid MetricReportDefinitionV145CalculationAlgorithmEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMetricReportDefinitionV145CalculationAlgorithmEnumFromValue(v string) (MetricReportDefinitionV145CalculationAlgorithmEnum, error) {
	ev := MetricReportDefinitionV145CalculationAlgorithmEnum(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for MetricReportDefinitionV145CalculationAlgorithmEnum: valid values are %v", v, AllowedMetricReportDefinitionV145CalculationAlgorithmEnumEnumValues)
}

// AssertMetricReportDefinitionV145CalculationAlgorithmEnumRequired checks if the required fields are not zero-ed
func AssertMetricReportDefinitionV145CalculationAlgorithmEnumRequired(obj MetricReportDefinitionV145CalculationAlgorithmEnum) error {
	return nil
}

// AssertMetricReportDefinitionV145CalculationAlgorithmEnumConstraints checks if the values respects the defined constraints
func AssertMetricReportDefinitionV145CalculationAlgorithmEnumConstraints(obj MetricReportDefinitionV145CalculationAlgorithmEnum) error {
	return nil
}
