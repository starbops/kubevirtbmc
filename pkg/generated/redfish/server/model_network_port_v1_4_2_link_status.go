// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type NetworkPortV142LinkStatus string

// List of NetworkPortV142LinkStatus
const (
	NETWORKPORTV142LINKSTATUS_DOWN     NetworkPortV142LinkStatus = "Down"
	NETWORKPORTV142LINKSTATUS_UP       NetworkPortV142LinkStatus = "Up"
	NETWORKPORTV142LINKSTATUS_STARTING NetworkPortV142LinkStatus = "Starting"
	NETWORKPORTV142LINKSTATUS_TRAINING NetworkPortV142LinkStatus = "Training"
)

// AllowedNetworkPortV142LinkStatusEnumValues is all the allowed values of NetworkPortV142LinkStatus enum
var AllowedNetworkPortV142LinkStatusEnumValues = []NetworkPortV142LinkStatus{
	"Down",
	"Up",
	"Starting",
	"Training",
}

// validNetworkPortV142LinkStatusEnumValue provides a map of NetworkPortV142LinkStatuss for fast verification of use input
var validNetworkPortV142LinkStatusEnumValues = map[NetworkPortV142LinkStatus]struct{}{
	"Down":     {},
	"Up":       {},
	"Starting": {},
	"Training": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v NetworkPortV142LinkStatus) IsValid() bool {
	_, ok := validNetworkPortV142LinkStatusEnumValues[v]
	return ok
}

// NewNetworkPortV142LinkStatusFromValue returns a pointer to a valid NetworkPortV142LinkStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewNetworkPortV142LinkStatusFromValue(v string) (NetworkPortV142LinkStatus, error) {
	ev := NetworkPortV142LinkStatus(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for NetworkPortV142LinkStatus: valid values are %v", v, AllowedNetworkPortV142LinkStatusEnumValues)
}

// AssertNetworkPortV142LinkStatusRequired checks if the required fields are not zero-ed
func AssertNetworkPortV142LinkStatusRequired(obj NetworkPortV142LinkStatus) error {
	return nil
}

// AssertNetworkPortV142LinkStatusConstraints checks if the values respects the defined constraints
func AssertNetworkPortV142LinkStatusConstraints(obj NetworkPortV142LinkStatus) error {
	return nil
}
