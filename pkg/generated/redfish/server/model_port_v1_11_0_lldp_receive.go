// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"errors"
)

// PortV1110LldpReceive - Link Layer Data Protocol (LLDP) data received from the remote partner across this link.
type PortV1110LldpReceive struct {

	// Link Layer Data Protocol (LLDP) chassis ID received from the remote partner across this link.
	ChassisId *string `json:"ChassisId,omitempty"`

	ChassisIdSubtype PortV1110Ieee802IdSubtype `json:"ChassisIdSubtype,omitempty"`

	// The IPv4 management address received from the remote partner across this link.
	ManagementAddressIPv4 *string `json:"ManagementAddressIPv4,omitempty" validate:"regexp=^(?:[0-9]{1,3}\\\\.){3}[0-9]{1,3}$"`

	// The IPv6 management address received from the remote partner across this link.
	ManagementAddressIPv6 *string `json:"ManagementAddressIPv6,omitempty"`

	// The management MAC address received from the remote partner across this link.
	ManagementAddressMAC *string `json:"ManagementAddressMAC,omitempty" validate:"regexp=^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$"`

	// The management VLAN ID received from the remote partner across this link.
	ManagementVlanId *int64 `json:"ManagementVlanId,omitempty"`

	// A colon-delimited string of hexadecimal octets identifying a port.
	PortId *string `json:"PortId,omitempty" validate:"regexp=^([0-9A-F]{2})([:]([0-9A-F]){2}){0,63}$"`

	PortIdSubtype PortV1110Ieee802IdSubtype `json:"PortIdSubtype,omitempty"`

	// The system capabilities received from the remote partner across this link.
	SystemCapabilities []PortV1110LldpSystemCapabilities `json:"SystemCapabilities,omitempty"`

	// The system description received from the remote partner across this link.
	SystemDescription *string `json:"SystemDescription,omitempty"`

	// The system name received from the remote partner across this link.
	SystemName *string `json:"SystemName,omitempty"`
}

// AssertPortV1110LldpReceiveRequired checks if the required fields are not zero-ed
func AssertPortV1110LldpReceiveRequired(obj PortV1110LldpReceive) error {
	return nil
}

// AssertPortV1110LldpReceiveConstraints checks if the values respects the defined constraints
func AssertPortV1110LldpReceiveConstraints(obj PortV1110LldpReceive) error {
	if obj.ManagementVlanId != nil && *obj.ManagementVlanId < 0 {
		return &ParsingError{Param: "ManagementVlanId", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.ManagementVlanId != nil && *obj.ManagementVlanId > 4095 {
		return &ParsingError{Param: "ManagementVlanId", Err: errors.New(errMsgMaxValueConstraint)}
	}
	return nil
}
