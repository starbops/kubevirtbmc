// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type PortV1110Ieee802IdSubtype string

// List of PortV1110Ieee802IdSubtype
const (
	PORTV1110IEEE802IDSUBTYPE_CHASSIS_COMP    PortV1110Ieee802IdSubtype = "ChassisComp"
	PORTV1110IEEE802IDSUBTYPE_IF_ALIAS        PortV1110Ieee802IdSubtype = "IfAlias"
	PORTV1110IEEE802IDSUBTYPE_PORT_COMP       PortV1110Ieee802IdSubtype = "PortComp"
	PORTV1110IEEE802IDSUBTYPE_MAC_ADDR        PortV1110Ieee802IdSubtype = "MacAddr"
	PORTV1110IEEE802IDSUBTYPE_NETWORK_ADDR    PortV1110Ieee802IdSubtype = "NetworkAddr"
	PORTV1110IEEE802IDSUBTYPE_IF_NAME         PortV1110Ieee802IdSubtype = "IfName"
	PORTV1110IEEE802IDSUBTYPE_AGENT_ID        PortV1110Ieee802IdSubtype = "AgentId"
	PORTV1110IEEE802IDSUBTYPE_LOCAL_ASSIGN    PortV1110Ieee802IdSubtype = "LocalAssign"
	PORTV1110IEEE802IDSUBTYPE_NOT_TRANSMITTED PortV1110Ieee802IdSubtype = "NotTransmitted"
)

// AllowedPortV1110Ieee802IdSubtypeEnumValues is all the allowed values of PortV1110Ieee802IdSubtype enum
var AllowedPortV1110Ieee802IdSubtypeEnumValues = []PortV1110Ieee802IdSubtype{
	"ChassisComp",
	"IfAlias",
	"PortComp",
	"MacAddr",
	"NetworkAddr",
	"IfName",
	"AgentId",
	"LocalAssign",
	"NotTransmitted",
}

// validPortV1110Ieee802IdSubtypeEnumValue provides a map of PortV1110Ieee802IdSubtypes for fast verification of use input
var validPortV1110Ieee802IdSubtypeEnumValues = map[PortV1110Ieee802IdSubtype]struct{}{
	"ChassisComp":    {},
	"IfAlias":        {},
	"PortComp":       {},
	"MacAddr":        {},
	"NetworkAddr":    {},
	"IfName":         {},
	"AgentId":        {},
	"LocalAssign":    {},
	"NotTransmitted": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PortV1110Ieee802IdSubtype) IsValid() bool {
	_, ok := validPortV1110Ieee802IdSubtypeEnumValues[v]
	return ok
}

// NewPortV1110Ieee802IdSubtypeFromValue returns a pointer to a valid PortV1110Ieee802IdSubtype
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPortV1110Ieee802IdSubtypeFromValue(v string) (PortV1110Ieee802IdSubtype, error) {
	ev := PortV1110Ieee802IdSubtype(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for PortV1110Ieee802IdSubtype: valid values are %v", v, AllowedPortV1110Ieee802IdSubtypeEnumValues)
}

// AssertPortV1110Ieee802IdSubtypeRequired checks if the required fields are not zero-ed
func AssertPortV1110Ieee802IdSubtypeRequired(obj PortV1110Ieee802IdSubtype) error {
	return nil
}

// AssertPortV1110Ieee802IdSubtypeConstraints checks if the values respects the defined constraints
func AssertPortV1110Ieee802IdSubtypeConstraints(obj PortV1110Ieee802IdSubtype) error {
	return nil
}
