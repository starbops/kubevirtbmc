// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

// HostInterfaceV131Links - The links to other resources that are related to this resource.
type HostInterfaceV131Links struct {
	AuthNoneRole OdataV4IdRef `json:"AuthNoneRole,omitempty"`

	// An array of links to the computer systems connected to this host interface.
	ComputerSystems []OdataV4IdRef `json:"ComputerSystems,omitempty"`

	// The number of items in a collection.
	ComputerSystemsodataCount int64 `json:"ComputerSystems@odata.count,omitempty"`

	CredentialBootstrappingRole OdataV4IdRef `json:"CredentialBootstrappingRole,omitempty"`

	FirmwareAuthRole OdataV4IdRef `json:"FirmwareAuthRole,omitempty"`

	KernelAuthRole OdataV4IdRef `json:"KernelAuthRole,omitempty"`

	// The OEM extension.
	Oem map[string]interface{} `json:"Oem,omitempty"`
}

// AssertHostInterfaceV131LinksRequired checks if the required fields are not zero-ed
func AssertHostInterfaceV131LinksRequired(obj HostInterfaceV131Links) error {
	if err := AssertOdataV4IdRefRequired(obj.AuthNoneRole); err != nil {
		return err
	}
	for _, el := range obj.ComputerSystems {
		if err := AssertOdataV4IdRefRequired(el); err != nil {
			return err
		}
	}
	if err := AssertOdataV4IdRefRequired(obj.CredentialBootstrappingRole); err != nil {
		return err
	}
	if err := AssertOdataV4IdRefRequired(obj.FirmwareAuthRole); err != nil {
		return err
	}
	if err := AssertOdataV4IdRefRequired(obj.KernelAuthRole); err != nil {
		return err
	}
	return nil
}

// AssertHostInterfaceV131LinksConstraints checks if the values respects the defined constraints
func AssertHostInterfaceV131LinksConstraints(obj HostInterfaceV131Links) error {
	if err := AssertOdataV4IdRefConstraints(obj.AuthNoneRole); err != nil {
		return err
	}
	for _, el := range obj.ComputerSystems {
		if err := AssertOdataV4IdRefConstraints(el); err != nil {
			return err
		}
	}
	if err := AssertOdataV4IdRefConstraints(obj.CredentialBootstrappingRole); err != nil {
		return err
	}
	if err := AssertOdataV4IdRefConstraints(obj.FirmwareAuthRole); err != nil {
		return err
	}
	if err := AssertOdataV4IdRefConstraints(obj.KernelAuthRole); err != nil {
		return err
	}
	return nil
}
