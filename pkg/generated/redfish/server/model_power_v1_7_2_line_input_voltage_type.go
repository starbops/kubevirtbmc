// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type PowerV172LineInputVoltageType string

// List of PowerV172LineInputVoltageType
const (
	POWERV172LINEINPUTVOLTAGETYPE_UNKNOWN              PowerV172LineInputVoltageType = "Unknown"
	POWERV172LINEINPUTVOLTAGETYPE_AC_LOW_LINE          PowerV172LineInputVoltageType = "ACLowLine"
	POWERV172LINEINPUTVOLTAGETYPE_AC_MID_LINE          PowerV172LineInputVoltageType = "ACMidLine"
	POWERV172LINEINPUTVOLTAGETYPE_AC_HIGH_LINE         PowerV172LineInputVoltageType = "ACHighLine"
	POWERV172LINEINPUTVOLTAGETYPE_DC_NEG48_V           PowerV172LineInputVoltageType = "DCNeg48V"
	POWERV172LINEINPUTVOLTAGETYPE_DC380_V              PowerV172LineInputVoltageType = "DC380V"
	POWERV172LINEINPUTVOLTAGETYPE_AC120_V              PowerV172LineInputVoltageType = "AC120V"
	POWERV172LINEINPUTVOLTAGETYPE_AC240_V              PowerV172LineInputVoltageType = "AC240V"
	POWERV172LINEINPUTVOLTAGETYPE_AC277_V              PowerV172LineInputVoltageType = "AC277V"
	POWERV172LINEINPUTVOLTAGETYPE_A_CAND_DC_WIDE_RANGE PowerV172LineInputVoltageType = "ACandDCWideRange"
	POWERV172LINEINPUTVOLTAGETYPE_AC_WIDE_RANGE        PowerV172LineInputVoltageType = "ACWideRange"
	POWERV172LINEINPUTVOLTAGETYPE_DC240_V              PowerV172LineInputVoltageType = "DC240V"
)

// AllowedPowerV172LineInputVoltageTypeEnumValues is all the allowed values of PowerV172LineInputVoltageType enum
var AllowedPowerV172LineInputVoltageTypeEnumValues = []PowerV172LineInputVoltageType{
	"Unknown",
	"ACLowLine",
	"ACMidLine",
	"ACHighLine",
	"DCNeg48V",
	"DC380V",
	"AC120V",
	"AC240V",
	"AC277V",
	"ACandDCWideRange",
	"ACWideRange",
	"DC240V",
}

// validPowerV172LineInputVoltageTypeEnumValue provides a map of PowerV172LineInputVoltageTypes for fast verification of use input
var validPowerV172LineInputVoltageTypeEnumValues = map[PowerV172LineInputVoltageType]struct{}{
	"Unknown":          {},
	"ACLowLine":        {},
	"ACMidLine":        {},
	"ACHighLine":       {},
	"DCNeg48V":         {},
	"DC380V":           {},
	"AC120V":           {},
	"AC240V":           {},
	"AC277V":           {},
	"ACandDCWideRange": {},
	"ACWideRange":      {},
	"DC240V":           {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PowerV172LineInputVoltageType) IsValid() bool {
	_, ok := validPowerV172LineInputVoltageTypeEnumValues[v]
	return ok
}

// NewPowerV172LineInputVoltageTypeFromValue returns a pointer to a valid PowerV172LineInputVoltageType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPowerV172LineInputVoltageTypeFromValue(v string) (PowerV172LineInputVoltageType, error) {
	ev := PowerV172LineInputVoltageType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for PowerV172LineInputVoltageType: valid values are %v", v, AllowedPowerV172LineInputVoltageTypeEnumValues)
}

// AssertPowerV172LineInputVoltageTypeRequired checks if the required fields are not zero-ed
func AssertPowerV172LineInputVoltageTypeRequired(obj PowerV172LineInputVoltageType) error {
	return nil
}

// AssertPowerV172LineInputVoltageTypeConstraints checks if the values respects the defined constraints
func AssertPowerV172LineInputVoltageTypeConstraints(obj PowerV172LineInputVoltageType) error {
	return nil
}
