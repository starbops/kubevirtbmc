// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"time"
)

// ComponentIntegrityV122SpdMsingleMeasurement - A single SPDM measurement for an SPDM Responder.
type ComponentIntegrityV122SpdMsingleMeasurement struct {

	// The date and time when information for the measurement was last updated.
	LastUpdated *time.Time `json:"LastUpdated,omitempty"`

	// The measurement data.
	Measurement *string `json:"Measurement,omitempty" validate:"regexp=^[A-Za-z0-9+\\/]+={0,2}$"`

	// The hash algorithm used to compute the measurement.
	MeasurementHashAlgorithm *string `json:"MeasurementHashAlgorithm,omitempty"`

	// The index of the measurement.
	MeasurementIndex *int64 `json:"MeasurementIndex,omitempty"`

	MeasurementType ComponentIntegrityV122DmtFmeasurementTypes `json:"MeasurementType,omitempty"`

	// The OEM extension.
	Oem map[string]interface{} `json:"Oem,omitempty"`

	// Indicates whether this measurement is part of the measurement summary.
	PartofSummaryHash *bool `json:"PartofSummaryHash,omitempty"`

	// The security version number the measurement represents.
	SecurityVersionNumber *string `json:"SecurityVersionNumber,omitempty" validate:"regexp=^[A-Za-z0-9]{16}$"`
}

// AssertComponentIntegrityV122SpdMsingleMeasurementRequired checks if the required fields are not zero-ed
func AssertComponentIntegrityV122SpdMsingleMeasurementRequired(obj ComponentIntegrityV122SpdMsingleMeasurement) error {
	return nil
}

// AssertComponentIntegrityV122SpdMsingleMeasurementConstraints checks if the values respects the defined constraints
func AssertComponentIntegrityV122SpdMsingleMeasurementConstraints(obj ComponentIntegrityV122SpdMsingleMeasurement) error {
	return nil
}
