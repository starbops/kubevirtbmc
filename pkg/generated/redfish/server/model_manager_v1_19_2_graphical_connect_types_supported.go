// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2024.3
 */

package server

import (
	"fmt"
)

type ManagerV1192GraphicalConnectTypesSupported string

// List of ManagerV1192GraphicalConnectTypesSupported
const (
	MANAGERV1192GRAPHICALCONNECTTYPESSUPPORTED_KVMIP ManagerV1192GraphicalConnectTypesSupported = "KVMIP"
	MANAGERV1192GRAPHICALCONNECTTYPESSUPPORTED_OEM   ManagerV1192GraphicalConnectTypesSupported = "Oem"
)

// AllowedManagerV1192GraphicalConnectTypesSupportedEnumValues is all the allowed values of ManagerV1192GraphicalConnectTypesSupported enum
var AllowedManagerV1192GraphicalConnectTypesSupportedEnumValues = []ManagerV1192GraphicalConnectTypesSupported{
	"KVMIP",
	"Oem",
}

// validManagerV1192GraphicalConnectTypesSupportedEnumValue provides a map of ManagerV1192GraphicalConnectTypesSupporteds for fast verification of use input
var validManagerV1192GraphicalConnectTypesSupportedEnumValues = map[ManagerV1192GraphicalConnectTypesSupported]struct{}{
	"KVMIP": {},
	"Oem":   {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ManagerV1192GraphicalConnectTypesSupported) IsValid() bool {
	_, ok := validManagerV1192GraphicalConnectTypesSupportedEnumValues[v]
	return ok
}

// NewManagerV1192GraphicalConnectTypesSupportedFromValue returns a pointer to a valid ManagerV1192GraphicalConnectTypesSupported
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewManagerV1192GraphicalConnectTypesSupportedFromValue(v string) (ManagerV1192GraphicalConnectTypesSupported, error) {
	ev := ManagerV1192GraphicalConnectTypesSupported(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ManagerV1192GraphicalConnectTypesSupported: valid values are %v", v, AllowedManagerV1192GraphicalConnectTypesSupportedEnumValues)
}

// AssertManagerV1192GraphicalConnectTypesSupportedRequired checks if the required fields are not zero-ed
func AssertManagerV1192GraphicalConnectTypesSupportedRequired(obj ManagerV1192GraphicalConnectTypesSupported) error {
	return nil
}

// AssertManagerV1192GraphicalConnectTypesSupportedConstraints checks if the values respects the defined constraints
func AssertManagerV1192GraphicalConnectTypesSupportedConstraints(obj ManagerV1192GraphicalConnectTypesSupported) error {
	return nil
}
