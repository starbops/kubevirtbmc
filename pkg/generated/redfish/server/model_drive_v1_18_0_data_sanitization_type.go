// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type DriveV1180DataSanitizationType string

// List of DriveV1180DataSanitizationType
const (
	DRIVEV1180DATASANITIZATIONTYPE_BLOCK_ERASE         DriveV1180DataSanitizationType = "BlockErase"
	DRIVEV1180DATASANITIZATIONTYPE_CRYPTOGRAPHIC_ERASE DriveV1180DataSanitizationType = "CryptographicErase"
	DRIVEV1180DATASANITIZATIONTYPE_OVERWRITE           DriveV1180DataSanitizationType = "Overwrite"
)

// AllowedDriveV1180DataSanitizationTypeEnumValues is all the allowed values of DriveV1180DataSanitizationType enum
var AllowedDriveV1180DataSanitizationTypeEnumValues = []DriveV1180DataSanitizationType{
	"BlockErase",
	"CryptographicErase",
	"Overwrite",
}

// validDriveV1180DataSanitizationTypeEnumValue provides a map of DriveV1180DataSanitizationTypes for fast verification of use input
var validDriveV1180DataSanitizationTypeEnumValues = map[DriveV1180DataSanitizationType]struct{}{
	"BlockErase":         {},
	"CryptographicErase": {},
	"Overwrite":          {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DriveV1180DataSanitizationType) IsValid() bool {
	_, ok := validDriveV1180DataSanitizationTypeEnumValues[v]
	return ok
}

// NewDriveV1180DataSanitizationTypeFromValue returns a pointer to a valid DriveV1180DataSanitizationType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDriveV1180DataSanitizationTypeFromValue(v string) (DriveV1180DataSanitizationType, error) {
	ev := DriveV1180DataSanitizationType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for DriveV1180DataSanitizationType: valid values are %v", v, AllowedDriveV1180DataSanitizationTypeEnumValues)
}

// AssertDriveV1180DataSanitizationTypeRequired checks if the required fields are not zero-ed
func AssertDriveV1180DataSanitizationTypeRequired(obj DriveV1180DataSanitizationType) error {
	return nil
}

// AssertDriveV1180DataSanitizationTypeConstraints checks if the values respects the defined constraints
func AssertDriveV1180DataSanitizationTypeConstraints(obj DriveV1180DataSanitizationType) error {
	return nil
}
