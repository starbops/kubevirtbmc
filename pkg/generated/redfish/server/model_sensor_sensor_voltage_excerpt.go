// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"errors"
)

// SensorSensorVoltageExcerpt - The `Sensor` schema describes a sensor and its properties.
type SensorSensorVoltageExcerpt struct {

	// The crest factor for this sensor.
	CrestFactor *float32 `json:"CrestFactor,omitempty"`

	// The link to the resource that provides the data for this sensor.
	DataSourceUri *string `json:"DataSourceUri,omitempty"`

	// The sensor value.
	Reading *float32 `json:"Reading,omitempty"`

	// The total harmonic distortion percent (% THD).
	THDPercent *float32 `json:"THDPercent,omitempty"`
}

// AssertSensorSensorVoltageExcerptRequired checks if the required fields are not zero-ed
func AssertSensorSensorVoltageExcerptRequired(obj SensorSensorVoltageExcerpt) error {
	return nil
}

// AssertSensorSensorVoltageExcerptConstraints checks if the values respects the defined constraints
func AssertSensorSensorVoltageExcerptConstraints(obj SensorSensorVoltageExcerpt) error {
	if obj.THDPercent != nil && *obj.THDPercent < 0 {
		return &ParsingError{Param: "THDPercent", Err: errors.New(errMsgMinValueConstraint)}
	}
	return nil
}
