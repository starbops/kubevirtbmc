// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type EventServiceV1101SmtpAuthenticationMethods string

// List of EventServiceV1101SmtpAuthenticationMethods
const (
	EVENTSERVICEV1101SMTPAUTHENTICATIONMETHODS_NONE        EventServiceV1101SmtpAuthenticationMethods = "None"
	EVENTSERVICEV1101SMTPAUTHENTICATIONMETHODS_AUTO_DETECT EventServiceV1101SmtpAuthenticationMethods = "AutoDetect"
	EVENTSERVICEV1101SMTPAUTHENTICATIONMETHODS_PLAIN       EventServiceV1101SmtpAuthenticationMethods = "Plain"
	EVENTSERVICEV1101SMTPAUTHENTICATIONMETHODS_LOGIN       EventServiceV1101SmtpAuthenticationMethods = "Login"
	EVENTSERVICEV1101SMTPAUTHENTICATIONMETHODS_CRAM_MD5    EventServiceV1101SmtpAuthenticationMethods = "CRAM_MD5"
)

// AllowedEventServiceV1101SmtpAuthenticationMethodsEnumValues is all the allowed values of EventServiceV1101SmtpAuthenticationMethods enum
var AllowedEventServiceV1101SmtpAuthenticationMethodsEnumValues = []EventServiceV1101SmtpAuthenticationMethods{
	"None",
	"AutoDetect",
	"Plain",
	"Login",
	"CRAM_MD5",
}

// validEventServiceV1101SmtpAuthenticationMethodsEnumValue provides a map of EventServiceV1101SmtpAuthenticationMethodss for fast verification of use input
var validEventServiceV1101SmtpAuthenticationMethodsEnumValues = map[EventServiceV1101SmtpAuthenticationMethods]struct{}{
	"None":       {},
	"AutoDetect": {},
	"Plain":      {},
	"Login":      {},
	"CRAM_MD5":   {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EventServiceV1101SmtpAuthenticationMethods) IsValid() bool {
	_, ok := validEventServiceV1101SmtpAuthenticationMethodsEnumValues[v]
	return ok
}

// NewEventServiceV1101SmtpAuthenticationMethodsFromValue returns a pointer to a valid EventServiceV1101SmtpAuthenticationMethods
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEventServiceV1101SmtpAuthenticationMethodsFromValue(v string) (EventServiceV1101SmtpAuthenticationMethods, error) {
	ev := EventServiceV1101SmtpAuthenticationMethods(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for EventServiceV1101SmtpAuthenticationMethods: valid values are %v", v, AllowedEventServiceV1101SmtpAuthenticationMethodsEnumValues)
}

// AssertEventServiceV1101SmtpAuthenticationMethodsRequired checks if the required fields are not zero-ed
func AssertEventServiceV1101SmtpAuthenticationMethodsRequired(obj EventServiceV1101SmtpAuthenticationMethods) error {
	return nil
}

// AssertEventServiceV1101SmtpAuthenticationMethodsConstraints checks if the values respects the defined constraints
func AssertEventServiceV1101SmtpAuthenticationMethodsConstraints(obj EventServiceV1101SmtpAuthenticationMethods) error {
	return nil
}
