// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type PcieFunctionV151FunctionProtocol string

// List of PcieFunctionV151FunctionProtocol
const (
	PCIEFUNCTIONV151FUNCTIONPROTOCOL_PCIE PcieFunctionV151FunctionProtocol = "PCIe"
	PCIEFUNCTIONV151FUNCTIONPROTOCOL_CXL  PcieFunctionV151FunctionProtocol = "CXL"
)

// AllowedPcieFunctionV151FunctionProtocolEnumValues is all the allowed values of PcieFunctionV151FunctionProtocol enum
var AllowedPcieFunctionV151FunctionProtocolEnumValues = []PcieFunctionV151FunctionProtocol{
	"PCIe",
	"CXL",
}

// validPcieFunctionV151FunctionProtocolEnumValue provides a map of PcieFunctionV151FunctionProtocols for fast verification of use input
var validPcieFunctionV151FunctionProtocolEnumValues = map[PcieFunctionV151FunctionProtocol]struct{}{
	"PCIe": {},
	"CXL":  {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PcieFunctionV151FunctionProtocol) IsValid() bool {
	_, ok := validPcieFunctionV151FunctionProtocolEnumValues[v]
	return ok
}

// NewPcieFunctionV151FunctionProtocolFromValue returns a pointer to a valid PcieFunctionV151FunctionProtocol
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPcieFunctionV151FunctionProtocolFromValue(v string) (PcieFunctionV151FunctionProtocol, error) {
	ev := PcieFunctionV151FunctionProtocol(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for PcieFunctionV151FunctionProtocol: valid values are %v", v, AllowedPcieFunctionV151FunctionProtocolEnumValues)
}

// AssertPcieFunctionV151FunctionProtocolRequired checks if the required fields are not zero-ed
func AssertPcieFunctionV151FunctionProtocolRequired(obj PcieFunctionV151FunctionProtocol) error {
	return nil
}

// AssertPcieFunctionV151FunctionProtocolConstraints checks if the values respects the defined constraints
func AssertPcieFunctionV151FunctionProtocolConstraints(obj PcieFunctionV151FunctionProtocol) error {
	return nil
}
