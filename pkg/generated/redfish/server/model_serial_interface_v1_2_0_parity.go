// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type SerialInterfaceV120Parity string

// List of SerialInterfaceV120Parity
const (
	SERIALINTERFACEV120PARITY_NONE  SerialInterfaceV120Parity = "None"
	SERIALINTERFACEV120PARITY_EVEN  SerialInterfaceV120Parity = "Even"
	SERIALINTERFACEV120PARITY_ODD   SerialInterfaceV120Parity = "Odd"
	SERIALINTERFACEV120PARITY_MARK  SerialInterfaceV120Parity = "Mark"
	SERIALINTERFACEV120PARITY_SPACE SerialInterfaceV120Parity = "Space"
)

// AllowedSerialInterfaceV120ParityEnumValues is all the allowed values of SerialInterfaceV120Parity enum
var AllowedSerialInterfaceV120ParityEnumValues = []SerialInterfaceV120Parity{
	"None",
	"Even",
	"Odd",
	"Mark",
	"Space",
}

// validSerialInterfaceV120ParityEnumValue provides a map of SerialInterfaceV120Paritys for fast verification of use input
var validSerialInterfaceV120ParityEnumValues = map[SerialInterfaceV120Parity]struct{}{
	"None":  {},
	"Even":  {},
	"Odd":   {},
	"Mark":  {},
	"Space": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SerialInterfaceV120Parity) IsValid() bool {
	_, ok := validSerialInterfaceV120ParityEnumValues[v]
	return ok
}

// NewSerialInterfaceV120ParityFromValue returns a pointer to a valid SerialInterfaceV120Parity
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSerialInterfaceV120ParityFromValue(v string) (SerialInterfaceV120Parity, error) {
	ev := SerialInterfaceV120Parity(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for SerialInterfaceV120Parity: valid values are %v", v, AllowedSerialInterfaceV120ParityEnumValues)
}

// AssertSerialInterfaceV120ParityRequired checks if the required fields are not zero-ed
func AssertSerialInterfaceV120ParityRequired(obj SerialInterfaceV120Parity) error {
	return nil
}

// AssertSerialInterfaceV120ParityConstraints checks if the values respects the defined constraints
func AssertSerialInterfaceV120ParityConstraints(obj SerialInterfaceV120Parity) error {
	return nil
}
