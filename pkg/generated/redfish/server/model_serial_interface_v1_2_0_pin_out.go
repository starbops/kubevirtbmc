// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type SerialInterfaceV120PinOut string

// List of SerialInterfaceV120PinOut
const (
	SERIALINTERFACEV120PINOUT_CISCO    SerialInterfaceV120PinOut = "Cisco"
	SERIALINTERFACEV120PINOUT_CYCLADES SerialInterfaceV120PinOut = "Cyclades"
	SERIALINTERFACEV120PINOUT_DIGI     SerialInterfaceV120PinOut = "Digi"
)

// AllowedSerialInterfaceV120PinOutEnumValues is all the allowed values of SerialInterfaceV120PinOut enum
var AllowedSerialInterfaceV120PinOutEnumValues = []SerialInterfaceV120PinOut{
	"Cisco",
	"Cyclades",
	"Digi",
}

// validSerialInterfaceV120PinOutEnumValue provides a map of SerialInterfaceV120PinOuts for fast verification of use input
var validSerialInterfaceV120PinOutEnumValues = map[SerialInterfaceV120PinOut]struct{}{
	"Cisco":    {},
	"Cyclades": {},
	"Digi":     {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SerialInterfaceV120PinOut) IsValid() bool {
	_, ok := validSerialInterfaceV120PinOutEnumValues[v]
	return ok
}

// NewSerialInterfaceV120PinOutFromValue returns a pointer to a valid SerialInterfaceV120PinOut
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSerialInterfaceV120PinOutFromValue(v string) (SerialInterfaceV120PinOut, error) {
	ev := SerialInterfaceV120PinOut(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for SerialInterfaceV120PinOut: valid values are %v", v, AllowedSerialInterfaceV120PinOutEnumValues)
}

// AssertSerialInterfaceV120PinOutRequired checks if the required fields are not zero-ed
func AssertSerialInterfaceV120PinOutRequired(obj SerialInterfaceV120PinOut) error {
	return nil
}

// AssertSerialInterfaceV120PinOutConstraints checks if the values respects the defined constraints
func AssertSerialInterfaceV120PinOutConstraints(obj SerialInterfaceV120PinOut) error {
	return nil
}
