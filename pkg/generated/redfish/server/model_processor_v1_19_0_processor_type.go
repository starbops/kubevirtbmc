// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type ProcessorV1190ProcessorType string

// List of ProcessorV1190ProcessorType
const (
	PROCESSORV1190PROCESSORTYPE_CPU         ProcessorV1190ProcessorType = "CPU"
	PROCESSORV1190PROCESSORTYPE_GPU         ProcessorV1190ProcessorType = "GPU"
	PROCESSORV1190PROCESSORTYPE_FPGA        ProcessorV1190ProcessorType = "FPGA"
	PROCESSORV1190PROCESSORTYPE_DSP         ProcessorV1190ProcessorType = "DSP"
	PROCESSORV1190PROCESSORTYPE_ACCELERATOR ProcessorV1190ProcessorType = "Accelerator"
	PROCESSORV1190PROCESSORTYPE_CORE        ProcessorV1190ProcessorType = "Core"
	PROCESSORV1190PROCESSORTYPE_THREAD      ProcessorV1190ProcessorType = "Thread"
	PROCESSORV1190PROCESSORTYPE_PARTITION   ProcessorV1190ProcessorType = "Partition"
	PROCESSORV1190PROCESSORTYPE_OEM         ProcessorV1190ProcessorType = "OEM"
)

// AllowedProcessorV1190ProcessorTypeEnumValues is all the allowed values of ProcessorV1190ProcessorType enum
var AllowedProcessorV1190ProcessorTypeEnumValues = []ProcessorV1190ProcessorType{
	"CPU",
	"GPU",
	"FPGA",
	"DSP",
	"Accelerator",
	"Core",
	"Thread",
	"Partition",
	"OEM",
}

// validProcessorV1190ProcessorTypeEnumValue provides a map of ProcessorV1190ProcessorTypes for fast verification of use input
var validProcessorV1190ProcessorTypeEnumValues = map[ProcessorV1190ProcessorType]struct{}{
	"CPU":         {},
	"GPU":         {},
	"FPGA":        {},
	"DSP":         {},
	"Accelerator": {},
	"Core":        {},
	"Thread":      {},
	"Partition":   {},
	"OEM":         {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ProcessorV1190ProcessorType) IsValid() bool {
	_, ok := validProcessorV1190ProcessorTypeEnumValues[v]
	return ok
}

// NewProcessorV1190ProcessorTypeFromValue returns a pointer to a valid ProcessorV1190ProcessorType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewProcessorV1190ProcessorTypeFromValue(v string) (ProcessorV1190ProcessorType, error) {
	ev := ProcessorV1190ProcessorType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ProcessorV1190ProcessorType: valid values are %v", v, AllowedProcessorV1190ProcessorTypeEnumValues)
}

// AssertProcessorV1190ProcessorTypeRequired checks if the required fields are not zero-ed
func AssertProcessorV1190ProcessorTypeRequired(obj ProcessorV1190ProcessorType) error {
	return nil
}

// AssertProcessorV1190ProcessorTypeConstraints checks if the values respects the defined constraints
func AssertProcessorV1190ProcessorTypeConstraints(obj ProcessorV1190ProcessorType) error {
	return nil
}
