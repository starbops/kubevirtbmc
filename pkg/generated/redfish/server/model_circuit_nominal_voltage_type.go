// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type CircuitNominalVoltageType string

// List of CircuitNominalVoltageType
const (
	CIRCUITNOMINALVOLTAGETYPE_AC100_TO127_V     CircuitNominalVoltageType = "AC100To127V"
	CIRCUITNOMINALVOLTAGETYPE_AC100_TO240_V     CircuitNominalVoltageType = "AC100To240V"
	CIRCUITNOMINALVOLTAGETYPE_AC100_TO277_V     CircuitNominalVoltageType = "AC100To277V"
	CIRCUITNOMINALVOLTAGETYPE_AC120_V           CircuitNominalVoltageType = "AC120V"
	CIRCUITNOMINALVOLTAGETYPE_AC200_TO240_V     CircuitNominalVoltageType = "AC200To240V"
	CIRCUITNOMINALVOLTAGETYPE_AC200_TO277_V     CircuitNominalVoltageType = "AC200To277V"
	CIRCUITNOMINALVOLTAGETYPE_AC208_V           CircuitNominalVoltageType = "AC208V"
	CIRCUITNOMINALVOLTAGETYPE_AC230_V           CircuitNominalVoltageType = "AC230V"
	CIRCUITNOMINALVOLTAGETYPE_AC240_V           CircuitNominalVoltageType = "AC240V"
	CIRCUITNOMINALVOLTAGETYPE_AC240_AND_DC380_V CircuitNominalVoltageType = "AC240AndDC380V"
	CIRCUITNOMINALVOLTAGETYPE_AC277_V           CircuitNominalVoltageType = "AC277V"
	CIRCUITNOMINALVOLTAGETYPE_AC277_AND_DC380_V CircuitNominalVoltageType = "AC277AndDC380V"
	CIRCUITNOMINALVOLTAGETYPE_AC400_V           CircuitNominalVoltageType = "AC400V"
	CIRCUITNOMINALVOLTAGETYPE_AC480_V           CircuitNominalVoltageType = "AC480V"
	CIRCUITNOMINALVOLTAGETYPE_DC48_V            CircuitNominalVoltageType = "DC48V"
	CIRCUITNOMINALVOLTAGETYPE_DC240_V           CircuitNominalVoltageType = "DC240V"
	CIRCUITNOMINALVOLTAGETYPE_DC380_V           CircuitNominalVoltageType = "DC380V"
	CIRCUITNOMINALVOLTAGETYPE_DC_NEG48_V        CircuitNominalVoltageType = "DCNeg48V"
	CIRCUITNOMINALVOLTAGETYPE_DC16_V            CircuitNominalVoltageType = "DC16V"
	CIRCUITNOMINALVOLTAGETYPE_DC12_V            CircuitNominalVoltageType = "DC12V"
	CIRCUITNOMINALVOLTAGETYPE_DC9_V             CircuitNominalVoltageType = "DC9V"
	CIRCUITNOMINALVOLTAGETYPE_DC5_V             CircuitNominalVoltageType = "DC5V"
	CIRCUITNOMINALVOLTAGETYPE_DC3_3_V           CircuitNominalVoltageType = "DC3_3V"
	CIRCUITNOMINALVOLTAGETYPE_DC1_8_V           CircuitNominalVoltageType = "DC1_8V"
)

// AllowedCircuitNominalVoltageTypeEnumValues is all the allowed values of CircuitNominalVoltageType enum
var AllowedCircuitNominalVoltageTypeEnumValues = []CircuitNominalVoltageType{
	"AC100To127V",
	"AC100To240V",
	"AC100To277V",
	"AC120V",
	"AC200To240V",
	"AC200To277V",
	"AC208V",
	"AC230V",
	"AC240V",
	"AC240AndDC380V",
	"AC277V",
	"AC277AndDC380V",
	"AC400V",
	"AC480V",
	"DC48V",
	"DC240V",
	"DC380V",
	"DCNeg48V",
	"DC16V",
	"DC12V",
	"DC9V",
	"DC5V",
	"DC3_3V",
	"DC1_8V",
}

// validCircuitNominalVoltageTypeEnumValue provides a map of CircuitNominalVoltageTypes for fast verification of use input
var validCircuitNominalVoltageTypeEnumValues = map[CircuitNominalVoltageType]struct{}{
	"AC100To127V":    {},
	"AC100To240V":    {},
	"AC100To277V":    {},
	"AC120V":         {},
	"AC200To240V":    {},
	"AC200To277V":    {},
	"AC208V":         {},
	"AC230V":         {},
	"AC240V":         {},
	"AC240AndDC380V": {},
	"AC277V":         {},
	"AC277AndDC380V": {},
	"AC400V":         {},
	"AC480V":         {},
	"DC48V":          {},
	"DC240V":         {},
	"DC380V":         {},
	"DCNeg48V":       {},
	"DC16V":          {},
	"DC12V":          {},
	"DC9V":           {},
	"DC5V":           {},
	"DC3_3V":         {},
	"DC1_8V":         {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CircuitNominalVoltageType) IsValid() bool {
	_, ok := validCircuitNominalVoltageTypeEnumValues[v]
	return ok
}

// NewCircuitNominalVoltageTypeFromValue returns a pointer to a valid CircuitNominalVoltageType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCircuitNominalVoltageTypeFromValue(v string) (CircuitNominalVoltageType, error) {
	ev := CircuitNominalVoltageType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for CircuitNominalVoltageType: valid values are %v", v, AllowedCircuitNominalVoltageTypeEnumValues)
}

// AssertCircuitNominalVoltageTypeRequired checks if the required fields are not zero-ed
func AssertCircuitNominalVoltageTypeRequired(obj CircuitNominalVoltageType) error {
	return nil
}

// AssertCircuitNominalVoltageTypeConstraints checks if the values respects the defined constraints
func AssertCircuitNominalVoltageTypeConstraints(obj CircuitNominalVoltageType) error {
	return nil
}
