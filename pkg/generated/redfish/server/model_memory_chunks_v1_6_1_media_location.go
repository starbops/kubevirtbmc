// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type MemoryChunksV161MediaLocation string

// List of MemoryChunksV161MediaLocation
const (
	MEMORYCHUNKSV161MEDIALOCATION_LOCAL  MemoryChunksV161MediaLocation = "Local"
	MEMORYCHUNKSV161MEDIALOCATION_REMOTE MemoryChunksV161MediaLocation = "Remote"
	MEMORYCHUNKSV161MEDIALOCATION_MIXED  MemoryChunksV161MediaLocation = "Mixed"
)

// AllowedMemoryChunksV161MediaLocationEnumValues is all the allowed values of MemoryChunksV161MediaLocation enum
var AllowedMemoryChunksV161MediaLocationEnumValues = []MemoryChunksV161MediaLocation{
	"Local",
	"Remote",
	"Mixed",
}

// validMemoryChunksV161MediaLocationEnumValue provides a map of MemoryChunksV161MediaLocations for fast verification of use input
var validMemoryChunksV161MediaLocationEnumValues = map[MemoryChunksV161MediaLocation]struct{}{
	"Local":  {},
	"Remote": {},
	"Mixed":  {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MemoryChunksV161MediaLocation) IsValid() bool {
	_, ok := validMemoryChunksV161MediaLocationEnumValues[v]
	return ok
}

// NewMemoryChunksV161MediaLocationFromValue returns a pointer to a valid MemoryChunksV161MediaLocation
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMemoryChunksV161MediaLocationFromValue(v string) (MemoryChunksV161MediaLocation, error) {
	ev := MemoryChunksV161MediaLocation(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for MemoryChunksV161MediaLocation: valid values are %v", v, AllowedMemoryChunksV161MediaLocationEnumValues)
}

// AssertMemoryChunksV161MediaLocationRequired checks if the required fields are not zero-ed
func AssertMemoryChunksV161MediaLocationRequired(obj MemoryChunksV161MediaLocation) error {
	return nil
}

// AssertMemoryChunksV161MediaLocationConstraints checks if the values respects the defined constraints
func AssertMemoryChunksV161MediaLocationConstraints(obj MemoryChunksV161MediaLocation) error {
	return nil
}
