// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

// ThermalMetricsV131TemperatureSummary - The temperature readings for a subsystem.
type ThermalMetricsV131TemperatureSummary struct {
	Ambient SensorSensorExcerpt `json:"Ambient,omitempty"`

	Exhaust SensorSensorExcerpt `json:"Exhaust,omitempty"`

	Intake SensorSensorExcerpt `json:"Intake,omitempty"`

	Internal SensorSensorExcerpt `json:"Internal,omitempty"`
}

// AssertThermalMetricsV131TemperatureSummaryRequired checks if the required fields are not zero-ed
func AssertThermalMetricsV131TemperatureSummaryRequired(obj ThermalMetricsV131TemperatureSummary) error {
	if err := AssertSensorSensorExcerptRequired(obj.Ambient); err != nil {
		return err
	}
	if err := AssertSensorSensorExcerptRequired(obj.Exhaust); err != nil {
		return err
	}
	if err := AssertSensorSensorExcerptRequired(obj.Intake); err != nil {
		return err
	}
	if err := AssertSensorSensorExcerptRequired(obj.Internal); err != nil {
		return err
	}
	return nil
}

// AssertThermalMetricsV131TemperatureSummaryConstraints checks if the values respects the defined constraints
func AssertThermalMetricsV131TemperatureSummaryConstraints(obj ThermalMetricsV131TemperatureSummary) error {
	if err := AssertSensorSensorExcerptConstraints(obj.Ambient); err != nil {
		return err
	}
	if err := AssertSensorSensorExcerptConstraints(obj.Exhaust); err != nil {
		return err
	}
	if err := AssertSensorSensorExcerptConstraints(obj.Intake); err != nil {
		return err
	}
	if err := AssertSensorSensorExcerptConstraints(obj.Internal); err != nil {
		return err
	}
	return nil
}
