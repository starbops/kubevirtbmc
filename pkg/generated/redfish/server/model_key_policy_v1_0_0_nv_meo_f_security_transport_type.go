// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

// KeyPolicyV100NvMeoFSecurityTransportType : The NVMe security transports that a key is allowed to use.
type KeyPolicyV100NvMeoFSecurityTransportType string

// List of KeyPolicyV100NvMeoFSecurityTransportType
const (
	KEYPOLICYV100NVMEOFSECURITYTRANSPORTTYPE_TLSV2 KeyPolicyV100NvMeoFSecurityTransportType = "TLSv2"
	KEYPOLICYV100NVMEOFSECURITYTRANSPORTTYPE_TLSV3 KeyPolicyV100NvMeoFSecurityTransportType = "TLSv3"
)

// AllowedKeyPolicyV100NvMeoFSecurityTransportTypeEnumValues is all the allowed values of KeyPolicyV100NvMeoFSecurityTransportType enum
var AllowedKeyPolicyV100NvMeoFSecurityTransportTypeEnumValues = []KeyPolicyV100NvMeoFSecurityTransportType{
	"TLSv2",
	"TLSv3",
}

// validKeyPolicyV100NvMeoFSecurityTransportTypeEnumValue provides a map of KeyPolicyV100NvMeoFSecurityTransportTypes for fast verification of use input
var validKeyPolicyV100NvMeoFSecurityTransportTypeEnumValues = map[KeyPolicyV100NvMeoFSecurityTransportType]struct{}{
	"TLSv2": {},
	"TLSv3": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v KeyPolicyV100NvMeoFSecurityTransportType) IsValid() bool {
	_, ok := validKeyPolicyV100NvMeoFSecurityTransportTypeEnumValues[v]
	return ok
}

// NewKeyPolicyV100NvMeoFSecurityTransportTypeFromValue returns a pointer to a valid KeyPolicyV100NvMeoFSecurityTransportType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewKeyPolicyV100NvMeoFSecurityTransportTypeFromValue(v string) (KeyPolicyV100NvMeoFSecurityTransportType, error) {
	ev := KeyPolicyV100NvMeoFSecurityTransportType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for KeyPolicyV100NvMeoFSecurityTransportType: valid values are %v", v, AllowedKeyPolicyV100NvMeoFSecurityTransportTypeEnumValues)
}

// AssertKeyPolicyV100NvMeoFSecurityTransportTypeRequired checks if the required fields are not zero-ed
func AssertKeyPolicyV100NvMeoFSecurityTransportTypeRequired(obj KeyPolicyV100NvMeoFSecurityTransportType) error {
	return nil
}

// AssertKeyPolicyV100NvMeoFSecurityTransportTypeConstraints checks if the values respects the defined constraints
func AssertKeyPolicyV100NvMeoFSecurityTransportTypeConstraints(obj KeyPolicyV100NvMeoFSecurityTransportType) error {
	return nil
}
