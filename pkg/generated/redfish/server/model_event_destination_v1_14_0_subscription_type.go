// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type EventDestinationV1140SubscriptionType string

// List of EventDestinationV1140SubscriptionType
const (
	EVENTDESTINATIONV1140SUBSCRIPTIONTYPE_REDFISH_EVENT EventDestinationV1140SubscriptionType = "RedfishEvent"
	EVENTDESTINATIONV1140SUBSCRIPTIONTYPE_SSE           EventDestinationV1140SubscriptionType = "SSE"
	EVENTDESTINATIONV1140SUBSCRIPTIONTYPE_SNMP_TRAP     EventDestinationV1140SubscriptionType = "SNMPTrap"
	EVENTDESTINATIONV1140SUBSCRIPTIONTYPE_SNMP_INFORM   EventDestinationV1140SubscriptionType = "SNMPInform"
	EVENTDESTINATIONV1140SUBSCRIPTIONTYPE_SYSLOG        EventDestinationV1140SubscriptionType = "Syslog"
	EVENTDESTINATIONV1140SUBSCRIPTIONTYPE_OEM           EventDestinationV1140SubscriptionType = "OEM"
)

// AllowedEventDestinationV1140SubscriptionTypeEnumValues is all the allowed values of EventDestinationV1140SubscriptionType enum
var AllowedEventDestinationV1140SubscriptionTypeEnumValues = []EventDestinationV1140SubscriptionType{
	"RedfishEvent",
	"SSE",
	"SNMPTrap",
	"SNMPInform",
	"Syslog",
	"OEM",
}

// validEventDestinationV1140SubscriptionTypeEnumValue provides a map of EventDestinationV1140SubscriptionTypes for fast verification of use input
var validEventDestinationV1140SubscriptionTypeEnumValues = map[EventDestinationV1140SubscriptionType]struct{}{
	"RedfishEvent": {},
	"SSE":          {},
	"SNMPTrap":     {},
	"SNMPInform":   {},
	"Syslog":       {},
	"OEM":          {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EventDestinationV1140SubscriptionType) IsValid() bool {
	_, ok := validEventDestinationV1140SubscriptionTypeEnumValues[v]
	return ok
}

// NewEventDestinationV1140SubscriptionTypeFromValue returns a pointer to a valid EventDestinationV1140SubscriptionType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEventDestinationV1140SubscriptionTypeFromValue(v string) (EventDestinationV1140SubscriptionType, error) {
	ev := EventDestinationV1140SubscriptionType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for EventDestinationV1140SubscriptionType: valid values are %v", v, AllowedEventDestinationV1140SubscriptionTypeEnumValues)
}

// AssertEventDestinationV1140SubscriptionTypeRequired checks if the required fields are not zero-ed
func AssertEventDestinationV1140SubscriptionTypeRequired(obj EventDestinationV1140SubscriptionType) error {
	return nil
}

// AssertEventDestinationV1140SubscriptionTypeConstraints checks if the values respects the defined constraints
func AssertEventDestinationV1140SubscriptionTypeConstraints(obj EventDestinationV1140SubscriptionType) error {
	return nil
}
