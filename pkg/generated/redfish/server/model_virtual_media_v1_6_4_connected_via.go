// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2024.3
 */

package server

import (
	"fmt"
)

type VirtualMediaV164ConnectedVia string

// List of VirtualMediaV164ConnectedVia
const (
	VIRTUALMEDIAV164CONNECTEDVIA_NOT_CONNECTED VirtualMediaV164ConnectedVia = "NotConnected"
	VIRTUALMEDIAV164CONNECTEDVIA_URI           VirtualMediaV164ConnectedVia = "URI"
	VIRTUALMEDIAV164CONNECTEDVIA_APPLET        VirtualMediaV164ConnectedVia = "Applet"
	VIRTUALMEDIAV164CONNECTEDVIA_OEM           VirtualMediaV164ConnectedVia = "Oem"
)

// AllowedVirtualMediaV164ConnectedViaEnumValues is all the allowed values of VirtualMediaV164ConnectedVia enum
var AllowedVirtualMediaV164ConnectedViaEnumValues = []VirtualMediaV164ConnectedVia{
	"NotConnected",
	"URI",
	"Applet",
	"Oem",
}

// validVirtualMediaV164ConnectedViaEnumValue provides a map of VirtualMediaV164ConnectedVias for fast verification of use input
var validVirtualMediaV164ConnectedViaEnumValues = map[VirtualMediaV164ConnectedVia]struct{}{
	"NotConnected": {},
	"URI":          {},
	"Applet":       {},
	"Oem":          {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v VirtualMediaV164ConnectedVia) IsValid() bool {
	_, ok := validVirtualMediaV164ConnectedViaEnumValues[v]
	return ok
}

// NewVirtualMediaV164ConnectedViaFromValue returns a pointer to a valid VirtualMediaV164ConnectedVia
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewVirtualMediaV164ConnectedViaFromValue(v string) (VirtualMediaV164ConnectedVia, error) {
	ev := VirtualMediaV164ConnectedVia(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for VirtualMediaV164ConnectedVia: valid values are %v", v, AllowedVirtualMediaV164ConnectedViaEnumValues)
}

// AssertVirtualMediaV164ConnectedViaRequired checks if the required fields are not zero-ed
func AssertVirtualMediaV164ConnectedViaRequired(obj VirtualMediaV164ConnectedVia) error {
	return nil
}

// AssertVirtualMediaV164ConnectedViaConstraints checks if the values respects the defined constraints
func AssertVirtualMediaV164ConnectedViaConstraints(obj VirtualMediaV164ConnectedVia) error {
	return nil
}
