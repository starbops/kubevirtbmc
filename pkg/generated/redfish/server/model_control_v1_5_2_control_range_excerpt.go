// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

// ControlV152ControlRangeExcerpt - The `Control` schema describes a control point and its properties.
type ControlV152ControlRangeExcerpt struct {

	// The maximum possible setting for this control.
	AllowableMax *float32 `json:"AllowableMax,omitempty"`

	// The minimum possible setting for this control.
	AllowableMin *float32 `json:"AllowableMin,omitempty"`

	// The supported values for the set point.
	AllowableNumericValues []*float32 `json:"AllowableNumericValues,omitempty"`

	ControlMode *ControlV152ControlMode `json:"ControlMode,omitempty"`

	// The link to the resource that provides the data for this control.
	DataSourceUri *string `json:"DataSourceUri,omitempty"`

	// The reading of the sensor associated with this control.
	Reading *float32 `json:"Reading,omitempty"`

	// The units of the sensor reading associated with this control.
	ReadingUnits *string `json:"ReadingUnits,omitempty"`

	// The maximum set point in the allowed range.
	SettingMax *float32 `json:"SettingMax,omitempty"`

	// The minimum set point in the allowed range.
	SettingMin *float32 `json:"SettingMin,omitempty"`
}

// AssertControlV152ControlRangeExcerptRequired checks if the required fields are not zero-ed
func AssertControlV152ControlRangeExcerptRequired(obj ControlV152ControlRangeExcerpt) error {
	return nil
}

// AssertControlV152ControlRangeExcerptConstraints checks if the values respects the defined constraints
func AssertControlV152ControlRangeExcerptConstraints(obj ControlV152ControlRangeExcerpt) error {
	return nil
}
