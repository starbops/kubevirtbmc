// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type ConnectionMethodV110TunnelingProtocolType string

// List of ConnectionMethodV110TunnelingProtocolType
const (
	CONNECTIONMETHODV110TUNNELINGPROTOCOLTYPE_SSH ConnectionMethodV110TunnelingProtocolType = "SSH"
	CONNECTIONMETHODV110TUNNELINGPROTOCOLTYPE_OEM ConnectionMethodV110TunnelingProtocolType = "OEM"
)

// AllowedConnectionMethodV110TunnelingProtocolTypeEnumValues is all the allowed values of ConnectionMethodV110TunnelingProtocolType enum
var AllowedConnectionMethodV110TunnelingProtocolTypeEnumValues = []ConnectionMethodV110TunnelingProtocolType{
	"SSH",
	"OEM",
}

// validConnectionMethodV110TunnelingProtocolTypeEnumValue provides a map of ConnectionMethodV110TunnelingProtocolTypes for fast verification of use input
var validConnectionMethodV110TunnelingProtocolTypeEnumValues = map[ConnectionMethodV110TunnelingProtocolType]struct{}{
	"SSH": {},
	"OEM": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ConnectionMethodV110TunnelingProtocolType) IsValid() bool {
	_, ok := validConnectionMethodV110TunnelingProtocolTypeEnumValues[v]
	return ok
}

// NewConnectionMethodV110TunnelingProtocolTypeFromValue returns a pointer to a valid ConnectionMethodV110TunnelingProtocolType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewConnectionMethodV110TunnelingProtocolTypeFromValue(v string) (ConnectionMethodV110TunnelingProtocolType, error) {
	ev := ConnectionMethodV110TunnelingProtocolType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ConnectionMethodV110TunnelingProtocolType: valid values are %v", v, AllowedConnectionMethodV110TunnelingProtocolTypeEnumValues)
}

// AssertConnectionMethodV110TunnelingProtocolTypeRequired checks if the required fields are not zero-ed
func AssertConnectionMethodV110TunnelingProtocolTypeRequired(obj ConnectionMethodV110TunnelingProtocolType) error {
	return nil
}

// AssertConnectionMethodV110TunnelingProtocolTypeConstraints checks if the values respects the defined constraints
func AssertConnectionMethodV110TunnelingProtocolTypeConstraints(obj ConnectionMethodV110TunnelingProtocolType) error {
	return nil
}
