// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type LogServiceV160OverWritePolicy string

// List of LogServiceV160OverWritePolicy
const (
	LOGSERVICEV160OVERWRITEPOLICY_UNKNOWN           LogServiceV160OverWritePolicy = "Unknown"
	LOGSERVICEV160OVERWRITEPOLICY_WRAPS_WHEN_FULL   LogServiceV160OverWritePolicy = "WrapsWhenFull"
	LOGSERVICEV160OVERWRITEPOLICY_NEVER_OVER_WRITES LogServiceV160OverWritePolicy = "NeverOverWrites"
)

// AllowedLogServiceV160OverWritePolicyEnumValues is all the allowed values of LogServiceV160OverWritePolicy enum
var AllowedLogServiceV160OverWritePolicyEnumValues = []LogServiceV160OverWritePolicy{
	"Unknown",
	"WrapsWhenFull",
	"NeverOverWrites",
}

// validLogServiceV160OverWritePolicyEnumValue provides a map of LogServiceV160OverWritePolicys for fast verification of use input
var validLogServiceV160OverWritePolicyEnumValues = map[LogServiceV160OverWritePolicy]struct{}{
	"Unknown":         {},
	"WrapsWhenFull":   {},
	"NeverOverWrites": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v LogServiceV160OverWritePolicy) IsValid() bool {
	_, ok := validLogServiceV160OverWritePolicyEnumValues[v]
	return ok
}

// NewLogServiceV160OverWritePolicyFromValue returns a pointer to a valid LogServiceV160OverWritePolicy
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewLogServiceV160OverWritePolicyFromValue(v string) (LogServiceV160OverWritePolicy, error) {
	ev := LogServiceV160OverWritePolicy(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for LogServiceV160OverWritePolicy: valid values are %v", v, AllowedLogServiceV160OverWritePolicyEnumValues)
}

// AssertLogServiceV160OverWritePolicyRequired checks if the required fields are not zero-ed
func AssertLogServiceV160OverWritePolicyRequired(obj LogServiceV160OverWritePolicy) error {
	return nil
}

// AssertLogServiceV160OverWritePolicyConstraints checks if the values respects the defined constraints
func AssertLogServiceV160OverWritePolicyConstraints(obj LogServiceV160OverWritePolicy) error {
	return nil
}
