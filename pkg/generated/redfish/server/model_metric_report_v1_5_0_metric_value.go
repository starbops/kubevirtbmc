// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"time"
)

// MetricReportV150MetricValue - Properties that capture a metric value and other associated information.
type MetricReportV150MetricValue struct {
	MetricDefinition OdataV4IdRef `json:"MetricDefinition,omitempty"`

	// The metric definitions identifier that contains additional information for the source metric.
	MetricId *string `json:"MetricId,omitempty"`

	// The URI for the property from which this metric is derived.
	MetricProperty *string `json:"MetricProperty,omitempty"`

	// The metric value, as a string.
	MetricValue *string `json:"MetricValue,omitempty"`

	// The OEM extension.
	Oem map[string]interface{} `json:"Oem,omitempty"`

	// The date and time when the metric is obtained.  A management application can establish a time series of metric data by retrieving the instances of metric value and sorting them according to their timestamp.
	Timestamp *time.Time `json:"Timestamp,omitempty"`
}

// AssertMetricReportV150MetricValueRequired checks if the required fields are not zero-ed
func AssertMetricReportV150MetricValueRequired(obj MetricReportV150MetricValue) error {
	if err := AssertOdataV4IdRefRequired(obj.MetricDefinition); err != nil {
		return err
	}
	return nil
}

// AssertMetricReportV150MetricValueConstraints checks if the values respects the defined constraints
func AssertMetricReportV150MetricValueConstraints(obj MetricReportV150MetricValue) error {
	if err := AssertOdataV4IdRefConstraints(obj.MetricDefinition); err != nil {
		return err
	}
	return nil
}
