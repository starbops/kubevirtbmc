// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type ChassisV1250IntrusionSensor string

// List of ChassisV1250IntrusionSensor
const (
	CHASSISV1250INTRUSIONSENSOR_NORMAL             ChassisV1250IntrusionSensor = "Normal"
	CHASSISV1250INTRUSIONSENSOR_HARDWARE_INTRUSION ChassisV1250IntrusionSensor = "HardwareIntrusion"
	CHASSISV1250INTRUSIONSENSOR_TAMPERING_DETECTED ChassisV1250IntrusionSensor = "TamperingDetected"
)

// AllowedChassisV1250IntrusionSensorEnumValues is all the allowed values of ChassisV1250IntrusionSensor enum
var AllowedChassisV1250IntrusionSensorEnumValues = []ChassisV1250IntrusionSensor{
	"Normal",
	"HardwareIntrusion",
	"TamperingDetected",
}

// validChassisV1250IntrusionSensorEnumValue provides a map of ChassisV1250IntrusionSensors for fast verification of use input
var validChassisV1250IntrusionSensorEnumValues = map[ChassisV1250IntrusionSensor]struct{}{
	"Normal":            {},
	"HardwareIntrusion": {},
	"TamperingDetected": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ChassisV1250IntrusionSensor) IsValid() bool {
	_, ok := validChassisV1250IntrusionSensorEnumValues[v]
	return ok
}

// NewChassisV1250IntrusionSensorFromValue returns a pointer to a valid ChassisV1250IntrusionSensor
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewChassisV1250IntrusionSensorFromValue(v string) (ChassisV1250IntrusionSensor, error) {
	ev := ChassisV1250IntrusionSensor(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ChassisV1250IntrusionSensor: valid values are %v", v, AllowedChassisV1250IntrusionSensorEnumValues)
}

// AssertChassisV1250IntrusionSensorRequired checks if the required fields are not zero-ed
func AssertChassisV1250IntrusionSensorRequired(obj ChassisV1250IntrusionSensor) error {
	return nil
}

// AssertChassisV1250IntrusionSensorConstraints checks if the values respects the defined constraints
func AssertChassisV1250IntrusionSensorConstraints(obj ChassisV1250IntrusionSensor) error {
	return nil
}
