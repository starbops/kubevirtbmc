// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

// ExternalAccountProviderV171RoleMapping - The mapping rules that are used to convert the external account providers account information to the local Redfish role.
type ExternalAccountProviderV171RoleMapping struct {

	// The name of the local Redfish role to which to map the remote user or group.
	LocalRole *string `json:"LocalRole,omitempty"`

	MFABypass AccountServiceMfaBypass `json:"MFABypass,omitempty"`

	// The OEM extension.
	Oem map[string]interface{} `json:"Oem,omitempty"`

	// The name of the remote group, or the remote role in the case of a Redfish service, that maps to the local Redfish role to which this entity links.
	RemoteGroup *string `json:"RemoteGroup,omitempty"`

	// The name of the remote user that maps to the local Redfish role to which this entity links.
	RemoteUser *string `json:"RemoteUser,omitempty"`
}

// AssertExternalAccountProviderV171RoleMappingRequired checks if the required fields are not zero-ed
func AssertExternalAccountProviderV171RoleMappingRequired(obj ExternalAccountProviderV171RoleMapping) error {
	if err := AssertAccountServiceMfaBypassRequired(obj.MFABypass); err != nil {
		return err
	}
	return nil
}

// AssertExternalAccountProviderV171RoleMappingConstraints checks if the values respects the defined constraints
func AssertExternalAccountProviderV171RoleMappingConstraints(obj ExternalAccountProviderV171RoleMapping) error {
	if err := AssertAccountServiceMfaBypassConstraints(obj.MFABypass); err != nil {
		return err
	}
	return nil
}
