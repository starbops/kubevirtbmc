// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

// LogServiceV160SyslogSeverity : The syslog severity is an application-specific rating used to describe the urgency of the message.
type LogServiceV160SyslogSeverity string

// List of LogServiceV160SyslogSeverity
const (
	LOGSERVICEV160SYSLOGSEVERITY_EMERGENCY     LogServiceV160SyslogSeverity = "Emergency"
	LOGSERVICEV160SYSLOGSEVERITY_ALERT         LogServiceV160SyslogSeverity = "Alert"
	LOGSERVICEV160SYSLOGSEVERITY_CRITICAL      LogServiceV160SyslogSeverity = "Critical"
	LOGSERVICEV160SYSLOGSEVERITY_ERROR         LogServiceV160SyslogSeverity = "Error"
	LOGSERVICEV160SYSLOGSEVERITY_WARNING       LogServiceV160SyslogSeverity = "Warning"
	LOGSERVICEV160SYSLOGSEVERITY_NOTICE        LogServiceV160SyslogSeverity = "Notice"
	LOGSERVICEV160SYSLOGSEVERITY_INFORMATIONAL LogServiceV160SyslogSeverity = "Informational"
	LOGSERVICEV160SYSLOGSEVERITY_DEBUG         LogServiceV160SyslogSeverity = "Debug"
	LOGSERVICEV160SYSLOGSEVERITY_ALL           LogServiceV160SyslogSeverity = "All"
)

// AllowedLogServiceV160SyslogSeverityEnumValues is all the allowed values of LogServiceV160SyslogSeverity enum
var AllowedLogServiceV160SyslogSeverityEnumValues = []LogServiceV160SyslogSeverity{
	"Emergency",
	"Alert",
	"Critical",
	"Error",
	"Warning",
	"Notice",
	"Informational",
	"Debug",
	"All",
}

// validLogServiceV160SyslogSeverityEnumValue provides a map of LogServiceV160SyslogSeveritys for fast verification of use input
var validLogServiceV160SyslogSeverityEnumValues = map[LogServiceV160SyslogSeverity]struct{}{
	"Emergency":     {},
	"Alert":         {},
	"Critical":      {},
	"Error":         {},
	"Warning":       {},
	"Notice":        {},
	"Informational": {},
	"Debug":         {},
	"All":           {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v LogServiceV160SyslogSeverity) IsValid() bool {
	_, ok := validLogServiceV160SyslogSeverityEnumValues[v]
	return ok
}

// NewLogServiceV160SyslogSeverityFromValue returns a pointer to a valid LogServiceV160SyslogSeverity
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewLogServiceV160SyslogSeverityFromValue(v string) (LogServiceV160SyslogSeverity, error) {
	ev := LogServiceV160SyslogSeverity(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for LogServiceV160SyslogSeverity: valid values are %v", v, AllowedLogServiceV160SyslogSeverityEnumValues)
}

// AssertLogServiceV160SyslogSeverityRequired checks if the required fields are not zero-ed
func AssertLogServiceV160SyslogSeverityRequired(obj LogServiceV160SyslogSeverity) error {
	return nil
}

// AssertLogServiceV160SyslogSeverityConstraints checks if the values respects the defined constraints
func AssertLogServiceV160SyslogSeverityConstraints(obj LogServiceV160SyslogSeverity) error {
	return nil
}
