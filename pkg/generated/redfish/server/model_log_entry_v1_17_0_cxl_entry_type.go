// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type LogEntryV1170CxlEntryType string

// List of LogEntryV1170CxlEntryType
const (
	LOGENTRYV1170CXLENTRYTYPE_DYNAMIC_CAPACITY LogEntryV1170CxlEntryType = "DynamicCapacity"
	LOGENTRYV1170CXLENTRYTYPE_INFORMATIONAL    LogEntryV1170CxlEntryType = "Informational"
	LOGENTRYV1170CXLENTRYTYPE_WARNING          LogEntryV1170CxlEntryType = "Warning"
	LOGENTRYV1170CXLENTRYTYPE_FAILURE          LogEntryV1170CxlEntryType = "Failure"
	LOGENTRYV1170CXLENTRYTYPE_FATAL            LogEntryV1170CxlEntryType = "Fatal"
)

// AllowedLogEntryV1170CxlEntryTypeEnumValues is all the allowed values of LogEntryV1170CxlEntryType enum
var AllowedLogEntryV1170CxlEntryTypeEnumValues = []LogEntryV1170CxlEntryType{
	"DynamicCapacity",
	"Informational",
	"Warning",
	"Failure",
	"Fatal",
}

// validLogEntryV1170CxlEntryTypeEnumValue provides a map of LogEntryV1170CxlEntryTypes for fast verification of use input
var validLogEntryV1170CxlEntryTypeEnumValues = map[LogEntryV1170CxlEntryType]struct{}{
	"DynamicCapacity": {},
	"Informational":   {},
	"Warning":         {},
	"Failure":         {},
	"Fatal":           {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v LogEntryV1170CxlEntryType) IsValid() bool {
	_, ok := validLogEntryV1170CxlEntryTypeEnumValues[v]
	return ok
}

// NewLogEntryV1170CxlEntryTypeFromValue returns a pointer to a valid LogEntryV1170CxlEntryType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewLogEntryV1170CxlEntryTypeFromValue(v string) (LogEntryV1170CxlEntryType, error) {
	ev := LogEntryV1170CxlEntryType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for LogEntryV1170CxlEntryType: valid values are %v", v, AllowedLogEntryV1170CxlEntryTypeEnumValues)
}

// AssertLogEntryV1170CxlEntryTypeRequired checks if the required fields are not zero-ed
func AssertLogEntryV1170CxlEntryTypeRequired(obj LogEntryV1170CxlEntryType) error {
	return nil
}

// AssertLogEntryV1170CxlEntryTypeConstraints checks if the values respects the defined constraints
func AssertLogEntryV1170CxlEntryTypeConstraints(obj LogEntryV1170CxlEntryType) error {
	return nil
}
