// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"errors"
)

// PowerSupplyV153EfficiencyRating - This type describes an efficiency rating for a power supply.
type PowerSupplyV153EfficiencyRating struct {

	// The rated efficiency of this power supply at the specified load.
	EfficiencyPercent *float32 `json:"EfficiencyPercent,omitempty"`

	// The electrical load for this rating.
	LoadPercent *float32 `json:"LoadPercent,omitempty"`
}

// AssertPowerSupplyV153EfficiencyRatingRequired checks if the required fields are not zero-ed
func AssertPowerSupplyV153EfficiencyRatingRequired(obj PowerSupplyV153EfficiencyRating) error {
	return nil
}

// AssertPowerSupplyV153EfficiencyRatingConstraints checks if the values respects the defined constraints
func AssertPowerSupplyV153EfficiencyRatingConstraints(obj PowerSupplyV153EfficiencyRating) error {
	if obj.EfficiencyPercent != nil && *obj.EfficiencyPercent < 0 {
		return &ParsingError{Param: "EfficiencyPercent", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.EfficiencyPercent != nil && *obj.EfficiencyPercent > 100 {
		return &ParsingError{Param: "EfficiencyPercent", Err: errors.New(errMsgMaxValueConstraint)}
	}
	if obj.LoadPercent != nil && *obj.LoadPercent < 0 {
		return &ParsingError{Param: "LoadPercent", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.LoadPercent != nil && *obj.LoadPercent > 100 {
		return &ParsingError{Param: "LoadPercent", Err: errors.New(errMsgMaxValueConstraint)}
	}
	return nil
}
