// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

// TelemetryServiceV133Actions - The available actions for this resource.
type TelemetryServiceV133Actions struct {
	TelemetryServiceClearMetricReports TelemetryServiceV133ClearMetricReports `json:"#TelemetryService.ClearMetricReports,omitempty"`

	TelemetryServiceResetMetricReportDefinitionsToDefaults TelemetryServiceV133ResetMetricReportDefinitionsToDefaults `json:"#TelemetryService.ResetMetricReportDefinitionsToDefaults,omitempty"`

	TelemetryServiceResetTriggersToDefaults TelemetryServiceV133ResetTriggersToDefaults `json:"#TelemetryService.ResetTriggersToDefaults,omitempty"`

	TelemetryServiceSubmitTestMetricReport TelemetryServiceV133SubmitTestMetricReport `json:"#TelemetryService.SubmitTestMetricReport,omitempty"`

	// The available OEM-specific actions for this resource.
	Oem map[string]interface{} `json:"Oem,omitempty"`
}

// AssertTelemetryServiceV133ActionsRequired checks if the required fields are not zero-ed
func AssertTelemetryServiceV133ActionsRequired(obj TelemetryServiceV133Actions) error {
	if err := AssertTelemetryServiceV133ClearMetricReportsRequired(obj.TelemetryServiceClearMetricReports); err != nil {
		return err
	}
	if err := AssertTelemetryServiceV133ResetMetricReportDefinitionsToDefaultsRequired(obj.TelemetryServiceResetMetricReportDefinitionsToDefaults); err != nil {
		return err
	}
	if err := AssertTelemetryServiceV133ResetTriggersToDefaultsRequired(obj.TelemetryServiceResetTriggersToDefaults); err != nil {
		return err
	}
	if err := AssertTelemetryServiceV133SubmitTestMetricReportRequired(obj.TelemetryServiceSubmitTestMetricReport); err != nil {
		return err
	}
	return nil
}

// AssertTelemetryServiceV133ActionsConstraints checks if the values respects the defined constraints
func AssertTelemetryServiceV133ActionsConstraints(obj TelemetryServiceV133Actions) error {
	if err := AssertTelemetryServiceV133ClearMetricReportsConstraints(obj.TelemetryServiceClearMetricReports); err != nil {
		return err
	}
	if err := AssertTelemetryServiceV133ResetMetricReportDefinitionsToDefaultsConstraints(obj.TelemetryServiceResetMetricReportDefinitionsToDefaults); err != nil {
		return err
	}
	if err := AssertTelemetryServiceV133ResetTriggersToDefaultsConstraints(obj.TelemetryServiceResetTriggersToDefaults); err != nil {
		return err
	}
	if err := AssertTelemetryServiceV133SubmitTestMetricReportConstraints(obj.TelemetryServiceSubmitTestMetricReport); err != nil {
		return err
	}
	return nil
}
