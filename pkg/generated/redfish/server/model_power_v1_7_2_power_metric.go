// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"errors"
)

// PowerV172PowerMetric - The power metrics for a resource.
type PowerV172PowerMetric struct {

	// The average power level over the measurement window over the last IntervalInMin minutes.
	AverageConsumedWatts *float32 `json:"AverageConsumedWatts,omitempty"`

	// The time interval, or window, over which the power metrics are measured.
	IntervalInMin *int64 `json:"IntervalInMin,omitempty"`

	// The highest power consumption level, in watt units, that has occurred over the measurement window within the last IntervalInMin minutes.
	MaxConsumedWatts *float32 `json:"MaxConsumedWatts,omitempty"`

	// The lowest power consumption level, in watt units, over the measurement window that occurred within the last IntervalInMin minutes.
	MinConsumedWatts *float32 `json:"MinConsumedWatts,omitempty"`
}

// AssertPowerV172PowerMetricRequired checks if the required fields are not zero-ed
func AssertPowerV172PowerMetricRequired(obj PowerV172PowerMetric) error {
	return nil
}

// AssertPowerV172PowerMetricConstraints checks if the values respects the defined constraints
func AssertPowerV172PowerMetricConstraints(obj PowerV172PowerMetric) error {
	if obj.AverageConsumedWatts != nil && *obj.AverageConsumedWatts < 0 {
		return &ParsingError{Param: "AverageConsumedWatts", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.IntervalInMin != nil && *obj.IntervalInMin < 0 {
		return &ParsingError{Param: "IntervalInMin", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.MaxConsumedWatts != nil && *obj.MaxConsumedWatts < 0 {
		return &ParsingError{Param: "MaxConsumedWatts", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.MinConsumedWatts != nil && *obj.MinConsumedWatts < 0 {
		return &ParsingError{Param: "MinConsumedWatts", Err: errors.New(errMsgMinValueConstraint)}
	}
	return nil
}
