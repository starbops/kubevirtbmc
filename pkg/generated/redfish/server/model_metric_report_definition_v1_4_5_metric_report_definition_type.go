// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

// MetricReportDefinitionV145MetricReportDefinitionType : Indicates when the metric report is generated.
type MetricReportDefinitionV145MetricReportDefinitionType string

// List of MetricReportDefinitionV145MetricReportDefinitionType
const (
	METRICREPORTDEFINITIONV145METRICREPORTDEFINITIONTYPE_PERIODIC   MetricReportDefinitionV145MetricReportDefinitionType = "Periodic"
	METRICREPORTDEFINITIONV145METRICREPORTDEFINITIONTYPE_ON_CHANGE  MetricReportDefinitionV145MetricReportDefinitionType = "OnChange"
	METRICREPORTDEFINITIONV145METRICREPORTDEFINITIONTYPE_ON_REQUEST MetricReportDefinitionV145MetricReportDefinitionType = "OnRequest"
)

// AllowedMetricReportDefinitionV145MetricReportDefinitionTypeEnumValues is all the allowed values of MetricReportDefinitionV145MetricReportDefinitionType enum
var AllowedMetricReportDefinitionV145MetricReportDefinitionTypeEnumValues = []MetricReportDefinitionV145MetricReportDefinitionType{
	"Periodic",
	"OnChange",
	"OnRequest",
}

// validMetricReportDefinitionV145MetricReportDefinitionTypeEnumValue provides a map of MetricReportDefinitionV145MetricReportDefinitionTypes for fast verification of use input
var validMetricReportDefinitionV145MetricReportDefinitionTypeEnumValues = map[MetricReportDefinitionV145MetricReportDefinitionType]struct{}{
	"Periodic":  {},
	"OnChange":  {},
	"OnRequest": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MetricReportDefinitionV145MetricReportDefinitionType) IsValid() bool {
	_, ok := validMetricReportDefinitionV145MetricReportDefinitionTypeEnumValues[v]
	return ok
}

// NewMetricReportDefinitionV145MetricReportDefinitionTypeFromValue returns a pointer to a valid MetricReportDefinitionV145MetricReportDefinitionType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMetricReportDefinitionV145MetricReportDefinitionTypeFromValue(v string) (MetricReportDefinitionV145MetricReportDefinitionType, error) {
	ev := MetricReportDefinitionV145MetricReportDefinitionType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for MetricReportDefinitionV145MetricReportDefinitionType: valid values are %v", v, AllowedMetricReportDefinitionV145MetricReportDefinitionTypeEnumValues)
}

// AssertMetricReportDefinitionV145MetricReportDefinitionTypeRequired checks if the required fields are not zero-ed
func AssertMetricReportDefinitionV145MetricReportDefinitionTypeRequired(obj MetricReportDefinitionV145MetricReportDefinitionType) error {
	return nil
}

// AssertMetricReportDefinitionV145MetricReportDefinitionTypeConstraints checks if the values respects the defined constraints
func AssertMetricReportDefinitionV145MetricReportDefinitionTypeConstraints(obj MetricReportDefinitionV145MetricReportDefinitionType) error {
	return nil
}
