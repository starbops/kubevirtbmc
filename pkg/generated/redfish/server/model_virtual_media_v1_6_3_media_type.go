// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type VirtualMediaV163MediaType string

// List of VirtualMediaV163MediaType
const (
	VIRTUALMEDIAV163MEDIATYPE_CD        VirtualMediaV163MediaType = "CD"
	VIRTUALMEDIAV163MEDIATYPE_FLOPPY    VirtualMediaV163MediaType = "Floppy"
	VIRTUALMEDIAV163MEDIATYPE_USB_STICK VirtualMediaV163MediaType = "USBStick"
	VIRTUALMEDIAV163MEDIATYPE_DVD       VirtualMediaV163MediaType = "DVD"
)

// AllowedVirtualMediaV163MediaTypeEnumValues is all the allowed values of VirtualMediaV163MediaType enum
var AllowedVirtualMediaV163MediaTypeEnumValues = []VirtualMediaV163MediaType{
	"CD",
	"Floppy",
	"USBStick",
	"DVD",
}

// validVirtualMediaV163MediaTypeEnumValue provides a map of VirtualMediaV163MediaTypes for fast verification of use input
var validVirtualMediaV163MediaTypeEnumValues = map[VirtualMediaV163MediaType]struct{}{
	"CD":       {},
	"Floppy":   {},
	"USBStick": {},
	"DVD":      {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v VirtualMediaV163MediaType) IsValid() bool {
	_, ok := validVirtualMediaV163MediaTypeEnumValues[v]
	return ok
}

// NewVirtualMediaV163MediaTypeFromValue returns a pointer to a valid VirtualMediaV163MediaType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewVirtualMediaV163MediaTypeFromValue(v string) (VirtualMediaV163MediaType, error) {
	ev := VirtualMediaV163MediaType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for VirtualMediaV163MediaType: valid values are %v", v, AllowedVirtualMediaV163MediaTypeEnumValues)
}

// AssertVirtualMediaV163MediaTypeRequired checks if the required fields are not zero-ed
func AssertVirtualMediaV163MediaTypeRequired(obj VirtualMediaV163MediaType) error {
	return nil
}

// AssertVirtualMediaV163MediaTypeConstraints checks if the values respects the defined constraints
func AssertVirtualMediaV163MediaTypeConstraints(obj VirtualMediaV163MediaType) error {
	return nil
}
