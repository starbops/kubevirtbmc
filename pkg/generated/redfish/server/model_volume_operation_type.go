// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type VolumeOperationType string

// List of VolumeOperationType
const (
	VOLUMEOPERATIONTYPE_DEDUPLICATE       VolumeOperationType = "Deduplicate"
	VOLUMEOPERATIONTYPE_CHECK_CONSISTENCY VolumeOperationType = "CheckConsistency"
	VOLUMEOPERATIONTYPE_INITIALIZE        VolumeOperationType = "Initialize"
	VOLUMEOPERATIONTYPE_REPLICATE         VolumeOperationType = "Replicate"
	VOLUMEOPERATIONTYPE_DELETE            VolumeOperationType = "Delete"
	VOLUMEOPERATIONTYPE_CHANGE_RAID_TYPE  VolumeOperationType = "ChangeRAIDType"
	VOLUMEOPERATIONTYPE_REBUILD           VolumeOperationType = "Rebuild"
	VOLUMEOPERATIONTYPE_ENCRYPT           VolumeOperationType = "Encrypt"
	VOLUMEOPERATIONTYPE_DECRYPT           VolumeOperationType = "Decrypt"
	VOLUMEOPERATIONTYPE_RESIZE            VolumeOperationType = "Resize"
	VOLUMEOPERATIONTYPE_COMPRESS          VolumeOperationType = "Compress"
	VOLUMEOPERATIONTYPE_SANITIZE          VolumeOperationType = "Sanitize"
	VOLUMEOPERATIONTYPE_FORMAT            VolumeOperationType = "Format"
	VOLUMEOPERATIONTYPE_CHANGE_STRIP_SIZE VolumeOperationType = "ChangeStripSize"
)

// AllowedVolumeOperationTypeEnumValues is all the allowed values of VolumeOperationType enum
var AllowedVolumeOperationTypeEnumValues = []VolumeOperationType{
	"Deduplicate",
	"CheckConsistency",
	"Initialize",
	"Replicate",
	"Delete",
	"ChangeRAIDType",
	"Rebuild",
	"Encrypt",
	"Decrypt",
	"Resize",
	"Compress",
	"Sanitize",
	"Format",
	"ChangeStripSize",
}

// validVolumeOperationTypeEnumValue provides a map of VolumeOperationTypes for fast verification of use input
var validVolumeOperationTypeEnumValues = map[VolumeOperationType]struct{}{
	"Deduplicate":      {},
	"CheckConsistency": {},
	"Initialize":       {},
	"Replicate":        {},
	"Delete":           {},
	"ChangeRAIDType":   {},
	"Rebuild":          {},
	"Encrypt":          {},
	"Decrypt":          {},
	"Resize":           {},
	"Compress":         {},
	"Sanitize":         {},
	"Format":           {},
	"ChangeStripSize":  {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v VolumeOperationType) IsValid() bool {
	_, ok := validVolumeOperationTypeEnumValues[v]
	return ok
}

// NewVolumeOperationTypeFromValue returns a pointer to a valid VolumeOperationType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewVolumeOperationTypeFromValue(v string) (VolumeOperationType, error) {
	ev := VolumeOperationType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for VolumeOperationType: valid values are %v", v, AllowedVolumeOperationTypeEnumValues)
}

// AssertVolumeOperationTypeRequired checks if the required fields are not zero-ed
func AssertVolumeOperationTypeRequired(obj VolumeOperationType) error {
	return nil
}

// AssertVolumeOperationTypeConstraints checks if the values respects the defined constraints
func AssertVolumeOperationTypeConstraints(obj VolumeOperationType) error {
	return nil
}
