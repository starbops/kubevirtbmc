// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type RedundancyV142RedundancyType string

// List of RedundancyV142RedundancyType
const (
	REDUNDANCYV142REDUNDANCYTYPE_FAILOVER      RedundancyV142RedundancyType = "Failover"
	REDUNDANCYV142REDUNDANCYTYPE_N_PLUS_M      RedundancyV142RedundancyType = "NPlusM"
	REDUNDANCYV142REDUNDANCYTYPE_SHARING       RedundancyV142RedundancyType = "Sharing"
	REDUNDANCYV142REDUNDANCYTYPE_SPARING       RedundancyV142RedundancyType = "Sparing"
	REDUNDANCYV142REDUNDANCYTYPE_NOT_REDUNDANT RedundancyV142RedundancyType = "NotRedundant"
)

// AllowedRedundancyV142RedundancyTypeEnumValues is all the allowed values of RedundancyV142RedundancyType enum
var AllowedRedundancyV142RedundancyTypeEnumValues = []RedundancyV142RedundancyType{
	"Failover",
	"NPlusM",
	"Sharing",
	"Sparing",
	"NotRedundant",
}

// validRedundancyV142RedundancyTypeEnumValue provides a map of RedundancyV142RedundancyTypes for fast verification of use input
var validRedundancyV142RedundancyTypeEnumValues = map[RedundancyV142RedundancyType]struct{}{
	"Failover":     {},
	"NPlusM":       {},
	"Sharing":      {},
	"Sparing":      {},
	"NotRedundant": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v RedundancyV142RedundancyType) IsValid() bool {
	_, ok := validRedundancyV142RedundancyTypeEnumValues[v]
	return ok
}

// NewRedundancyV142RedundancyTypeFromValue returns a pointer to a valid RedundancyV142RedundancyType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewRedundancyV142RedundancyTypeFromValue(v string) (RedundancyV142RedundancyType, error) {
	ev := RedundancyV142RedundancyType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for RedundancyV142RedundancyType: valid values are %v", v, AllowedRedundancyV142RedundancyTypeEnumValues)
}

// AssertRedundancyV142RedundancyTypeRequired checks if the required fields are not zero-ed
func AssertRedundancyV142RedundancyTypeRequired(obj RedundancyV142RedundancyType) error {
	return nil
}

// AssertRedundancyV142RedundancyTypeConstraints checks if the values respects the defined constraints
func AssertRedundancyV142RedundancyTypeConstraints(obj RedundancyV142RedundancyType) error {
	return nil
}
