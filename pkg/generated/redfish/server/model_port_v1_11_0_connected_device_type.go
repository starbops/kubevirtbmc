// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type PortV1110ConnectedDeviceType string

// List of PortV1110ConnectedDeviceType
const (
	PORTV1110CONNECTEDDEVICETYPE_NONE        PortV1110ConnectedDeviceType = "None"
	PORTV1110CONNECTEDDEVICETYPE_PCIE_DEVICE PortV1110ConnectedDeviceType = "PCIeDevice"
	PORTV1110CONNECTEDDEVICETYPE_TYPE1       PortV1110ConnectedDeviceType = "Type1"
	PORTV1110CONNECTEDDEVICETYPE_TYPE2       PortV1110ConnectedDeviceType = "Type2"
	PORTV1110CONNECTEDDEVICETYPE_TYPE3_SLD   PortV1110ConnectedDeviceType = "Type3SLD"
	PORTV1110CONNECTEDDEVICETYPE_TYPE3_MLD   PortV1110ConnectedDeviceType = "Type3MLD"
)

// AllowedPortV1110ConnectedDeviceTypeEnumValues is all the allowed values of PortV1110ConnectedDeviceType enum
var AllowedPortV1110ConnectedDeviceTypeEnumValues = []PortV1110ConnectedDeviceType{
	"None",
	"PCIeDevice",
	"Type1",
	"Type2",
	"Type3SLD",
	"Type3MLD",
}

// validPortV1110ConnectedDeviceTypeEnumValue provides a map of PortV1110ConnectedDeviceTypes for fast verification of use input
var validPortV1110ConnectedDeviceTypeEnumValues = map[PortV1110ConnectedDeviceType]struct{}{
	"None":       {},
	"PCIeDevice": {},
	"Type1":      {},
	"Type2":      {},
	"Type3SLD":   {},
	"Type3MLD":   {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PortV1110ConnectedDeviceType) IsValid() bool {
	_, ok := validPortV1110ConnectedDeviceTypeEnumValues[v]
	return ok
}

// NewPortV1110ConnectedDeviceTypeFromValue returns a pointer to a valid PortV1110ConnectedDeviceType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPortV1110ConnectedDeviceTypeFromValue(v string) (PortV1110ConnectedDeviceType, error) {
	ev := PortV1110ConnectedDeviceType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for PortV1110ConnectedDeviceType: valid values are %v", v, AllowedPortV1110ConnectedDeviceTypeEnumValues)
}

// AssertPortV1110ConnectedDeviceTypeRequired checks if the required fields are not zero-ed
func AssertPortV1110ConnectedDeviceTypeRequired(obj PortV1110ConnectedDeviceType) error {
	return nil
}

// AssertPortV1110ConnectedDeviceTypeConstraints checks if the values respects the defined constraints
func AssertPortV1110ConnectedDeviceTypeConstraints(obj PortV1110ConnectedDeviceType) error {
	return nil
}
