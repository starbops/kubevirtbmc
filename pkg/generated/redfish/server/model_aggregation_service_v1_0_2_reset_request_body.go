// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"errors"
)

// AggregationServiceV102ResetRequestBody - This action is used to reset a set of resources.  For example this could be a list of computer systems.
type AggregationServiceV102ResetRequestBody struct {

	// The number of elements in each batch being reset.
	BatchSize int64 `json:"BatchSize,omitempty"`

	// The delay of the batches of elements being reset in seconds.
	DelayBetweenBatchesInSeconds int64 `json:"DelayBetweenBatchesInSeconds,omitempty"`

	ResetType ResourceResetType `json:"ResetType,omitempty"`

	// An array of links to the resources being reset.
	TargetURIs []OdataV4IdRef `json:"TargetURIs"`
}

// AssertAggregationServiceV102ResetRequestBodyRequired checks if the required fields are not zero-ed
func AssertAggregationServiceV102ResetRequestBodyRequired(obj AggregationServiceV102ResetRequestBody) error {
	elements := map[string]interface{}{
		"TargetURIs": obj.TargetURIs,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.TargetURIs {
		if err := AssertOdataV4IdRefRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertAggregationServiceV102ResetRequestBodyConstraints checks if the values respects the defined constraints
func AssertAggregationServiceV102ResetRequestBodyConstraints(obj AggregationServiceV102ResetRequestBody) error {
	if obj.BatchSize < 0 {
		return &ParsingError{Param: "BatchSize", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.DelayBetweenBatchesInSeconds < 0 {
		return &ParsingError{Param: "DelayBetweenBatchesInSeconds", Err: errors.New(errMsgMinValueConstraint)}
	}
	for _, el := range obj.TargetURIs {
		if err := AssertOdataV4IdRefConstraints(el); err != nil {
			return err
		}
	}
	return nil
}
