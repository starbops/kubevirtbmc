// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2024.3
 */

package server

import (
	"errors"
)

// ComputerSystemV1230Boot - The boot information for this resource.
type ComputerSystemV1230Boot struct {

	// Ordered array of boot source aliases representing the persistent boot order associated with this computer system.
	AliasBootOrder []ComputerSystemV1230BootAliasBootOrderInner `json:"AliasBootOrder,omitempty"`

	// The number of attempts the system will automatically retry booting.
	AutomaticRetryAttempts *int64 `json:"AutomaticRetryAttempts,omitempty"`

	AutomaticRetryConfig *ComputerSystemV1230AutomaticRetryConfig `json:"AutomaticRetryConfig,omitempty"`

	// The `BootOptionReference` of the Boot Option to perform a one-time boot from when `BootSourceOverrideTarget` is `UefiBootNext`.
	BootNext *string `json:"BootNext,omitempty"`

	BootOptions OdataV4IdRef `json:"BootOptions,omitempty"`

	// An array of `BootOptionReference` strings that represent the persistent boot order for with this computer system.  Changes to the boot order typically require a system reset before they take effect.  It is likely that a client finds the `@Redfish.Settings` term in this resource, and if it is found, the client makes requests to change boot order settings by modifying the resource identified by the `@Redfish.Settings` term.
	BootOrder []*string `json:"BootOrder,omitempty"`

	BootOrderPropertySelection *ComputerSystemV1230BootOrderTypes `json:"BootOrderPropertySelection,omitempty"`

	BootSourceOverrideEnabled *ComputerSystemV1230BootSourceOverrideEnabled `json:"BootSourceOverrideEnabled,omitempty"`

	BootSourceOverrideMode *ComputerSystemV1230BootSourceOverrideMode `json:"BootSourceOverrideMode,omitempty"`

	BootSourceOverrideTarget *ComputerSystemBootSource `json:"BootSourceOverrideTarget,omitempty"`

	Certificates OdataV4IdRef `json:"Certificates,omitempty"`

	// The URI to boot from when `BootSourceOverrideTarget` is set to `UefiHttp`.
	HttpBootUri *string `json:"HttpBootUri,omitempty"`

	// The number of remaining automatic retry boots.
	RemainingAutomaticRetryAttempts *int64 `json:"RemainingAutomaticRetryAttempts,omitempty"`

	StopBootOnFault *ComputerSystemV1230StopBootOnFault `json:"StopBootOnFault,omitempty"`

	TrustedModuleRequiredToBoot *ComputerSystemV1230TrustedModuleRequiredToBoot `json:"TrustedModuleRequiredToBoot,omitempty"`

	// The UEFI device path of the device from which to boot when `BootSourceOverrideTarget` is `UefiTarget`.
	UefiTargetBootSourceOverride *string `json:"UefiTargetBootSourceOverride,omitempty"`
}

// AssertComputerSystemV1230BootRequired checks if the required fields are not zero-ed
func AssertComputerSystemV1230BootRequired(obj ComputerSystemV1230Boot) error {
	for _, el := range obj.AliasBootOrder {
		if err := AssertComputerSystemV1230BootAliasBootOrderInnerRequired(el); err != nil {
			return err
		}
	}
	if err := AssertOdataV4IdRefRequired(obj.BootOptions); err != nil {
		return err
	}
	if err := AssertOdataV4IdRefRequired(obj.Certificates); err != nil {
		return err
	}
	return nil
}

// AssertComputerSystemV1230BootConstraints checks if the values respects the defined constraints
func AssertComputerSystemV1230BootConstraints(obj ComputerSystemV1230Boot) error {
	for _, el := range obj.AliasBootOrder {
		if err := AssertComputerSystemV1230BootAliasBootOrderInnerConstraints(el); err != nil {
			return err
		}
	}
	if obj.AutomaticRetryAttempts != nil && *obj.AutomaticRetryAttempts < 0 {
		return &ParsingError{Param: "AutomaticRetryAttempts", Err: errors.New(errMsgMinValueConstraint)}
	}
	if err := AssertOdataV4IdRefConstraints(obj.BootOptions); err != nil {
		return err
	}
	if err := AssertOdataV4IdRefConstraints(obj.Certificates); err != nil {
		return err
	}
	if obj.RemainingAutomaticRetryAttempts != nil && *obj.RemainingAutomaticRetryAttempts < 0 {
		return &ParsingError{Param: "RemainingAutomaticRetryAttempts", Err: errors.New(errMsgMinValueConstraint)}
	}
	return nil
}
