// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type SerialInterfaceV120SignalType string

// List of SerialInterfaceV120SignalType
const (
	SERIALINTERFACEV120SIGNALTYPE_RS232 SerialInterfaceV120SignalType = "Rs232"
	SERIALINTERFACEV120SIGNALTYPE_RS485 SerialInterfaceV120SignalType = "Rs485"
)

// AllowedSerialInterfaceV120SignalTypeEnumValues is all the allowed values of SerialInterfaceV120SignalType enum
var AllowedSerialInterfaceV120SignalTypeEnumValues = []SerialInterfaceV120SignalType{
	"Rs232",
	"Rs485",
}

// validSerialInterfaceV120SignalTypeEnumValue provides a map of SerialInterfaceV120SignalTypes for fast verification of use input
var validSerialInterfaceV120SignalTypeEnumValues = map[SerialInterfaceV120SignalType]struct{}{
	"Rs232": {},
	"Rs485": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SerialInterfaceV120SignalType) IsValid() bool {
	_, ok := validSerialInterfaceV120SignalTypeEnumValues[v]
	return ok
}

// NewSerialInterfaceV120SignalTypeFromValue returns a pointer to a valid SerialInterfaceV120SignalType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSerialInterfaceV120SignalTypeFromValue(v string) (SerialInterfaceV120SignalType, error) {
	ev := SerialInterfaceV120SignalType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for SerialInterfaceV120SignalType: valid values are %v", v, AllowedSerialInterfaceV120SignalTypeEnumValues)
}

// AssertSerialInterfaceV120SignalTypeRequired checks if the required fields are not zero-ed
func AssertSerialInterfaceV120SignalTypeRequired(obj SerialInterfaceV120SignalType) error {
	return nil
}

// AssertSerialInterfaceV120SignalTypeConstraints checks if the values respects the defined constraints
func AssertSerialInterfaceV120SignalTypeConstraints(obj SerialInterfaceV120SignalType) error {
	return nil
}
