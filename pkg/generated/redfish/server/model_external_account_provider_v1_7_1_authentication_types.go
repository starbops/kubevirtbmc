// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type ExternalAccountProviderV171AuthenticationTypes string

// List of ExternalAccountProviderV171AuthenticationTypes
const (
	EXTERNALACCOUNTPROVIDERV171AUTHENTICATIONTYPES_TOKEN                 ExternalAccountProviderV171AuthenticationTypes = "Token"
	EXTERNALACCOUNTPROVIDERV171AUTHENTICATIONTYPES_KERBEROS_KEYTAB       ExternalAccountProviderV171AuthenticationTypes = "KerberosKeytab"
	EXTERNALACCOUNTPROVIDERV171AUTHENTICATIONTYPES_USERNAME_AND_PASSWORD ExternalAccountProviderV171AuthenticationTypes = "UsernameAndPassword"
	EXTERNALACCOUNTPROVIDERV171AUTHENTICATIONTYPES_OEM                   ExternalAccountProviderV171AuthenticationTypes = "OEM"
)

// AllowedExternalAccountProviderV171AuthenticationTypesEnumValues is all the allowed values of ExternalAccountProviderV171AuthenticationTypes enum
var AllowedExternalAccountProviderV171AuthenticationTypesEnumValues = []ExternalAccountProviderV171AuthenticationTypes{
	"Token",
	"KerberosKeytab",
	"UsernameAndPassword",
	"OEM",
}

// validExternalAccountProviderV171AuthenticationTypesEnumValue provides a map of ExternalAccountProviderV171AuthenticationTypess for fast verification of use input
var validExternalAccountProviderV171AuthenticationTypesEnumValues = map[ExternalAccountProviderV171AuthenticationTypes]struct{}{
	"Token":               {},
	"KerberosKeytab":      {},
	"UsernameAndPassword": {},
	"OEM":                 {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ExternalAccountProviderV171AuthenticationTypes) IsValid() bool {
	_, ok := validExternalAccountProviderV171AuthenticationTypesEnumValues[v]
	return ok
}

// NewExternalAccountProviderV171AuthenticationTypesFromValue returns a pointer to a valid ExternalAccountProviderV171AuthenticationTypes
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewExternalAccountProviderV171AuthenticationTypesFromValue(v string) (ExternalAccountProviderV171AuthenticationTypes, error) {
	ev := ExternalAccountProviderV171AuthenticationTypes(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ExternalAccountProviderV171AuthenticationTypes: valid values are %v", v, AllowedExternalAccountProviderV171AuthenticationTypesEnumValues)
}

// AssertExternalAccountProviderV171AuthenticationTypesRequired checks if the required fields are not zero-ed
func AssertExternalAccountProviderV171AuthenticationTypesRequired(obj ExternalAccountProviderV171AuthenticationTypes) error {
	return nil
}

// AssertExternalAccountProviderV171AuthenticationTypesConstraints checks if the values respects the defined constraints
func AssertExternalAccountProviderV171AuthenticationTypesConstraints(obj ExternalAccountProviderV171AuthenticationTypes) error {
	return nil
}
