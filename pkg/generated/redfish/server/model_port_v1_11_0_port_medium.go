// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type PortV1110PortMedium string

// List of PortV1110PortMedium
const (
	PORTV1110PORTMEDIUM_ELECTRICAL PortV1110PortMedium = "Electrical"
	PORTV1110PORTMEDIUM_OPTICAL    PortV1110PortMedium = "Optical"
)

// AllowedPortV1110PortMediumEnumValues is all the allowed values of PortV1110PortMedium enum
var AllowedPortV1110PortMediumEnumValues = []PortV1110PortMedium{
	"Electrical",
	"Optical",
}

// validPortV1110PortMediumEnumValue provides a map of PortV1110PortMediums for fast verification of use input
var validPortV1110PortMediumEnumValues = map[PortV1110PortMedium]struct{}{
	"Electrical": {},
	"Optical":    {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PortV1110PortMedium) IsValid() bool {
	_, ok := validPortV1110PortMediumEnumValues[v]
	return ok
}

// NewPortV1110PortMediumFromValue returns a pointer to a valid PortV1110PortMedium
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPortV1110PortMediumFromValue(v string) (PortV1110PortMedium, error) {
	ev := PortV1110PortMedium(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for PortV1110PortMedium: valid values are %v", v, AllowedPortV1110PortMediumEnumValues)
}

// AssertPortV1110PortMediumRequired checks if the required fields are not zero-ed
func AssertPortV1110PortMediumRequired(obj PortV1110PortMedium) error {
	return nil
}

// AssertPortV1110PortMediumConstraints checks if the values respects the defined constraints
func AssertPortV1110PortMediumConstraints(obj PortV1110PortMedium) error {
	return nil
}
