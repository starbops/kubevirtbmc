// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

// CertificateV181RekeyResponse - The response body for the Rekey action.
type CertificateV181RekeyResponse struct {

	// The string for the certificate signing request.
	CSRString string `json:"CSRString"`

	Certificate OdataV4IdRef `json:"Certificate"`
}

// AssertCertificateV181RekeyResponseRequired checks if the required fields are not zero-ed
func AssertCertificateV181RekeyResponseRequired(obj CertificateV181RekeyResponse) error {
	elements := map[string]interface{}{
		"CSRString":   obj.CSRString,
		"Certificate": obj.Certificate,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertOdataV4IdRefRequired(obj.Certificate); err != nil {
		return err
	}
	return nil
}

// AssertCertificateV181RekeyResponseConstraints checks if the values respects the defined constraints
func AssertCertificateV181RekeyResponseConstraints(obj CertificateV181RekeyResponse) error {
	if err := AssertOdataV4IdRefConstraints(obj.Certificate); err != nil {
		return err
	}
	return nil
}
