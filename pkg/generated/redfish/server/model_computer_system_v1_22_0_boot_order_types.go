// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

// ComputerSystemV1220BootOrderTypes : The enumerations of BootOrderTypes specify the choice of boot order property to use when controller the persistent boot order for this computer system.
type ComputerSystemV1220BootOrderTypes string

// List of ComputerSystemV1220BootOrderTypes
const (
	COMPUTERSYSTEMV1220BOOTORDERTYPES_BOOT_ORDER       ComputerSystemV1220BootOrderTypes = "BootOrder"
	COMPUTERSYSTEMV1220BOOTORDERTYPES_ALIAS_BOOT_ORDER ComputerSystemV1220BootOrderTypes = "AliasBootOrder"
)

// AllowedComputerSystemV1220BootOrderTypesEnumValues is all the allowed values of ComputerSystemV1220BootOrderTypes enum
var AllowedComputerSystemV1220BootOrderTypesEnumValues = []ComputerSystemV1220BootOrderTypes{
	"BootOrder",
	"AliasBootOrder",
}

// validComputerSystemV1220BootOrderTypesEnumValue provides a map of ComputerSystemV1220BootOrderTypess for fast verification of use input
var validComputerSystemV1220BootOrderTypesEnumValues = map[ComputerSystemV1220BootOrderTypes]struct{}{
	"BootOrder":      {},
	"AliasBootOrder": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ComputerSystemV1220BootOrderTypes) IsValid() bool {
	_, ok := validComputerSystemV1220BootOrderTypesEnumValues[v]
	return ok
}

// NewComputerSystemV1220BootOrderTypesFromValue returns a pointer to a valid ComputerSystemV1220BootOrderTypes
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewComputerSystemV1220BootOrderTypesFromValue(v string) (ComputerSystemV1220BootOrderTypes, error) {
	ev := ComputerSystemV1220BootOrderTypes(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ComputerSystemV1220BootOrderTypes: valid values are %v", v, AllowedComputerSystemV1220BootOrderTypesEnumValues)
}

// AssertComputerSystemV1220BootOrderTypesRequired checks if the required fields are not zero-ed
func AssertComputerSystemV1220BootOrderTypesRequired(obj ComputerSystemV1220BootOrderTypes) error {
	return nil
}

// AssertComputerSystemV1220BootOrderTypesConstraints checks if the values respects the defined constraints
func AssertComputerSystemV1220BootOrderTypesConstraints(obj ComputerSystemV1220BootOrderTypes) error {
	return nil
}
