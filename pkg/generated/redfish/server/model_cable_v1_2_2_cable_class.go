// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type CableV122CableClass string

// List of CableV122CableClass
const (
	CABLEV122CABLECLASS_POWER   CableV122CableClass = "Power"
	CABLEV122CABLECLASS_NETWORK CableV122CableClass = "Network"
	CABLEV122CABLECLASS_STORAGE CableV122CableClass = "Storage"
	CABLEV122CABLECLASS_FAN     CableV122CableClass = "Fan"
	CABLEV122CABLECLASS_PCIE    CableV122CableClass = "PCIe"
	CABLEV122CABLECLASS_USB     CableV122CableClass = "USB"
	CABLEV122CABLECLASS_VIDEO   CableV122CableClass = "Video"
	CABLEV122CABLECLASS_FABRIC  CableV122CableClass = "Fabric"
	CABLEV122CABLECLASS_SERIAL  CableV122CableClass = "Serial"
	CABLEV122CABLECLASS_GENERAL CableV122CableClass = "General"
)

// AllowedCableV122CableClassEnumValues is all the allowed values of CableV122CableClass enum
var AllowedCableV122CableClassEnumValues = []CableV122CableClass{
	"Power",
	"Network",
	"Storage",
	"Fan",
	"PCIe",
	"USB",
	"Video",
	"Fabric",
	"Serial",
	"General",
}

// validCableV122CableClassEnumValue provides a map of CableV122CableClasss for fast verification of use input
var validCableV122CableClassEnumValues = map[CableV122CableClass]struct{}{
	"Power":   {},
	"Network": {},
	"Storage": {},
	"Fan":     {},
	"PCIe":    {},
	"USB":     {},
	"Video":   {},
	"Fabric":  {},
	"Serial":  {},
	"General": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CableV122CableClass) IsValid() bool {
	_, ok := validCableV122CableClassEnumValues[v]
	return ok
}

// NewCableV122CableClassFromValue returns a pointer to a valid CableV122CableClass
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCableV122CableClassFromValue(v string) (CableV122CableClass, error) {
	ev := CableV122CableClass(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for CableV122CableClass: valid values are %v", v, AllowedCableV122CableClassEnumValues)
}

// AssertCableV122CableClassRequired checks if the required fields are not zero-ed
func AssertCableV122CableClassRequired(obj CableV122CableClass) error {
	return nil
}

// AssertCableV122CableClassConstraints checks if the values respects the defined constraints
func AssertCableV122CableClassConstraints(obj CableV122CableClass) error {
	return nil
}
