// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"time"
)

// AggregationSourceV140SshSettingsType - Settings for an aggregation source using SSH as part of the associated connection method.
type AggregationSourceV140SshSettingsType struct {
	PresentedPublicHostKey OdataV4IdRef `json:"PresentedPublicHostKey,omitempty"`

	// The date and time when the key referenced by the PresentedPublicHostKey property was last updated.
	PresentedPublicHostKeyTimestamp *time.Time `json:"PresentedPublicHostKeyTimestamp,omitempty"`

	PublicIdentityKey OdataV4IdRef `json:"PublicIdentityKey,omitempty"`

	TrustedPublicHostKeys OdataV4IdRef `json:"TrustedPublicHostKeys,omitempty"`

	UserAuthenticationMethod AggregationSourceV140UserAuthenticationMethod `json:"UserAuthenticationMethod,omitempty"`
}

// AssertAggregationSourceV140SshSettingsTypeRequired checks if the required fields are not zero-ed
func AssertAggregationSourceV140SshSettingsTypeRequired(obj AggregationSourceV140SshSettingsType) error {
	if err := AssertOdataV4IdRefRequired(obj.PresentedPublicHostKey); err != nil {
		return err
	}
	if err := AssertOdataV4IdRefRequired(obj.PublicIdentityKey); err != nil {
		return err
	}
	if err := AssertOdataV4IdRefRequired(obj.TrustedPublicHostKeys); err != nil {
		return err
	}
	return nil
}

// AssertAggregationSourceV140SshSettingsTypeConstraints checks if the values respects the defined constraints
func AssertAggregationSourceV140SshSettingsTypeConstraints(obj AggregationSourceV140SshSettingsType) error {
	if err := AssertOdataV4IdRefConstraints(obj.PresentedPublicHostKey); err != nil {
		return err
	}
	if err := AssertOdataV4IdRefConstraints(obj.PublicIdentityKey); err != nil {
		return err
	}
	if err := AssertOdataV4IdRefConstraints(obj.TrustedPublicHostKeys); err != nil {
		return err
	}
	return nil
}
