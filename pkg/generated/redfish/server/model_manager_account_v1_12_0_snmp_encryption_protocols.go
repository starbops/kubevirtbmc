// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type ManagerAccountV1120SnmpEncryptionProtocols string

// List of ManagerAccountV1120SnmpEncryptionProtocols
const (
	MANAGERACCOUNTV1120SNMPENCRYPTIONPROTOCOLS_NONE          ManagerAccountV1120SnmpEncryptionProtocols = "None"
	MANAGERACCOUNTV1120SNMPENCRYPTIONPROTOCOLS_CBC_DES       ManagerAccountV1120SnmpEncryptionProtocols = "CBC_DES"
	MANAGERACCOUNTV1120SNMPENCRYPTIONPROTOCOLS_CFB128_AES128 ManagerAccountV1120SnmpEncryptionProtocols = "CFB128_AES128"
	MANAGERACCOUNTV1120SNMPENCRYPTIONPROTOCOLS_CFB128_AES192 ManagerAccountV1120SnmpEncryptionProtocols = "CFB128_AES192"
	MANAGERACCOUNTV1120SNMPENCRYPTIONPROTOCOLS_CFB128_AES256 ManagerAccountV1120SnmpEncryptionProtocols = "CFB128_AES256"
)

// AllowedManagerAccountV1120SnmpEncryptionProtocolsEnumValues is all the allowed values of ManagerAccountV1120SnmpEncryptionProtocols enum
var AllowedManagerAccountV1120SnmpEncryptionProtocolsEnumValues = []ManagerAccountV1120SnmpEncryptionProtocols{
	"None",
	"CBC_DES",
	"CFB128_AES128",
	"CFB128_AES192",
	"CFB128_AES256",
}

// validManagerAccountV1120SnmpEncryptionProtocolsEnumValue provides a map of ManagerAccountV1120SnmpEncryptionProtocolss for fast verification of use input
var validManagerAccountV1120SnmpEncryptionProtocolsEnumValues = map[ManagerAccountV1120SnmpEncryptionProtocols]struct{}{
	"None":          {},
	"CBC_DES":       {},
	"CFB128_AES128": {},
	"CFB128_AES192": {},
	"CFB128_AES256": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ManagerAccountV1120SnmpEncryptionProtocols) IsValid() bool {
	_, ok := validManagerAccountV1120SnmpEncryptionProtocolsEnumValues[v]
	return ok
}

// NewManagerAccountV1120SnmpEncryptionProtocolsFromValue returns a pointer to a valid ManagerAccountV1120SnmpEncryptionProtocols
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewManagerAccountV1120SnmpEncryptionProtocolsFromValue(v string) (ManagerAccountV1120SnmpEncryptionProtocols, error) {
	ev := ManagerAccountV1120SnmpEncryptionProtocols(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ManagerAccountV1120SnmpEncryptionProtocols: valid values are %v", v, AllowedManagerAccountV1120SnmpEncryptionProtocolsEnumValues)
}

// AssertManagerAccountV1120SnmpEncryptionProtocolsRequired checks if the required fields are not zero-ed
func AssertManagerAccountV1120SnmpEncryptionProtocolsRequired(obj ManagerAccountV1120SnmpEncryptionProtocols) error {
	return nil
}

// AssertManagerAccountV1120SnmpEncryptionProtocolsConstraints checks if the values respects the defined constraints
func AssertManagerAccountV1120SnmpEncryptionProtocolsConstraints(obj ManagerAccountV1120SnmpEncryptionProtocols) error {
	return nil
}
