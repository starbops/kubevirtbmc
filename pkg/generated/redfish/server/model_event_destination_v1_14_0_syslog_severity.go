// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

// EventDestinationV1140SyslogSeverity : The syslog severity is an application-specific rating used to describe the urgency of the message.
type EventDestinationV1140SyslogSeverity string

// List of EventDestinationV1140SyslogSeverity
const (
	EVENTDESTINATIONV1140SYSLOGSEVERITY_EMERGENCY     EventDestinationV1140SyslogSeverity = "Emergency"
	EVENTDESTINATIONV1140SYSLOGSEVERITY_ALERT         EventDestinationV1140SyslogSeverity = "Alert"
	EVENTDESTINATIONV1140SYSLOGSEVERITY_CRITICAL      EventDestinationV1140SyslogSeverity = "Critical"
	EVENTDESTINATIONV1140SYSLOGSEVERITY_ERROR         EventDestinationV1140SyslogSeverity = "Error"
	EVENTDESTINATIONV1140SYSLOGSEVERITY_WARNING       EventDestinationV1140SyslogSeverity = "Warning"
	EVENTDESTINATIONV1140SYSLOGSEVERITY_NOTICE        EventDestinationV1140SyslogSeverity = "Notice"
	EVENTDESTINATIONV1140SYSLOGSEVERITY_INFORMATIONAL EventDestinationV1140SyslogSeverity = "Informational"
	EVENTDESTINATIONV1140SYSLOGSEVERITY_DEBUG         EventDestinationV1140SyslogSeverity = "Debug"
	EVENTDESTINATIONV1140SYSLOGSEVERITY_ALL           EventDestinationV1140SyslogSeverity = "All"
)

// AllowedEventDestinationV1140SyslogSeverityEnumValues is all the allowed values of EventDestinationV1140SyslogSeverity enum
var AllowedEventDestinationV1140SyslogSeverityEnumValues = []EventDestinationV1140SyslogSeverity{
	"Emergency",
	"Alert",
	"Critical",
	"Error",
	"Warning",
	"Notice",
	"Informational",
	"Debug",
	"All",
}

// validEventDestinationV1140SyslogSeverityEnumValue provides a map of EventDestinationV1140SyslogSeveritys for fast verification of use input
var validEventDestinationV1140SyslogSeverityEnumValues = map[EventDestinationV1140SyslogSeverity]struct{}{
	"Emergency":     {},
	"Alert":         {},
	"Critical":      {},
	"Error":         {},
	"Warning":       {},
	"Notice":        {},
	"Informational": {},
	"Debug":         {},
	"All":           {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EventDestinationV1140SyslogSeverity) IsValid() bool {
	_, ok := validEventDestinationV1140SyslogSeverityEnumValues[v]
	return ok
}

// NewEventDestinationV1140SyslogSeverityFromValue returns a pointer to a valid EventDestinationV1140SyslogSeverity
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEventDestinationV1140SyslogSeverityFromValue(v string) (EventDestinationV1140SyslogSeverity, error) {
	ev := EventDestinationV1140SyslogSeverity(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for EventDestinationV1140SyslogSeverity: valid values are %v", v, AllowedEventDestinationV1140SyslogSeverityEnumValues)
}

// AssertEventDestinationV1140SyslogSeverityRequired checks if the required fields are not zero-ed
func AssertEventDestinationV1140SyslogSeverityRequired(obj EventDestinationV1140SyslogSeverity) error {
	return nil
}

// AssertEventDestinationV1140SyslogSeverityConstraints checks if the values respects the defined constraints
func AssertEventDestinationV1140SyslogSeverityConstraints(obj EventDestinationV1140SyslogSeverity) error {
	return nil
}
