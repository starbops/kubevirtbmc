// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type MetricDefinitionV133CalculationAlgorithmEnum string

// List of MetricDefinitionV133CalculationAlgorithmEnum
const (
	METRICDEFINITIONV133CALCULATIONALGORITHMENUM_AVERAGE MetricDefinitionV133CalculationAlgorithmEnum = "Average"
	METRICDEFINITIONV133CALCULATIONALGORITHMENUM_MAXIMUM MetricDefinitionV133CalculationAlgorithmEnum = "Maximum"
	METRICDEFINITIONV133CALCULATIONALGORITHMENUM_MINIMUM MetricDefinitionV133CalculationAlgorithmEnum = "Minimum"
	METRICDEFINITIONV133CALCULATIONALGORITHMENUM_OEM     MetricDefinitionV133CalculationAlgorithmEnum = "OEM"
)

// AllowedMetricDefinitionV133CalculationAlgorithmEnumEnumValues is all the allowed values of MetricDefinitionV133CalculationAlgorithmEnum enum
var AllowedMetricDefinitionV133CalculationAlgorithmEnumEnumValues = []MetricDefinitionV133CalculationAlgorithmEnum{
	"Average",
	"Maximum",
	"Minimum",
	"OEM",
}

// validMetricDefinitionV133CalculationAlgorithmEnumEnumValue provides a map of MetricDefinitionV133CalculationAlgorithmEnums for fast verification of use input
var validMetricDefinitionV133CalculationAlgorithmEnumEnumValues = map[MetricDefinitionV133CalculationAlgorithmEnum]struct{}{
	"Average": {},
	"Maximum": {},
	"Minimum": {},
	"OEM":     {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MetricDefinitionV133CalculationAlgorithmEnum) IsValid() bool {
	_, ok := validMetricDefinitionV133CalculationAlgorithmEnumEnumValues[v]
	return ok
}

// NewMetricDefinitionV133CalculationAlgorithmEnumFromValue returns a pointer to a valid MetricDefinitionV133CalculationAlgorithmEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMetricDefinitionV133CalculationAlgorithmEnumFromValue(v string) (MetricDefinitionV133CalculationAlgorithmEnum, error) {
	ev := MetricDefinitionV133CalculationAlgorithmEnum(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for MetricDefinitionV133CalculationAlgorithmEnum: valid values are %v", v, AllowedMetricDefinitionV133CalculationAlgorithmEnumEnumValues)
}

// AssertMetricDefinitionV133CalculationAlgorithmEnumRequired checks if the required fields are not zero-ed
func AssertMetricDefinitionV133CalculationAlgorithmEnumRequired(obj MetricDefinitionV133CalculationAlgorithmEnum) error {
	return nil
}

// AssertMetricDefinitionV133CalculationAlgorithmEnumConstraints checks if the values respects the defined constraints
func AssertMetricDefinitionV133CalculationAlgorithmEnumConstraints(obj MetricDefinitionV133CalculationAlgorithmEnum) error {
	return nil
}
