// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

// KeyPolicyV100NvMeoFSecurityProtocolType : The NVMe security protocols that a key is allowed to use.
type KeyPolicyV100NvMeoFSecurityProtocolType string

// List of KeyPolicyV100NvMeoFSecurityProtocolType
const (
	KEYPOLICYV100NVMEOFSECURITYPROTOCOLTYPE_DHHC    KeyPolicyV100NvMeoFSecurityProtocolType = "DHHC"
	KEYPOLICYV100NVMEOFSECURITYPROTOCOLTYPE_TLS_PSK KeyPolicyV100NvMeoFSecurityProtocolType = "TLS_PSK"
	KEYPOLICYV100NVMEOFSECURITYPROTOCOLTYPE_OEM     KeyPolicyV100NvMeoFSecurityProtocolType = "OEM"
)

// AllowedKeyPolicyV100NvMeoFSecurityProtocolTypeEnumValues is all the allowed values of KeyPolicyV100NvMeoFSecurityProtocolType enum
var AllowedKeyPolicyV100NvMeoFSecurityProtocolTypeEnumValues = []KeyPolicyV100NvMeoFSecurityProtocolType{
	"DHHC",
	"TLS_PSK",
	"OEM",
}

// validKeyPolicyV100NvMeoFSecurityProtocolTypeEnumValue provides a map of KeyPolicyV100NvMeoFSecurityProtocolTypes for fast verification of use input
var validKeyPolicyV100NvMeoFSecurityProtocolTypeEnumValues = map[KeyPolicyV100NvMeoFSecurityProtocolType]struct{}{
	"DHHC":    {},
	"TLS_PSK": {},
	"OEM":     {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v KeyPolicyV100NvMeoFSecurityProtocolType) IsValid() bool {
	_, ok := validKeyPolicyV100NvMeoFSecurityProtocolTypeEnumValues[v]
	return ok
}

// NewKeyPolicyV100NvMeoFSecurityProtocolTypeFromValue returns a pointer to a valid KeyPolicyV100NvMeoFSecurityProtocolType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewKeyPolicyV100NvMeoFSecurityProtocolTypeFromValue(v string) (KeyPolicyV100NvMeoFSecurityProtocolType, error) {
	ev := KeyPolicyV100NvMeoFSecurityProtocolType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for KeyPolicyV100NvMeoFSecurityProtocolType: valid values are %v", v, AllowedKeyPolicyV100NvMeoFSecurityProtocolTypeEnumValues)
}

// AssertKeyPolicyV100NvMeoFSecurityProtocolTypeRequired checks if the required fields are not zero-ed
func AssertKeyPolicyV100NvMeoFSecurityProtocolTypeRequired(obj KeyPolicyV100NvMeoFSecurityProtocolType) error {
	return nil
}

// AssertKeyPolicyV100NvMeoFSecurityProtocolTypeConstraints checks if the values respects the defined constraints
func AssertKeyPolicyV100NvMeoFSecurityProtocolTypeConstraints(obj KeyPolicyV100NvMeoFSecurityProtocolType) error {
	return nil
}
