// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type ComponentIntegrityV122MeasurementSpecification string

// List of ComponentIntegrityV122MeasurementSpecification
const (
	COMPONENTINTEGRITYV122MEASUREMENTSPECIFICATION_DMTF ComponentIntegrityV122MeasurementSpecification = "DMTF"
)

// AllowedComponentIntegrityV122MeasurementSpecificationEnumValues is all the allowed values of ComponentIntegrityV122MeasurementSpecification enum
var AllowedComponentIntegrityV122MeasurementSpecificationEnumValues = []ComponentIntegrityV122MeasurementSpecification{
	"DMTF",
}

// validComponentIntegrityV122MeasurementSpecificationEnumValue provides a map of ComponentIntegrityV122MeasurementSpecifications for fast verification of use input
var validComponentIntegrityV122MeasurementSpecificationEnumValues = map[ComponentIntegrityV122MeasurementSpecification]struct{}{
	"DMTF": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ComponentIntegrityV122MeasurementSpecification) IsValid() bool {
	_, ok := validComponentIntegrityV122MeasurementSpecificationEnumValues[v]
	return ok
}

// NewComponentIntegrityV122MeasurementSpecificationFromValue returns a pointer to a valid ComponentIntegrityV122MeasurementSpecification
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewComponentIntegrityV122MeasurementSpecificationFromValue(v string) (ComponentIntegrityV122MeasurementSpecification, error) {
	ev := ComponentIntegrityV122MeasurementSpecification(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ComponentIntegrityV122MeasurementSpecification: valid values are %v", v, AllowedComponentIntegrityV122MeasurementSpecificationEnumValues)
}

// AssertComponentIntegrityV122MeasurementSpecificationRequired checks if the required fields are not zero-ed
func AssertComponentIntegrityV122MeasurementSpecificationRequired(obj ComponentIntegrityV122MeasurementSpecification) error {
	return nil
}

// AssertComponentIntegrityV122MeasurementSpecificationConstraints checks if the values respects the defined constraints
func AssertComponentIntegrityV122MeasurementSpecificationConstraints(obj ComponentIntegrityV122MeasurementSpecification) error {
	return nil
}
