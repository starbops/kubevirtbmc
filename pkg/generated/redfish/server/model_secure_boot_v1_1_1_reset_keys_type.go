// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type SecureBootV111ResetKeysType string

// List of SecureBootV111ResetKeysType
const (
	SECUREBOOTV111RESETKEYSTYPE_RESET_ALL_KEYS_TO_DEFAULT SecureBootV111ResetKeysType = "ResetAllKeysToDefault"
	SECUREBOOTV111RESETKEYSTYPE_DELETE_ALL_KEYS           SecureBootV111ResetKeysType = "DeleteAllKeys"
	SECUREBOOTV111RESETKEYSTYPE_DELETE_PK                 SecureBootV111ResetKeysType = "DeletePK"
)

// AllowedSecureBootV111ResetKeysTypeEnumValues is all the allowed values of SecureBootV111ResetKeysType enum
var AllowedSecureBootV111ResetKeysTypeEnumValues = []SecureBootV111ResetKeysType{
	"ResetAllKeysToDefault",
	"DeleteAllKeys",
	"DeletePK",
}

// validSecureBootV111ResetKeysTypeEnumValue provides a map of SecureBootV111ResetKeysTypes for fast verification of use input
var validSecureBootV111ResetKeysTypeEnumValues = map[SecureBootV111ResetKeysType]struct{}{
	"ResetAllKeysToDefault": {},
	"DeleteAllKeys":         {},
	"DeletePK":              {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SecureBootV111ResetKeysType) IsValid() bool {
	_, ok := validSecureBootV111ResetKeysTypeEnumValues[v]
	return ok
}

// NewSecureBootV111ResetKeysTypeFromValue returns a pointer to a valid SecureBootV111ResetKeysType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSecureBootV111ResetKeysTypeFromValue(v string) (SecureBootV111ResetKeysType, error) {
	ev := SecureBootV111ResetKeysType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for SecureBootV111ResetKeysType: valid values are %v", v, AllowedSecureBootV111ResetKeysTypeEnumValues)
}

// AssertSecureBootV111ResetKeysTypeRequired checks if the required fields are not zero-ed
func AssertSecureBootV111ResetKeysTypeRequired(obj SecureBootV111ResetKeysType) error {
	return nil
}

// AssertSecureBootV111ResetKeysTypeConstraints checks if the values respects the defined constraints
func AssertSecureBootV111ResetKeysTypeConstraints(obj SecureBootV111ResetKeysType) error {
	return nil
}
