// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2024.3
 */

package server

import (
	"fmt"
)

// ComputerSystemV1230HostingRole : The enumerations of `HostingRole` specify different features that the hosting computer system supports.
type ComputerSystemV1230HostingRole string

// List of ComputerSystemV1230HostingRole
const (
	COMPUTERSYSTEMV1230HOSTINGROLE_APPLICATION_SERVER     ComputerSystemV1230HostingRole = "ApplicationServer"
	COMPUTERSYSTEMV1230HOSTINGROLE_STORAGE_SERVER         ComputerSystemV1230HostingRole = "StorageServer"
	COMPUTERSYSTEMV1230HOSTINGROLE_SWITCH                 ComputerSystemV1230HostingRole = "Switch"
	COMPUTERSYSTEMV1230HOSTINGROLE_APPLIANCE              ComputerSystemV1230HostingRole = "Appliance"
	COMPUTERSYSTEMV1230HOSTINGROLE_BARE_METAL_SERVER      ComputerSystemV1230HostingRole = "BareMetalServer"
	COMPUTERSYSTEMV1230HOSTINGROLE_VIRTUAL_MACHINE_SERVER ComputerSystemV1230HostingRole = "VirtualMachineServer"
	COMPUTERSYSTEMV1230HOSTINGROLE_CONTAINER_SERVER       ComputerSystemV1230HostingRole = "ContainerServer"
)

// AllowedComputerSystemV1230HostingRoleEnumValues is all the allowed values of ComputerSystemV1230HostingRole enum
var AllowedComputerSystemV1230HostingRoleEnumValues = []ComputerSystemV1230HostingRole{
	"ApplicationServer",
	"StorageServer",
	"Switch",
	"Appliance",
	"BareMetalServer",
	"VirtualMachineServer",
	"ContainerServer",
}

// validComputerSystemV1230HostingRoleEnumValue provides a map of ComputerSystemV1230HostingRoles for fast verification of use input
var validComputerSystemV1230HostingRoleEnumValues = map[ComputerSystemV1230HostingRole]struct{}{
	"ApplicationServer":    {},
	"StorageServer":        {},
	"Switch":               {},
	"Appliance":            {},
	"BareMetalServer":      {},
	"VirtualMachineServer": {},
	"ContainerServer":      {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ComputerSystemV1230HostingRole) IsValid() bool {
	_, ok := validComputerSystemV1230HostingRoleEnumValues[v]
	return ok
}

// NewComputerSystemV1230HostingRoleFromValue returns a pointer to a valid ComputerSystemV1230HostingRole
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewComputerSystemV1230HostingRoleFromValue(v string) (ComputerSystemV1230HostingRole, error) {
	ev := ComputerSystemV1230HostingRole(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ComputerSystemV1230HostingRole: valid values are %v", v, AllowedComputerSystemV1230HostingRoleEnumValues)
}

// AssertComputerSystemV1230HostingRoleRequired checks if the required fields are not zero-ed
func AssertComputerSystemV1230HostingRoleRequired(obj ComputerSystemV1230HostingRole) error {
	return nil
}

// AssertComputerSystemV1230HostingRoleConstraints checks if the values respects the defined constraints
func AssertComputerSystemV1230HostingRoleConstraints(obj ComputerSystemV1230HostingRole) error {
	return nil
}
