// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type MemoryV1190SecurityStates string

// List of MemoryV1190SecurityStates
const (
	MEMORYV1190SECURITYSTATES_ENABLED         MemoryV1190SecurityStates = "Enabled"
	MEMORYV1190SECURITYSTATES_DISABLED        MemoryV1190SecurityStates = "Disabled"
	MEMORYV1190SECURITYSTATES_UNLOCKED        MemoryV1190SecurityStates = "Unlocked"
	MEMORYV1190SECURITYSTATES_LOCKED          MemoryV1190SecurityStates = "Locked"
	MEMORYV1190SECURITYSTATES_FROZEN          MemoryV1190SecurityStates = "Frozen"
	MEMORYV1190SECURITYSTATES_PASSPHRASELIMIT MemoryV1190SecurityStates = "Passphraselimit"
)

// AllowedMemoryV1190SecurityStatesEnumValues is all the allowed values of MemoryV1190SecurityStates enum
var AllowedMemoryV1190SecurityStatesEnumValues = []MemoryV1190SecurityStates{
	"Enabled",
	"Disabled",
	"Unlocked",
	"Locked",
	"Frozen",
	"Passphraselimit",
}

// validMemoryV1190SecurityStatesEnumValue provides a map of MemoryV1190SecurityStatess for fast verification of use input
var validMemoryV1190SecurityStatesEnumValues = map[MemoryV1190SecurityStates]struct{}{
	"Enabled":         {},
	"Disabled":        {},
	"Unlocked":        {},
	"Locked":          {},
	"Frozen":          {},
	"Passphraselimit": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MemoryV1190SecurityStates) IsValid() bool {
	_, ok := validMemoryV1190SecurityStatesEnumValues[v]
	return ok
}

// NewMemoryV1190SecurityStatesFromValue returns a pointer to a valid MemoryV1190SecurityStates
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMemoryV1190SecurityStatesFromValue(v string) (MemoryV1190SecurityStates, error) {
	ev := MemoryV1190SecurityStates(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for MemoryV1190SecurityStates: valid values are %v", v, AllowedMemoryV1190SecurityStatesEnumValues)
}

// AssertMemoryV1190SecurityStatesRequired checks if the required fields are not zero-ed
func AssertMemoryV1190SecurityStatesRequired(obj MemoryV1190SecurityStates) error {
	return nil
}

// AssertMemoryV1190SecurityStatesConstraints checks if the values respects the defined constraints
func AssertMemoryV1190SecurityStatesConstraints(obj MemoryV1190SecurityStates) error {
	return nil
}
