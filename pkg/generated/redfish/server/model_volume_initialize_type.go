// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type VolumeInitializeType string

// List of VolumeInitializeType
const (
	VOLUMEINITIALIZETYPE_FAST VolumeInitializeType = "Fast"
	VOLUMEINITIALIZETYPE_SLOW VolumeInitializeType = "Slow"
)

// AllowedVolumeInitializeTypeEnumValues is all the allowed values of VolumeInitializeType enum
var AllowedVolumeInitializeTypeEnumValues = []VolumeInitializeType{
	"Fast",
	"Slow",
}

// validVolumeInitializeTypeEnumValue provides a map of VolumeInitializeTypes for fast verification of use input
var validVolumeInitializeTypeEnumValues = map[VolumeInitializeType]struct{}{
	"Fast": {},
	"Slow": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v VolumeInitializeType) IsValid() bool {
	_, ok := validVolumeInitializeTypeEnumValues[v]
	return ok
}

// NewVolumeInitializeTypeFromValue returns a pointer to a valid VolumeInitializeType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewVolumeInitializeTypeFromValue(v string) (VolumeInitializeType, error) {
	ev := VolumeInitializeType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for VolumeInitializeType: valid values are %v", v, AllowedVolumeInitializeTypeEnumValues)
}

// AssertVolumeInitializeTypeRequired checks if the required fields are not zero-ed
func AssertVolumeInitializeTypeRequired(obj VolumeInitializeType) error {
	return nil
}

// AssertVolumeInitializeTypeConstraints checks if the values respects the defined constraints
func AssertVolumeInitializeTypeConstraints(obj VolumeInitializeType) error {
	return nil
}
