// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2024.3
 */

package server

import (
	"errors"
)

// ComputerSystemV1230SerialConsoleProtocol - The information about a serial console service that this system provides.
type ComputerSystemV1230SerialConsoleProtocol struct {

	// The command string passed to the service to select or enter the system's serial console.
	ConsoleEntryCommand *string `json:"ConsoleEntryCommand,omitempty"`

	// The hotkey sequence available for the user to exit the serial console session.
	HotKeySequenceDisplay *string `json:"HotKeySequenceDisplay,omitempty"`

	// The protocol port.
	Port *int64 `json:"Port,omitempty"`

	// An indication of whether the service is enabled for this system.
	ServiceEnabled bool `json:"ServiceEnabled,omitempty"`

	// Indicates whether the serial console service is shared with access to the manager's command-line interface (CLI).
	SharedWithManagerCLI bool `json:"SharedWithManagerCLI,omitempty"`
}

// AssertComputerSystemV1230SerialConsoleProtocolRequired checks if the required fields are not zero-ed
func AssertComputerSystemV1230SerialConsoleProtocolRequired(obj ComputerSystemV1230SerialConsoleProtocol) error {
	return nil
}

// AssertComputerSystemV1230SerialConsoleProtocolConstraints checks if the values respects the defined constraints
func AssertComputerSystemV1230SerialConsoleProtocolConstraints(obj ComputerSystemV1230SerialConsoleProtocol) error {
	if obj.Port != nil && *obj.Port < 0 {
		return &ParsingError{Param: "Port", Err: errors.New(errMsgMinValueConstraint)}
	}
	return nil
}
