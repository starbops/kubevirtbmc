// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2024.3
 */

package server

import (
	"fmt"
)

type ComputerSystemV1230BootSourceOverrideMode string

// List of ComputerSystemV1230BootSourceOverrideMode
const (
	COMPUTERSYSTEMV1230BOOTSOURCEOVERRIDEMODE_LEGACY ComputerSystemV1230BootSourceOverrideMode = "Legacy"
	COMPUTERSYSTEMV1230BOOTSOURCEOVERRIDEMODE_UEFI   ComputerSystemV1230BootSourceOverrideMode = "UEFI"
)

// AllowedComputerSystemV1230BootSourceOverrideModeEnumValues is all the allowed values of ComputerSystemV1230BootSourceOverrideMode enum
var AllowedComputerSystemV1230BootSourceOverrideModeEnumValues = []ComputerSystemV1230BootSourceOverrideMode{
	"Legacy",
	"UEFI",
}

// validComputerSystemV1230BootSourceOverrideModeEnumValue provides a map of ComputerSystemV1230BootSourceOverrideModes for fast verification of use input
var validComputerSystemV1230BootSourceOverrideModeEnumValues = map[ComputerSystemV1230BootSourceOverrideMode]struct{}{
	"Legacy": {},
	"UEFI":   {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ComputerSystemV1230BootSourceOverrideMode) IsValid() bool {
	_, ok := validComputerSystemV1230BootSourceOverrideModeEnumValues[v]
	return ok
}

// NewComputerSystemV1230BootSourceOverrideModeFromValue returns a pointer to a valid ComputerSystemV1230BootSourceOverrideMode
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewComputerSystemV1230BootSourceOverrideModeFromValue(v string) (ComputerSystemV1230BootSourceOverrideMode, error) {
	ev := ComputerSystemV1230BootSourceOverrideMode(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ComputerSystemV1230BootSourceOverrideMode: valid values are %v", v, AllowedComputerSystemV1230BootSourceOverrideModeEnumValues)
}

// AssertComputerSystemV1230BootSourceOverrideModeRequired checks if the required fields are not zero-ed
func AssertComputerSystemV1230BootSourceOverrideModeRequired(obj ComputerSystemV1230BootSourceOverrideMode) error {
	return nil
}

// AssertComputerSystemV1230BootSourceOverrideModeConstraints checks if the values respects the defined constraints
func AssertComputerSystemV1230BootSourceOverrideModeConstraints(obj ComputerSystemV1230BootSourceOverrideMode) error {
	return nil
}
