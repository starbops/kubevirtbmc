// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type ComputerSystemV1220BootSourceOverrideMode string

// List of ComputerSystemV1220BootSourceOverrideMode
const (
	COMPUTERSYSTEMV1220BOOTSOURCEOVERRIDEMODE_LEGACY ComputerSystemV1220BootSourceOverrideMode = "Legacy"
	COMPUTERSYSTEMV1220BOOTSOURCEOVERRIDEMODE_UEFI   ComputerSystemV1220BootSourceOverrideMode = "UEFI"
)

// AllowedComputerSystemV1220BootSourceOverrideModeEnumValues is all the allowed values of ComputerSystemV1220BootSourceOverrideMode enum
var AllowedComputerSystemV1220BootSourceOverrideModeEnumValues = []ComputerSystemV1220BootSourceOverrideMode{
	"Legacy",
	"UEFI",
}

// validComputerSystemV1220BootSourceOverrideModeEnumValue provides a map of ComputerSystemV1220BootSourceOverrideModes for fast verification of use input
var validComputerSystemV1220BootSourceOverrideModeEnumValues = map[ComputerSystemV1220BootSourceOverrideMode]struct{}{
	"Legacy": {},
	"UEFI":   {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ComputerSystemV1220BootSourceOverrideMode) IsValid() bool {
	_, ok := validComputerSystemV1220BootSourceOverrideModeEnumValues[v]
	return ok
}

// NewComputerSystemV1220BootSourceOverrideModeFromValue returns a pointer to a valid ComputerSystemV1220BootSourceOverrideMode
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewComputerSystemV1220BootSourceOverrideModeFromValue(v string) (ComputerSystemV1220BootSourceOverrideMode, error) {
	ev := ComputerSystemV1220BootSourceOverrideMode(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ComputerSystemV1220BootSourceOverrideMode: valid values are %v", v, AllowedComputerSystemV1220BootSourceOverrideModeEnumValues)
}

// AssertComputerSystemV1220BootSourceOverrideModeRequired checks if the required fields are not zero-ed
func AssertComputerSystemV1220BootSourceOverrideModeRequired(obj ComputerSystemV1220BootSourceOverrideMode) error {
	return nil
}

// AssertComputerSystemV1220BootSourceOverrideModeConstraints checks if the values respects the defined constraints
func AssertComputerSystemV1220BootSourceOverrideModeConstraints(obj ComputerSystemV1220BootSourceOverrideMode) error {
	return nil
}
