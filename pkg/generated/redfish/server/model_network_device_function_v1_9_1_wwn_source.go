// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type NetworkDeviceFunctionV191WwnSource string

// List of NetworkDeviceFunctionV191WwnSource
const (
	NETWORKDEVICEFUNCTIONV191WWNSOURCE_CONFIGURED_LOCALLY NetworkDeviceFunctionV191WwnSource = "ConfiguredLocally"
	NETWORKDEVICEFUNCTIONV191WWNSOURCE_PROVIDED_BY_FABRIC NetworkDeviceFunctionV191WwnSource = "ProvidedByFabric"
)

// AllowedNetworkDeviceFunctionV191WwnSourceEnumValues is all the allowed values of NetworkDeviceFunctionV191WwnSource enum
var AllowedNetworkDeviceFunctionV191WwnSourceEnumValues = []NetworkDeviceFunctionV191WwnSource{
	"ConfiguredLocally",
	"ProvidedByFabric",
}

// validNetworkDeviceFunctionV191WwnSourceEnumValue provides a map of NetworkDeviceFunctionV191WwnSources for fast verification of use input
var validNetworkDeviceFunctionV191WwnSourceEnumValues = map[NetworkDeviceFunctionV191WwnSource]struct{}{
	"ConfiguredLocally": {},
	"ProvidedByFabric":  {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v NetworkDeviceFunctionV191WwnSource) IsValid() bool {
	_, ok := validNetworkDeviceFunctionV191WwnSourceEnumValues[v]
	return ok
}

// NewNetworkDeviceFunctionV191WwnSourceFromValue returns a pointer to a valid NetworkDeviceFunctionV191WwnSource
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewNetworkDeviceFunctionV191WwnSourceFromValue(v string) (NetworkDeviceFunctionV191WwnSource, error) {
	ev := NetworkDeviceFunctionV191WwnSource(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for NetworkDeviceFunctionV191WwnSource: valid values are %v", v, AllowedNetworkDeviceFunctionV191WwnSourceEnumValues)
}

// AssertNetworkDeviceFunctionV191WwnSourceRequired checks if the required fields are not zero-ed
func AssertNetworkDeviceFunctionV191WwnSourceRequired(obj NetworkDeviceFunctionV191WwnSource) error {
	return nil
}

// AssertNetworkDeviceFunctionV191WwnSourceConstraints checks if the values respects the defined constraints
func AssertNetworkDeviceFunctionV191WwnSourceConstraints(obj NetworkDeviceFunctionV191WwnSource) error {
	return nil
}
