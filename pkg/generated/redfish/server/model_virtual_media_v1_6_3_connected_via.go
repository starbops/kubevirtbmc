// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type VirtualMediaV163ConnectedVia string

// List of VirtualMediaV163ConnectedVia
const (
	VIRTUALMEDIAV163CONNECTEDVIA_NOT_CONNECTED VirtualMediaV163ConnectedVia = "NotConnected"
	VIRTUALMEDIAV163CONNECTEDVIA_URI           VirtualMediaV163ConnectedVia = "URI"
	VIRTUALMEDIAV163CONNECTEDVIA_APPLET        VirtualMediaV163ConnectedVia = "Applet"
	VIRTUALMEDIAV163CONNECTEDVIA_OEM           VirtualMediaV163ConnectedVia = "Oem"
)

// AllowedVirtualMediaV163ConnectedViaEnumValues is all the allowed values of VirtualMediaV163ConnectedVia enum
var AllowedVirtualMediaV163ConnectedViaEnumValues = []VirtualMediaV163ConnectedVia{
	"NotConnected",
	"URI",
	"Applet",
	"Oem",
}

// validVirtualMediaV163ConnectedViaEnumValue provides a map of VirtualMediaV163ConnectedVias for fast verification of use input
var validVirtualMediaV163ConnectedViaEnumValues = map[VirtualMediaV163ConnectedVia]struct{}{
	"NotConnected": {},
	"URI":          {},
	"Applet":       {},
	"Oem":          {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v VirtualMediaV163ConnectedVia) IsValid() bool {
	_, ok := validVirtualMediaV163ConnectedViaEnumValues[v]
	return ok
}

// NewVirtualMediaV163ConnectedViaFromValue returns a pointer to a valid VirtualMediaV163ConnectedVia
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewVirtualMediaV163ConnectedViaFromValue(v string) (VirtualMediaV163ConnectedVia, error) {
	ev := VirtualMediaV163ConnectedVia(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for VirtualMediaV163ConnectedVia: valid values are %v", v, AllowedVirtualMediaV163ConnectedViaEnumValues)
}

// AssertVirtualMediaV163ConnectedViaRequired checks if the required fields are not zero-ed
func AssertVirtualMediaV163ConnectedViaRequired(obj VirtualMediaV163ConnectedVia) error {
	return nil
}

// AssertVirtualMediaV163ConnectedViaConstraints checks if the values respects the defined constraints
func AssertVirtualMediaV163ConnectedViaConstraints(obj VirtualMediaV163ConnectedVia) error {
	return nil
}
