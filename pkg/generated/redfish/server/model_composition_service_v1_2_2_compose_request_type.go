// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type CompositionServiceV122ComposeRequestType string

// List of CompositionServiceV122ComposeRequestType
const (
	COMPOSITIONSERVICEV122COMPOSEREQUESTTYPE_PREVIEW         CompositionServiceV122ComposeRequestType = "Preview"
	COMPOSITIONSERVICEV122COMPOSEREQUESTTYPE_PREVIEW_RESERVE CompositionServiceV122ComposeRequestType = "PreviewReserve"
	COMPOSITIONSERVICEV122COMPOSEREQUESTTYPE_APPLY           CompositionServiceV122ComposeRequestType = "Apply"
)

// AllowedCompositionServiceV122ComposeRequestTypeEnumValues is all the allowed values of CompositionServiceV122ComposeRequestType enum
var AllowedCompositionServiceV122ComposeRequestTypeEnumValues = []CompositionServiceV122ComposeRequestType{
	"Preview",
	"PreviewReserve",
	"Apply",
}

// validCompositionServiceV122ComposeRequestTypeEnumValue provides a map of CompositionServiceV122ComposeRequestTypes for fast verification of use input
var validCompositionServiceV122ComposeRequestTypeEnumValues = map[CompositionServiceV122ComposeRequestType]struct{}{
	"Preview":        {},
	"PreviewReserve": {},
	"Apply":          {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CompositionServiceV122ComposeRequestType) IsValid() bool {
	_, ok := validCompositionServiceV122ComposeRequestTypeEnumValues[v]
	return ok
}

// NewCompositionServiceV122ComposeRequestTypeFromValue returns a pointer to a valid CompositionServiceV122ComposeRequestType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCompositionServiceV122ComposeRequestTypeFromValue(v string) (CompositionServiceV122ComposeRequestType, error) {
	ev := CompositionServiceV122ComposeRequestType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for CompositionServiceV122ComposeRequestType: valid values are %v", v, AllowedCompositionServiceV122ComposeRequestTypeEnumValues)
}

// AssertCompositionServiceV122ComposeRequestTypeRequired checks if the required fields are not zero-ed
func AssertCompositionServiceV122ComposeRequestTypeRequired(obj CompositionServiceV122ComposeRequestType) error {
	return nil
}

// AssertCompositionServiceV122ComposeRequestTypeConstraints checks if the values respects the defined constraints
func AssertCompositionServiceV122ComposeRequestTypeConstraints(obj CompositionServiceV122ComposeRequestType) error {
	return nil
}
