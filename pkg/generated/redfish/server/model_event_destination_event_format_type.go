// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type EventDestinationEventFormatType string

// List of EventDestinationEventFormatType
const (
	EVENTDESTINATIONEVENTFORMATTYPE_EVENT         EventDestinationEventFormatType = "Event"
	EVENTDESTINATIONEVENTFORMATTYPE_METRIC_REPORT EventDestinationEventFormatType = "MetricReport"
)

// AllowedEventDestinationEventFormatTypeEnumValues is all the allowed values of EventDestinationEventFormatType enum
var AllowedEventDestinationEventFormatTypeEnumValues = []EventDestinationEventFormatType{
	"Event",
	"MetricReport",
}

// validEventDestinationEventFormatTypeEnumValue provides a map of EventDestinationEventFormatTypes for fast verification of use input
var validEventDestinationEventFormatTypeEnumValues = map[EventDestinationEventFormatType]struct{}{
	"Event":        {},
	"MetricReport": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EventDestinationEventFormatType) IsValid() bool {
	_, ok := validEventDestinationEventFormatTypeEnumValues[v]
	return ok
}

// NewEventDestinationEventFormatTypeFromValue returns a pointer to a valid EventDestinationEventFormatType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEventDestinationEventFormatTypeFromValue(v string) (EventDestinationEventFormatType, error) {
	ev := EventDestinationEventFormatType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for EventDestinationEventFormatType: valid values are %v", v, AllowedEventDestinationEventFormatTypeEnumValues)
}

// AssertEventDestinationEventFormatTypeRequired checks if the required fields are not zero-ed
func AssertEventDestinationEventFormatTypeRequired(obj EventDestinationEventFormatType) error {
	return nil
}

// AssertEventDestinationEventFormatTypeConstraints checks if the values respects the defined constraints
func AssertEventDestinationEventFormatTypeConstraints(obj EventDestinationEventFormatType) error {
	return nil
}
