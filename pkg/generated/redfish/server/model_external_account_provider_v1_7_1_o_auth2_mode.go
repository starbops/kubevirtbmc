// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type ExternalAccountProviderV171OAuth2Mode string

// List of ExternalAccountProviderV171OAuth2Mode
const (
	EXTERNALACCOUNTPROVIDERV171OAUTH2MODE_DISCOVERY ExternalAccountProviderV171OAuth2Mode = "Discovery"
	EXTERNALACCOUNTPROVIDERV171OAUTH2MODE_OFFLINE   ExternalAccountProviderV171OAuth2Mode = "Offline"
)

// AllowedExternalAccountProviderV171OAuth2ModeEnumValues is all the allowed values of ExternalAccountProviderV171OAuth2Mode enum
var AllowedExternalAccountProviderV171OAuth2ModeEnumValues = []ExternalAccountProviderV171OAuth2Mode{
	"Discovery",
	"Offline",
}

// validExternalAccountProviderV171OAuth2ModeEnumValue provides a map of ExternalAccountProviderV171OAuth2Modes for fast verification of use input
var validExternalAccountProviderV171OAuth2ModeEnumValues = map[ExternalAccountProviderV171OAuth2Mode]struct{}{
	"Discovery": {},
	"Offline":   {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ExternalAccountProviderV171OAuth2Mode) IsValid() bool {
	_, ok := validExternalAccountProviderV171OAuth2ModeEnumValues[v]
	return ok
}

// NewExternalAccountProviderV171OAuth2ModeFromValue returns a pointer to a valid ExternalAccountProviderV171OAuth2Mode
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewExternalAccountProviderV171OAuth2ModeFromValue(v string) (ExternalAccountProviderV171OAuth2Mode, error) {
	ev := ExternalAccountProviderV171OAuth2Mode(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ExternalAccountProviderV171OAuth2Mode: valid values are %v", v, AllowedExternalAccountProviderV171OAuth2ModeEnumValues)
}

// AssertExternalAccountProviderV171OAuth2ModeRequired checks if the required fields are not zero-ed
func AssertExternalAccountProviderV171OAuth2ModeRequired(obj ExternalAccountProviderV171OAuth2Mode) error {
	return nil
}

// AssertExternalAccountProviderV171OAuth2ModeConstraints checks if the values respects the defined constraints
func AssertExternalAccountProviderV171OAuth2ModeConstraints(obj ExternalAccountProviderV171OAuth2Mode) error {
	return nil
}
