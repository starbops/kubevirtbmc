// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

// TriggersV132DiscreteTriggerConditionEnum : The condition, in relationship to the discrete trigger values, which constitutes a trigger.
type TriggersV132DiscreteTriggerConditionEnum string

// List of TriggersV132DiscreteTriggerConditionEnum
const (
	TRIGGERSV132DISCRETETRIGGERCONDITIONENUM_SPECIFIED TriggersV132DiscreteTriggerConditionEnum = "Specified"
	TRIGGERSV132DISCRETETRIGGERCONDITIONENUM_CHANGED   TriggersV132DiscreteTriggerConditionEnum = "Changed"
)

// AllowedTriggersV132DiscreteTriggerConditionEnumEnumValues is all the allowed values of TriggersV132DiscreteTriggerConditionEnum enum
var AllowedTriggersV132DiscreteTriggerConditionEnumEnumValues = []TriggersV132DiscreteTriggerConditionEnum{
	"Specified",
	"Changed",
}

// validTriggersV132DiscreteTriggerConditionEnumEnumValue provides a map of TriggersV132DiscreteTriggerConditionEnums for fast verification of use input
var validTriggersV132DiscreteTriggerConditionEnumEnumValues = map[TriggersV132DiscreteTriggerConditionEnum]struct{}{
	"Specified": {},
	"Changed":   {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v TriggersV132DiscreteTriggerConditionEnum) IsValid() bool {
	_, ok := validTriggersV132DiscreteTriggerConditionEnumEnumValues[v]
	return ok
}

// NewTriggersV132DiscreteTriggerConditionEnumFromValue returns a pointer to a valid TriggersV132DiscreteTriggerConditionEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewTriggersV132DiscreteTriggerConditionEnumFromValue(v string) (TriggersV132DiscreteTriggerConditionEnum, error) {
	ev := TriggersV132DiscreteTriggerConditionEnum(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for TriggersV132DiscreteTriggerConditionEnum: valid values are %v", v, AllowedTriggersV132DiscreteTriggerConditionEnumEnumValues)
}

// AssertTriggersV132DiscreteTriggerConditionEnumRequired checks if the required fields are not zero-ed
func AssertTriggersV132DiscreteTriggerConditionEnumRequired(obj TriggersV132DiscreteTriggerConditionEnum) error {
	return nil
}

// AssertTriggersV132DiscreteTriggerConditionEnumConstraints checks if the values respects the defined constraints
func AssertTriggersV132DiscreteTriggerConditionEnumConstraints(obj TriggersV132DiscreteTriggerConditionEnum) error {
	return nil
}
