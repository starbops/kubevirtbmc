// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type StorageV1151EncryptionMode string

// List of StorageV1151EncryptionMode
const (
	STORAGEV1151ENCRYPTIONMODE_DISABLED         StorageV1151EncryptionMode = "Disabled"
	STORAGEV1151ENCRYPTIONMODE_USE_EXTERNAL_KEY StorageV1151EncryptionMode = "UseExternalKey"
	STORAGEV1151ENCRYPTIONMODE_USE_LOCAL_KEY    StorageV1151EncryptionMode = "UseLocalKey"
)

// AllowedStorageV1151EncryptionModeEnumValues is all the allowed values of StorageV1151EncryptionMode enum
var AllowedStorageV1151EncryptionModeEnumValues = []StorageV1151EncryptionMode{
	"Disabled",
	"UseExternalKey",
	"UseLocalKey",
}

// validStorageV1151EncryptionModeEnumValue provides a map of StorageV1151EncryptionModes for fast verification of use input
var validStorageV1151EncryptionModeEnumValues = map[StorageV1151EncryptionMode]struct{}{
	"Disabled":       {},
	"UseExternalKey": {},
	"UseLocalKey":    {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v StorageV1151EncryptionMode) IsValid() bool {
	_, ok := validStorageV1151EncryptionModeEnumValues[v]
	return ok
}

// NewStorageV1151EncryptionModeFromValue returns a pointer to a valid StorageV1151EncryptionMode
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewStorageV1151EncryptionModeFromValue(v string) (StorageV1151EncryptionMode, error) {
	ev := StorageV1151EncryptionMode(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for StorageV1151EncryptionMode: valid values are %v", v, AllowedStorageV1151EncryptionModeEnumValues)
}

// AssertStorageV1151EncryptionModeRequired checks if the required fields are not zero-ed
func AssertStorageV1151EncryptionModeRequired(obj StorageV1151EncryptionMode) error {
	return nil
}

// AssertStorageV1151EncryptionModeConstraints checks if the values respects the defined constraints
func AssertStorageV1151EncryptionModeConstraints(obj StorageV1151EncryptionMode) error {
	return nil
}
