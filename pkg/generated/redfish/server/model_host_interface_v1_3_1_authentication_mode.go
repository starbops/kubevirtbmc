// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type HostInterfaceV131AuthenticationMode string

// List of HostInterfaceV131AuthenticationMode
const (
	HOSTINTERFACEV131AUTHENTICATIONMODE_AUTH_NONE            HostInterfaceV131AuthenticationMode = "AuthNone"
	HOSTINTERFACEV131AUTHENTICATIONMODE_BASIC_AUTH           HostInterfaceV131AuthenticationMode = "BasicAuth"
	HOSTINTERFACEV131AUTHENTICATIONMODE_REDFISH_SESSION_AUTH HostInterfaceV131AuthenticationMode = "RedfishSessionAuth"
	HOSTINTERFACEV131AUTHENTICATIONMODE_OEM_AUTH             HostInterfaceV131AuthenticationMode = "OemAuth"
)

// AllowedHostInterfaceV131AuthenticationModeEnumValues is all the allowed values of HostInterfaceV131AuthenticationMode enum
var AllowedHostInterfaceV131AuthenticationModeEnumValues = []HostInterfaceV131AuthenticationMode{
	"AuthNone",
	"BasicAuth",
	"RedfishSessionAuth",
	"OemAuth",
}

// validHostInterfaceV131AuthenticationModeEnumValue provides a map of HostInterfaceV131AuthenticationModes for fast verification of use input
var validHostInterfaceV131AuthenticationModeEnumValues = map[HostInterfaceV131AuthenticationMode]struct{}{
	"AuthNone":           {},
	"BasicAuth":          {},
	"RedfishSessionAuth": {},
	"OemAuth":            {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v HostInterfaceV131AuthenticationMode) IsValid() bool {
	_, ok := validHostInterfaceV131AuthenticationModeEnumValues[v]
	return ok
}

// NewHostInterfaceV131AuthenticationModeFromValue returns a pointer to a valid HostInterfaceV131AuthenticationMode
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewHostInterfaceV131AuthenticationModeFromValue(v string) (HostInterfaceV131AuthenticationMode, error) {
	ev := HostInterfaceV131AuthenticationMode(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for HostInterfaceV131AuthenticationMode: valid values are %v", v, AllowedHostInterfaceV131AuthenticationModeEnumValues)
}

// AssertHostInterfaceV131AuthenticationModeRequired checks if the required fields are not zero-ed
func AssertHostInterfaceV131AuthenticationModeRequired(obj HostInterfaceV131AuthenticationMode) error {
	return nil
}

// AssertHostInterfaceV131AuthenticationModeConstraints checks if the values respects the defined constraints
func AssertHostInterfaceV131AuthenticationModeConstraints(obj HostInterfaceV131AuthenticationMode) error {
	return nil
}
