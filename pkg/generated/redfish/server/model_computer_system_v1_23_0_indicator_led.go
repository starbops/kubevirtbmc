// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2024.3
 */

package server

import (
	"fmt"
)

type ComputerSystemV1230IndicatorLed string

// List of ComputerSystemV1230IndicatorLed
const (
	COMPUTERSYSTEMV1230INDICATORLED_UNKNOWN  ComputerSystemV1230IndicatorLed = "Unknown"
	COMPUTERSYSTEMV1230INDICATORLED_LIT      ComputerSystemV1230IndicatorLed = "Lit"
	COMPUTERSYSTEMV1230INDICATORLED_BLINKING ComputerSystemV1230IndicatorLed = "Blinking"
	COMPUTERSYSTEMV1230INDICATORLED_OFF      ComputerSystemV1230IndicatorLed = "Off"
)

// AllowedComputerSystemV1230IndicatorLedEnumValues is all the allowed values of ComputerSystemV1230IndicatorLed enum
var AllowedComputerSystemV1230IndicatorLedEnumValues = []ComputerSystemV1230IndicatorLed{
	"Unknown",
	"Lit",
	"Blinking",
	"Off",
}

// validComputerSystemV1230IndicatorLedEnumValue provides a map of ComputerSystemV1230IndicatorLeds for fast verification of use input
var validComputerSystemV1230IndicatorLedEnumValues = map[ComputerSystemV1230IndicatorLed]struct{}{
	"Unknown":  {},
	"Lit":      {},
	"Blinking": {},
	"Off":      {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ComputerSystemV1230IndicatorLed) IsValid() bool {
	_, ok := validComputerSystemV1230IndicatorLedEnumValues[v]
	return ok
}

// NewComputerSystemV1230IndicatorLedFromValue returns a pointer to a valid ComputerSystemV1230IndicatorLed
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewComputerSystemV1230IndicatorLedFromValue(v string) (ComputerSystemV1230IndicatorLed, error) {
	ev := ComputerSystemV1230IndicatorLed(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ComputerSystemV1230IndicatorLed: valid values are %v", v, AllowedComputerSystemV1230IndicatorLedEnumValues)
}

// AssertComputerSystemV1230IndicatorLedRequired checks if the required fields are not zero-ed
func AssertComputerSystemV1230IndicatorLedRequired(obj ComputerSystemV1230IndicatorLed) error {
	return nil
}

// AssertComputerSystemV1230IndicatorLedConstraints checks if the values respects the defined constraints
func AssertComputerSystemV1230IndicatorLedConstraints(obj ComputerSystemV1230IndicatorLed) error {
	return nil
}
