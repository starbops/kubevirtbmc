// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type IpAddressesV115AddressState string

// List of IpAddressesV115AddressState
const (
	IPADDRESSESV115ADDRESSSTATE_PREFERRED  IpAddressesV115AddressState = "Preferred"
	IPADDRESSESV115ADDRESSSTATE_DEPRECATED IpAddressesV115AddressState = "Deprecated"
	IPADDRESSESV115ADDRESSSTATE_TENTATIVE  IpAddressesV115AddressState = "Tentative"
	IPADDRESSESV115ADDRESSSTATE_FAILED     IpAddressesV115AddressState = "Failed"
)

// AllowedIpAddressesV115AddressStateEnumValues is all the allowed values of IpAddressesV115AddressState enum
var AllowedIpAddressesV115AddressStateEnumValues = []IpAddressesV115AddressState{
	"Preferred",
	"Deprecated",
	"Tentative",
	"Failed",
}

// validIpAddressesV115AddressStateEnumValue provides a map of IpAddressesV115AddressStates for fast verification of use input
var validIpAddressesV115AddressStateEnumValues = map[IpAddressesV115AddressState]struct{}{
	"Preferred":  {},
	"Deprecated": {},
	"Tentative":  {},
	"Failed":     {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v IpAddressesV115AddressState) IsValid() bool {
	_, ok := validIpAddressesV115AddressStateEnumValues[v]
	return ok
}

// NewIpAddressesV115AddressStateFromValue returns a pointer to a valid IpAddressesV115AddressState
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewIpAddressesV115AddressStateFromValue(v string) (IpAddressesV115AddressState, error) {
	ev := IpAddressesV115AddressState(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for IpAddressesV115AddressState: valid values are %v", v, AllowedIpAddressesV115AddressStateEnumValues)
}

// AssertIpAddressesV115AddressStateRequired checks if the required fields are not zero-ed
func AssertIpAddressesV115AddressStateRequired(obj IpAddressesV115AddressState) error {
	return nil
}

// AssertIpAddressesV115AddressStateConstraints checks if the values respects the defined constraints
func AssertIpAddressesV115AddressStateConstraints(obj IpAddressesV115AddressState) error {
	return nil
}
