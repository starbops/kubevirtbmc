// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type AccountServiceV1150OAuth2Mode string

// List of AccountServiceV1150OAuth2Mode
const (
	ACCOUNTSERVICEV1150OAUTH2MODE_DISCOVERY AccountServiceV1150OAuth2Mode = "Discovery"
	ACCOUNTSERVICEV1150OAUTH2MODE_OFFLINE   AccountServiceV1150OAuth2Mode = "Offline"
)

// AllowedAccountServiceV1150OAuth2ModeEnumValues is all the allowed values of AccountServiceV1150OAuth2Mode enum
var AllowedAccountServiceV1150OAuth2ModeEnumValues = []AccountServiceV1150OAuth2Mode{
	"Discovery",
	"Offline",
}

// validAccountServiceV1150OAuth2ModeEnumValue provides a map of AccountServiceV1150OAuth2Modes for fast verification of use input
var validAccountServiceV1150OAuth2ModeEnumValues = map[AccountServiceV1150OAuth2Mode]struct{}{
	"Discovery": {},
	"Offline":   {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AccountServiceV1150OAuth2Mode) IsValid() bool {
	_, ok := validAccountServiceV1150OAuth2ModeEnumValues[v]
	return ok
}

// NewAccountServiceV1150OAuth2ModeFromValue returns a pointer to a valid AccountServiceV1150OAuth2Mode
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAccountServiceV1150OAuth2ModeFromValue(v string) (AccountServiceV1150OAuth2Mode, error) {
	ev := AccountServiceV1150OAuth2Mode(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for AccountServiceV1150OAuth2Mode: valid values are %v", v, AllowedAccountServiceV1150OAuth2ModeEnumValues)
}

// AssertAccountServiceV1150OAuth2ModeRequired checks if the required fields are not zero-ed
func AssertAccountServiceV1150OAuth2ModeRequired(obj AccountServiceV1150OAuth2Mode) error {
	return nil
}

// AssertAccountServiceV1150OAuth2ModeConstraints checks if the values respects the defined constraints
func AssertAccountServiceV1150OAuth2ModeConstraints(obj AccountServiceV1150OAuth2Mode) error {
	return nil
}
