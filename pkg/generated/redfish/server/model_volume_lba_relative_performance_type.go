// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

// VolumeLbaRelativePerformanceType : Indicate the relative performance of the LBA format relative to other LBA formats supported by the controller.
type VolumeLbaRelativePerformanceType string

// List of VolumeLbaRelativePerformanceType
const (
	VOLUMELBARELATIVEPERFORMANCETYPE_BEST     VolumeLbaRelativePerformanceType = "Best"
	VOLUMELBARELATIVEPERFORMANCETYPE_BETTER   VolumeLbaRelativePerformanceType = "Better"
	VOLUMELBARELATIVEPERFORMANCETYPE_GOOD     VolumeLbaRelativePerformanceType = "Good"
	VOLUMELBARELATIVEPERFORMANCETYPE_DEGRADED VolumeLbaRelativePerformanceType = "Degraded"
)

// AllowedVolumeLbaRelativePerformanceTypeEnumValues is all the allowed values of VolumeLbaRelativePerformanceType enum
var AllowedVolumeLbaRelativePerformanceTypeEnumValues = []VolumeLbaRelativePerformanceType{
	"Best",
	"Better",
	"Good",
	"Degraded",
}

// validVolumeLbaRelativePerformanceTypeEnumValue provides a map of VolumeLbaRelativePerformanceTypes for fast verification of use input
var validVolumeLbaRelativePerformanceTypeEnumValues = map[VolumeLbaRelativePerformanceType]struct{}{
	"Best":     {},
	"Better":   {},
	"Good":     {},
	"Degraded": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v VolumeLbaRelativePerformanceType) IsValid() bool {
	_, ok := validVolumeLbaRelativePerformanceTypeEnumValues[v]
	return ok
}

// NewVolumeLbaRelativePerformanceTypeFromValue returns a pointer to a valid VolumeLbaRelativePerformanceType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewVolumeLbaRelativePerformanceTypeFromValue(v string) (VolumeLbaRelativePerformanceType, error) {
	ev := VolumeLbaRelativePerformanceType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for VolumeLbaRelativePerformanceType: valid values are %v", v, AllowedVolumeLbaRelativePerformanceTypeEnumValues)
}

// AssertVolumeLbaRelativePerformanceTypeRequired checks if the required fields are not zero-ed
func AssertVolumeLbaRelativePerformanceTypeRequired(obj VolumeLbaRelativePerformanceType) error {
	return nil
}

// AssertVolumeLbaRelativePerformanceTypeConstraints checks if the values respects the defined constraints
func AssertVolumeLbaRelativePerformanceTypeConstraints(obj VolumeLbaRelativePerformanceType) error {
	return nil
}
