// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type PortV1110FlowControl string

// List of PortV1110FlowControl
const (
	PORTV1110FLOWCONTROL_NONE  PortV1110FlowControl = "None"
	PORTV1110FLOWCONTROL_TX    PortV1110FlowControl = "TX"
	PORTV1110FLOWCONTROL_RX    PortV1110FlowControl = "RX"
	PORTV1110FLOWCONTROL_TX_RX PortV1110FlowControl = "TX_RX"
)

// AllowedPortV1110FlowControlEnumValues is all the allowed values of PortV1110FlowControl enum
var AllowedPortV1110FlowControlEnumValues = []PortV1110FlowControl{
	"None",
	"TX",
	"RX",
	"TX_RX",
}

// validPortV1110FlowControlEnumValue provides a map of PortV1110FlowControls for fast verification of use input
var validPortV1110FlowControlEnumValues = map[PortV1110FlowControl]struct{}{
	"None":  {},
	"TX":    {},
	"RX":    {},
	"TX_RX": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PortV1110FlowControl) IsValid() bool {
	_, ok := validPortV1110FlowControlEnumValues[v]
	return ok
}

// NewPortV1110FlowControlFromValue returns a pointer to a valid PortV1110FlowControl
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPortV1110FlowControlFromValue(v string) (PortV1110FlowControl, error) {
	ev := PortV1110FlowControl(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for PortV1110FlowControl: valid values are %v", v, AllowedPortV1110FlowControlEnumValues)
}

// AssertPortV1110FlowControlRequired checks if the required fields are not zero-ed
func AssertPortV1110FlowControlRequired(obj PortV1110FlowControl) error {
	return nil
}

// AssertPortV1110FlowControlConstraints checks if the values respects the defined constraints
func AssertPortV1110FlowControlConstraints(obj PortV1110FlowControl) error {
	return nil
}
