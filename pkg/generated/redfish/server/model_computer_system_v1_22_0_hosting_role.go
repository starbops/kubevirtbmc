// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

// ComputerSystemV1220HostingRole : The enumerations of HostingRoles specify different features that the hosting ComputerSystem supports.
type ComputerSystemV1220HostingRole string

// List of ComputerSystemV1220HostingRole
const (
	COMPUTERSYSTEMV1220HOSTINGROLE_APPLICATION_SERVER     ComputerSystemV1220HostingRole = "ApplicationServer"
	COMPUTERSYSTEMV1220HOSTINGROLE_STORAGE_SERVER         ComputerSystemV1220HostingRole = "StorageServer"
	COMPUTERSYSTEMV1220HOSTINGROLE_SWITCH                 ComputerSystemV1220HostingRole = "Switch"
	COMPUTERSYSTEMV1220HOSTINGROLE_APPLIANCE              ComputerSystemV1220HostingRole = "Appliance"
	COMPUTERSYSTEMV1220HOSTINGROLE_BARE_METAL_SERVER      ComputerSystemV1220HostingRole = "BareMetalServer"
	COMPUTERSYSTEMV1220HOSTINGROLE_VIRTUAL_MACHINE_SERVER ComputerSystemV1220HostingRole = "VirtualMachineServer"
	COMPUTERSYSTEMV1220HOSTINGROLE_CONTAINER_SERVER       ComputerSystemV1220HostingRole = "ContainerServer"
)

// AllowedComputerSystemV1220HostingRoleEnumValues is all the allowed values of ComputerSystemV1220HostingRole enum
var AllowedComputerSystemV1220HostingRoleEnumValues = []ComputerSystemV1220HostingRole{
	"ApplicationServer",
	"StorageServer",
	"Switch",
	"Appliance",
	"BareMetalServer",
	"VirtualMachineServer",
	"ContainerServer",
}

// validComputerSystemV1220HostingRoleEnumValue provides a map of ComputerSystemV1220HostingRoles for fast verification of use input
var validComputerSystemV1220HostingRoleEnumValues = map[ComputerSystemV1220HostingRole]struct{}{
	"ApplicationServer":    {},
	"StorageServer":        {},
	"Switch":               {},
	"Appliance":            {},
	"BareMetalServer":      {},
	"VirtualMachineServer": {},
	"ContainerServer":      {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ComputerSystemV1220HostingRole) IsValid() bool {
	_, ok := validComputerSystemV1220HostingRoleEnumValues[v]
	return ok
}

// NewComputerSystemV1220HostingRoleFromValue returns a pointer to a valid ComputerSystemV1220HostingRole
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewComputerSystemV1220HostingRoleFromValue(v string) (ComputerSystemV1220HostingRole, error) {
	ev := ComputerSystemV1220HostingRole(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ComputerSystemV1220HostingRole: valid values are %v", v, AllowedComputerSystemV1220HostingRoleEnumValues)
}

// AssertComputerSystemV1220HostingRoleRequired checks if the required fields are not zero-ed
func AssertComputerSystemV1220HostingRoleRequired(obj ComputerSystemV1220HostingRole) error {
	return nil
}

// AssertComputerSystemV1220HostingRoleConstraints checks if the values respects the defined constraints
func AssertComputerSystemV1220HostingRoleConstraints(obj ComputerSystemV1220HostingRole) error {
	return nil
}
