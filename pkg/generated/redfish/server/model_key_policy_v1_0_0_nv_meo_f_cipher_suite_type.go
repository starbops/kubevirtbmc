// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

// KeyPolicyV100NvMeoFCipherSuiteType : The NVMe cipher suites that a key is allowed to use.
type KeyPolicyV100NvMeoFCipherSuiteType string

// List of KeyPolicyV100NvMeoFCipherSuiteType
const (
	KEYPOLICYV100NVMEOFCIPHERSUITETYPE__128_GCM_SHA256 KeyPolicyV100NvMeoFCipherSuiteType = "TLS_AES_128_GCM_SHA256"
	KEYPOLICYV100NVMEOFCIPHERSUITETYPE__256_GCM_SHA384 KeyPolicyV100NvMeoFCipherSuiteType = "TLS_AES_256_GCM_SHA384"
)

// AllowedKeyPolicyV100NvMeoFCipherSuiteTypeEnumValues is all the allowed values of KeyPolicyV100NvMeoFCipherSuiteType enum
var AllowedKeyPolicyV100NvMeoFCipherSuiteTypeEnumValues = []KeyPolicyV100NvMeoFCipherSuiteType{
	"TLS_AES_128_GCM_SHA256",
	"TLS_AES_256_GCM_SHA384",
}

// validKeyPolicyV100NvMeoFCipherSuiteTypeEnumValue provides a map of KeyPolicyV100NvMeoFCipherSuiteTypes for fast verification of use input
var validKeyPolicyV100NvMeoFCipherSuiteTypeEnumValues = map[KeyPolicyV100NvMeoFCipherSuiteType]struct{}{
	"TLS_AES_128_GCM_SHA256": {},
	"TLS_AES_256_GCM_SHA384": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v KeyPolicyV100NvMeoFCipherSuiteType) IsValid() bool {
	_, ok := validKeyPolicyV100NvMeoFCipherSuiteTypeEnumValues[v]
	return ok
}

// NewKeyPolicyV100NvMeoFCipherSuiteTypeFromValue returns a pointer to a valid KeyPolicyV100NvMeoFCipherSuiteType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewKeyPolicyV100NvMeoFCipherSuiteTypeFromValue(v string) (KeyPolicyV100NvMeoFCipherSuiteType, error) {
	ev := KeyPolicyV100NvMeoFCipherSuiteType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for KeyPolicyV100NvMeoFCipherSuiteType: valid values are %v", v, AllowedKeyPolicyV100NvMeoFCipherSuiteTypeEnumValues)
}

// AssertKeyPolicyV100NvMeoFCipherSuiteTypeRequired checks if the required fields are not zero-ed
func AssertKeyPolicyV100NvMeoFCipherSuiteTypeRequired(obj KeyPolicyV100NvMeoFCipherSuiteType) error {
	return nil
}

// AssertKeyPolicyV100NvMeoFCipherSuiteTypeConstraints checks if the values respects the defined constraints
func AssertKeyPolicyV100NvMeoFCipherSuiteTypeConstraints(obj KeyPolicyV100NvMeoFCipherSuiteType) error {
	return nil
}
