// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2024.3
 */

package server

import (
	"fmt"
)

type OperatingSystemV102VirtualMachineImageTypes string

// List of OperatingSystemV102VirtualMachineImageTypes
const (
	OPERATINGSYSTEMV102VIRTUALMACHINEIMAGETYPES_RAW   OperatingSystemV102VirtualMachineImageTypes = "Raw"
	OPERATINGSYSTEMV102VIRTUALMACHINEIMAGETYPES_OVF   OperatingSystemV102VirtualMachineImageTypes = "OVF"
	OPERATINGSYSTEMV102VIRTUALMACHINEIMAGETYPES_OVA   OperatingSystemV102VirtualMachineImageTypes = "OVA"
	OPERATINGSYSTEMV102VIRTUALMACHINEIMAGETYPES_VHD   OperatingSystemV102VirtualMachineImageTypes = "VHD"
	OPERATINGSYSTEMV102VIRTUALMACHINEIMAGETYPES_VMDK  OperatingSystemV102VirtualMachineImageTypes = "VMDK"
	OPERATINGSYSTEMV102VIRTUALMACHINEIMAGETYPES_VDI   OperatingSystemV102VirtualMachineImageTypes = "VDI"
	OPERATINGSYSTEMV102VIRTUALMACHINEIMAGETYPES_QCOW  OperatingSystemV102VirtualMachineImageTypes = "QCOW"
	OPERATINGSYSTEMV102VIRTUALMACHINEIMAGETYPES_QCOW2 OperatingSystemV102VirtualMachineImageTypes = "QCOW2"
)

// AllowedOperatingSystemV102VirtualMachineImageTypesEnumValues is all the allowed values of OperatingSystemV102VirtualMachineImageTypes enum
var AllowedOperatingSystemV102VirtualMachineImageTypesEnumValues = []OperatingSystemV102VirtualMachineImageTypes{
	"Raw",
	"OVF",
	"OVA",
	"VHD",
	"VMDK",
	"VDI",
	"QCOW",
	"QCOW2",
}

// validOperatingSystemV102VirtualMachineImageTypesEnumValue provides a map of OperatingSystemV102VirtualMachineImageTypess for fast verification of use input
var validOperatingSystemV102VirtualMachineImageTypesEnumValues = map[OperatingSystemV102VirtualMachineImageTypes]struct{}{
	"Raw":   {},
	"OVF":   {},
	"OVA":   {},
	"VHD":   {},
	"VMDK":  {},
	"VDI":   {},
	"QCOW":  {},
	"QCOW2": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OperatingSystemV102VirtualMachineImageTypes) IsValid() bool {
	_, ok := validOperatingSystemV102VirtualMachineImageTypesEnumValues[v]
	return ok
}

// NewOperatingSystemV102VirtualMachineImageTypesFromValue returns a pointer to a valid OperatingSystemV102VirtualMachineImageTypes
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOperatingSystemV102VirtualMachineImageTypesFromValue(v string) (OperatingSystemV102VirtualMachineImageTypes, error) {
	ev := OperatingSystemV102VirtualMachineImageTypes(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for OperatingSystemV102VirtualMachineImageTypes: valid values are %v", v, AllowedOperatingSystemV102VirtualMachineImageTypesEnumValues)
}

// AssertOperatingSystemV102VirtualMachineImageTypesRequired checks if the required fields are not zero-ed
func AssertOperatingSystemV102VirtualMachineImageTypesRequired(obj OperatingSystemV102VirtualMachineImageTypes) error {
	return nil
}

// AssertOperatingSystemV102VirtualMachineImageTypesConstraints checks if the values respects the defined constraints
func AssertOperatingSystemV102VirtualMachineImageTypesConstraints(obj OperatingSystemV102VirtualMachineImageTypes) error {
	return nil
}
