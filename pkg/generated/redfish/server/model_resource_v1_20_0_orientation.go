// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2024.3
 */

package server

import (
	"fmt"
)

// ResourceV1200Orientation : The orientations for the ordering of the part location ordinal value.
type ResourceV1200Orientation string

// List of ResourceV1200Orientation
const (
	RESOURCEV1200ORIENTATION_FRONT_TO_BACK ResourceV1200Orientation = "FrontToBack"
	RESOURCEV1200ORIENTATION_BACK_TO_FRONT ResourceV1200Orientation = "BackToFront"
	RESOURCEV1200ORIENTATION_TOP_TO_BOTTOM ResourceV1200Orientation = "TopToBottom"
	RESOURCEV1200ORIENTATION_BOTTOM_TO_TOP ResourceV1200Orientation = "BottomToTop"
	RESOURCEV1200ORIENTATION_LEFT_TO_RIGHT ResourceV1200Orientation = "LeftToRight"
	RESOURCEV1200ORIENTATION_RIGHT_TO_LEFT ResourceV1200Orientation = "RightToLeft"
)

// AllowedResourceV1200OrientationEnumValues is all the allowed values of ResourceV1200Orientation enum
var AllowedResourceV1200OrientationEnumValues = []ResourceV1200Orientation{
	"FrontToBack",
	"BackToFront",
	"TopToBottom",
	"BottomToTop",
	"LeftToRight",
	"RightToLeft",
}

// validResourceV1200OrientationEnumValue provides a map of ResourceV1200Orientations for fast verification of use input
var validResourceV1200OrientationEnumValues = map[ResourceV1200Orientation]struct{}{
	"FrontToBack": {},
	"BackToFront": {},
	"TopToBottom": {},
	"BottomToTop": {},
	"LeftToRight": {},
	"RightToLeft": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ResourceV1200Orientation) IsValid() bool {
	_, ok := validResourceV1200OrientationEnumValues[v]
	return ok
}

// NewResourceV1200OrientationFromValue returns a pointer to a valid ResourceV1200Orientation
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewResourceV1200OrientationFromValue(v string) (ResourceV1200Orientation, error) {
	ev := ResourceV1200Orientation(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ResourceV1200Orientation: valid values are %v", v, AllowedResourceV1200OrientationEnumValues)
}

// AssertResourceV1200OrientationRequired checks if the required fields are not zero-ed
func AssertResourceV1200OrientationRequired(obj ResourceV1200Orientation) error {
	return nil
}

// AssertResourceV1200OrientationConstraints checks if the values respects the defined constraints
func AssertResourceV1200OrientationConstraints(obj ResourceV1200Orientation) error {
	return nil
}
