// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type PortV1110CurrentPortConfigurationState string

// List of PortV1110CurrentPortConfigurationState
const (
	PORTV1110CURRENTPORTCONFIGURATIONSTATE_DISABLED           PortV1110CurrentPortConfigurationState = "Disabled"
	PORTV1110CURRENTPORTCONFIGURATIONSTATE_BIND_IN_PROGRESS   PortV1110CurrentPortConfigurationState = "BindInProgress"
	PORTV1110CURRENTPORTCONFIGURATIONSTATE_UNBIND_IN_PROGRESS PortV1110CurrentPortConfigurationState = "UnbindInProgress"
	PORTV1110CURRENTPORTCONFIGURATIONSTATE_DSP                PortV1110CurrentPortConfigurationState = "DSP"
	PORTV1110CURRENTPORTCONFIGURATIONSTATE_USP                PortV1110CurrentPortConfigurationState = "USP"
	PORTV1110CURRENTPORTCONFIGURATIONSTATE_RESERVED           PortV1110CurrentPortConfigurationState = "Reserved"
	PORTV1110CURRENTPORTCONFIGURATIONSTATE_FABRIC_LINK        PortV1110CurrentPortConfigurationState = "FabricLink"
)

// AllowedPortV1110CurrentPortConfigurationStateEnumValues is all the allowed values of PortV1110CurrentPortConfigurationState enum
var AllowedPortV1110CurrentPortConfigurationStateEnumValues = []PortV1110CurrentPortConfigurationState{
	"Disabled",
	"BindInProgress",
	"UnbindInProgress",
	"DSP",
	"USP",
	"Reserved",
	"FabricLink",
}

// validPortV1110CurrentPortConfigurationStateEnumValue provides a map of PortV1110CurrentPortConfigurationStates for fast verification of use input
var validPortV1110CurrentPortConfigurationStateEnumValues = map[PortV1110CurrentPortConfigurationState]struct{}{
	"Disabled":         {},
	"BindInProgress":   {},
	"UnbindInProgress": {},
	"DSP":              {},
	"USP":              {},
	"Reserved":         {},
	"FabricLink":       {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PortV1110CurrentPortConfigurationState) IsValid() bool {
	_, ok := validPortV1110CurrentPortConfigurationStateEnumValues[v]
	return ok
}

// NewPortV1110CurrentPortConfigurationStateFromValue returns a pointer to a valid PortV1110CurrentPortConfigurationState
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPortV1110CurrentPortConfigurationStateFromValue(v string) (PortV1110CurrentPortConfigurationState, error) {
	ev := PortV1110CurrentPortConfigurationState(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for PortV1110CurrentPortConfigurationState: valid values are %v", v, AllowedPortV1110CurrentPortConfigurationStateEnumValues)
}

// AssertPortV1110CurrentPortConfigurationStateRequired checks if the required fields are not zero-ed
func AssertPortV1110CurrentPortConfigurationStateRequired(obj PortV1110CurrentPortConfigurationState) error {
	return nil
}

// AssertPortV1110CurrentPortConfigurationStateConstraints checks if the values respects the defined constraints
func AssertPortV1110CurrentPortConfigurationStateConstraints(obj PortV1110CurrentPortConfigurationState) error {
	return nil
}
