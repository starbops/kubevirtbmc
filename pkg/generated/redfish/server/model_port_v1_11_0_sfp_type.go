// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type PortV1110SfpType string

// List of PortV1110SfpType
const (
	PORTV1110SFPTYPE_SFP        PortV1110SfpType = "SFP"
	PORTV1110SFPTYPE_SFP_PLUS   PortV1110SfpType = "SFPPlus"
	PORTV1110SFPTYPE_SFP28      PortV1110SfpType = "SFP28"
	PORTV1110SFPTYPE_C_SFP      PortV1110SfpType = "cSFP"
	PORTV1110SFPTYPE_SFPDD      PortV1110SfpType = "SFPDD"
	PORTV1110SFPTYPE_QSFP       PortV1110SfpType = "QSFP"
	PORTV1110SFPTYPE_QSFP_PLUS  PortV1110SfpType = "QSFPPlus"
	PORTV1110SFPTYPE_QSFP14     PortV1110SfpType = "QSFP14"
	PORTV1110SFPTYPE_QSFP28     PortV1110SfpType = "QSFP28"
	PORTV1110SFPTYPE_QSFP56     PortV1110SfpType = "QSFP56"
	PORTV1110SFPTYPE_MINI_SASHD PortV1110SfpType = "MiniSASHD"
	PORTV1110SFPTYPE_QSFPDD     PortV1110SfpType = "QSFPDD"
	PORTV1110SFPTYPE_OSFP       PortV1110SfpType = "OSFP"
)

// AllowedPortV1110SfpTypeEnumValues is all the allowed values of PortV1110SfpType enum
var AllowedPortV1110SfpTypeEnumValues = []PortV1110SfpType{
	"SFP",
	"SFPPlus",
	"SFP28",
	"cSFP",
	"SFPDD",
	"QSFP",
	"QSFPPlus",
	"QSFP14",
	"QSFP28",
	"QSFP56",
	"MiniSASHD",
	"QSFPDD",
	"OSFP",
}

// validPortV1110SfpTypeEnumValue provides a map of PortV1110SfpTypes for fast verification of use input
var validPortV1110SfpTypeEnumValues = map[PortV1110SfpType]struct{}{
	"SFP":       {},
	"SFPPlus":   {},
	"SFP28":     {},
	"cSFP":      {},
	"SFPDD":     {},
	"QSFP":      {},
	"QSFPPlus":  {},
	"QSFP14":    {},
	"QSFP28":    {},
	"QSFP56":    {},
	"MiniSASHD": {},
	"QSFPDD":    {},
	"OSFP":      {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PortV1110SfpType) IsValid() bool {
	_, ok := validPortV1110SfpTypeEnumValues[v]
	return ok
}

// NewPortV1110SfpTypeFromValue returns a pointer to a valid PortV1110SfpType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPortV1110SfpTypeFromValue(v string) (PortV1110SfpType, error) {
	ev := PortV1110SfpType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for PortV1110SfpType: valid values are %v", v, AllowedPortV1110SfpTypeEnumValues)
}

// AssertPortV1110SfpTypeRequired checks if the required fields are not zero-ed
func AssertPortV1110SfpTypeRequired(obj PortV1110SfpType) error {
	return nil
}

// AssertPortV1110SfpTypeConstraints checks if the values respects the defined constraints
func AssertPortV1110SfpTypeConstraints(obj PortV1110SfpType) error {
	return nil
}
