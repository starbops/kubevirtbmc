// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type VirtualMediaV163EjectPolicy string

// List of VirtualMediaV163EjectPolicy
const (
	VIRTUALMEDIAV163EJECTPOLICY_ON_POWER_OFF VirtualMediaV163EjectPolicy = "OnPowerOff"
	VIRTUALMEDIAV163EJECTPOLICY_SESSION      VirtualMediaV163EjectPolicy = "Session"
	VIRTUALMEDIAV163EJECTPOLICY_TIMED        VirtualMediaV163EjectPolicy = "Timed"
	VIRTUALMEDIAV163EJECTPOLICY_AFTER_USE    VirtualMediaV163EjectPolicy = "AfterUse"
	VIRTUALMEDIAV163EJECTPOLICY_PERSISTENT   VirtualMediaV163EjectPolicy = "Persistent"
)

// AllowedVirtualMediaV163EjectPolicyEnumValues is all the allowed values of VirtualMediaV163EjectPolicy enum
var AllowedVirtualMediaV163EjectPolicyEnumValues = []VirtualMediaV163EjectPolicy{
	"OnPowerOff",
	"Session",
	"Timed",
	"AfterUse",
	"Persistent",
}

// validVirtualMediaV163EjectPolicyEnumValue provides a map of VirtualMediaV163EjectPolicys for fast verification of use input
var validVirtualMediaV163EjectPolicyEnumValues = map[VirtualMediaV163EjectPolicy]struct{}{
	"OnPowerOff": {},
	"Session":    {},
	"Timed":      {},
	"AfterUse":   {},
	"Persistent": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v VirtualMediaV163EjectPolicy) IsValid() bool {
	_, ok := validVirtualMediaV163EjectPolicyEnumValues[v]
	return ok
}

// NewVirtualMediaV163EjectPolicyFromValue returns a pointer to a valid VirtualMediaV163EjectPolicy
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewVirtualMediaV163EjectPolicyFromValue(v string) (VirtualMediaV163EjectPolicy, error) {
	ev := VirtualMediaV163EjectPolicy(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for VirtualMediaV163EjectPolicy: valid values are %v", v, AllowedVirtualMediaV163EjectPolicyEnumValues)
}

// AssertVirtualMediaV163EjectPolicyRequired checks if the required fields are not zero-ed
func AssertVirtualMediaV163EjectPolicyRequired(obj VirtualMediaV163EjectPolicy) error {
	return nil
}

// AssertVirtualMediaV163EjectPolicyConstraints checks if the values respects the defined constraints
func AssertVirtualMediaV163EjectPolicyConstraints(obj VirtualMediaV163EjectPolicy) error {
	return nil
}
