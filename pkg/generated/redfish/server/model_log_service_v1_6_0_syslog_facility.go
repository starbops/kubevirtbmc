// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

// LogServiceV160SyslogFacility : The syslog facility code is an enumeration of program types.
type LogServiceV160SyslogFacility string

// List of LogServiceV160SyslogFacility
const (
	LOGSERVICEV160SYSLOGFACILITY_KERN         LogServiceV160SyslogFacility = "Kern"
	LOGSERVICEV160SYSLOGFACILITY_USER         LogServiceV160SyslogFacility = "User"
	LOGSERVICEV160SYSLOGFACILITY_MAIL         LogServiceV160SyslogFacility = "Mail"
	LOGSERVICEV160SYSLOGFACILITY_DAEMON       LogServiceV160SyslogFacility = "Daemon"
	LOGSERVICEV160SYSLOGFACILITY_AUTH         LogServiceV160SyslogFacility = "Auth"
	LOGSERVICEV160SYSLOGFACILITY_SYSLOG       LogServiceV160SyslogFacility = "Syslog"
	LOGSERVICEV160SYSLOGFACILITY_LPR          LogServiceV160SyslogFacility = "LPR"
	LOGSERVICEV160SYSLOGFACILITY_NEWS         LogServiceV160SyslogFacility = "News"
	LOGSERVICEV160SYSLOGFACILITY_UUCP         LogServiceV160SyslogFacility = "UUCP"
	LOGSERVICEV160SYSLOGFACILITY_CRON         LogServiceV160SyslogFacility = "Cron"
	LOGSERVICEV160SYSLOGFACILITY_AUTHPRIV     LogServiceV160SyslogFacility = "Authpriv"
	LOGSERVICEV160SYSLOGFACILITY_FTP          LogServiceV160SyslogFacility = "FTP"
	LOGSERVICEV160SYSLOGFACILITY_NTP          LogServiceV160SyslogFacility = "NTP"
	LOGSERVICEV160SYSLOGFACILITY_SECURITY     LogServiceV160SyslogFacility = "Security"
	LOGSERVICEV160SYSLOGFACILITY_CONSOLE      LogServiceV160SyslogFacility = "Console"
	LOGSERVICEV160SYSLOGFACILITY_SOLARIS_CRON LogServiceV160SyslogFacility = "SolarisCron"
	LOGSERVICEV160SYSLOGFACILITY_LOCAL0       LogServiceV160SyslogFacility = "Local0"
	LOGSERVICEV160SYSLOGFACILITY_LOCAL1       LogServiceV160SyslogFacility = "Local1"
	LOGSERVICEV160SYSLOGFACILITY_LOCAL2       LogServiceV160SyslogFacility = "Local2"
	LOGSERVICEV160SYSLOGFACILITY_LOCAL3       LogServiceV160SyslogFacility = "Local3"
	LOGSERVICEV160SYSLOGFACILITY_LOCAL4       LogServiceV160SyslogFacility = "Local4"
	LOGSERVICEV160SYSLOGFACILITY_LOCAL5       LogServiceV160SyslogFacility = "Local5"
	LOGSERVICEV160SYSLOGFACILITY_LOCAL6       LogServiceV160SyslogFacility = "Local6"
	LOGSERVICEV160SYSLOGFACILITY_LOCAL7       LogServiceV160SyslogFacility = "Local7"
)

// AllowedLogServiceV160SyslogFacilityEnumValues is all the allowed values of LogServiceV160SyslogFacility enum
var AllowedLogServiceV160SyslogFacilityEnumValues = []LogServiceV160SyslogFacility{
	"Kern",
	"User",
	"Mail",
	"Daemon",
	"Auth",
	"Syslog",
	"LPR",
	"News",
	"UUCP",
	"Cron",
	"Authpriv",
	"FTP",
	"NTP",
	"Security",
	"Console",
	"SolarisCron",
	"Local0",
	"Local1",
	"Local2",
	"Local3",
	"Local4",
	"Local5",
	"Local6",
	"Local7",
}

// validLogServiceV160SyslogFacilityEnumValue provides a map of LogServiceV160SyslogFacilitys for fast verification of use input
var validLogServiceV160SyslogFacilityEnumValues = map[LogServiceV160SyslogFacility]struct{}{
	"Kern":        {},
	"User":        {},
	"Mail":        {},
	"Daemon":      {},
	"Auth":        {},
	"Syslog":      {},
	"LPR":         {},
	"News":        {},
	"UUCP":        {},
	"Cron":        {},
	"Authpriv":    {},
	"FTP":         {},
	"NTP":         {},
	"Security":    {},
	"Console":     {},
	"SolarisCron": {},
	"Local0":      {},
	"Local1":      {},
	"Local2":      {},
	"Local3":      {},
	"Local4":      {},
	"Local5":      {},
	"Local6":      {},
	"Local7":      {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v LogServiceV160SyslogFacility) IsValid() bool {
	_, ok := validLogServiceV160SyslogFacilityEnumValues[v]
	return ok
}

// NewLogServiceV160SyslogFacilityFromValue returns a pointer to a valid LogServiceV160SyslogFacility
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewLogServiceV160SyslogFacilityFromValue(v string) (LogServiceV160SyslogFacility, error) {
	ev := LogServiceV160SyslogFacility(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for LogServiceV160SyslogFacility: valid values are %v", v, AllowedLogServiceV160SyslogFacilityEnumValues)
}

// AssertLogServiceV160SyslogFacilityRequired checks if the required fields are not zero-ed
func AssertLogServiceV160SyslogFacilityRequired(obj LogServiceV160SyslogFacility) error {
	return nil
}

// AssertLogServiceV160SyslogFacilityConstraints checks if the values respects the defined constraints
func AssertLogServiceV160SyslogFacilityConstraints(obj LogServiceV160SyslogFacility) error {
	return nil
}
