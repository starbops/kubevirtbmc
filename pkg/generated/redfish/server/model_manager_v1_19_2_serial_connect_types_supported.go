// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2024.3
 */

package server

import (
	"fmt"
)

type ManagerV1192SerialConnectTypesSupported string

// List of ManagerV1192SerialConnectTypesSupported
const (
	MANAGERV1192SERIALCONNECTTYPESSUPPORTED_SSH    ManagerV1192SerialConnectTypesSupported = "SSH"
	MANAGERV1192SERIALCONNECTTYPESSUPPORTED_TELNET ManagerV1192SerialConnectTypesSupported = "Telnet"
	MANAGERV1192SERIALCONNECTTYPESSUPPORTED_IPMI   ManagerV1192SerialConnectTypesSupported = "IPMI"
	MANAGERV1192SERIALCONNECTTYPESSUPPORTED_OEM    ManagerV1192SerialConnectTypesSupported = "Oem"
)

// AllowedManagerV1192SerialConnectTypesSupportedEnumValues is all the allowed values of ManagerV1192SerialConnectTypesSupported enum
var AllowedManagerV1192SerialConnectTypesSupportedEnumValues = []ManagerV1192SerialConnectTypesSupported{
	"SSH",
	"Telnet",
	"IPMI",
	"Oem",
}

// validManagerV1192SerialConnectTypesSupportedEnumValue provides a map of ManagerV1192SerialConnectTypesSupporteds for fast verification of use input
var validManagerV1192SerialConnectTypesSupportedEnumValues = map[ManagerV1192SerialConnectTypesSupported]struct{}{
	"SSH":    {},
	"Telnet": {},
	"IPMI":   {},
	"Oem":    {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ManagerV1192SerialConnectTypesSupported) IsValid() bool {
	_, ok := validManagerV1192SerialConnectTypesSupportedEnumValues[v]
	return ok
}

// NewManagerV1192SerialConnectTypesSupportedFromValue returns a pointer to a valid ManagerV1192SerialConnectTypesSupported
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewManagerV1192SerialConnectTypesSupportedFromValue(v string) (ManagerV1192SerialConnectTypesSupported, error) {
	ev := ManagerV1192SerialConnectTypesSupported(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ManagerV1192SerialConnectTypesSupported: valid values are %v", v, AllowedManagerV1192SerialConnectTypesSupportedEnumValues)
}

// AssertManagerV1192SerialConnectTypesSupportedRequired checks if the required fields are not zero-ed
func AssertManagerV1192SerialConnectTypesSupportedRequired(obj ManagerV1192SerialConnectTypesSupported) error {
	return nil
}

// AssertManagerV1192SerialConnectTypesSupportedConstraints checks if the values respects the defined constraints
func AssertManagerV1192SerialConnectTypesSupportedConstraints(obj ManagerV1192SerialConnectTypesSupported) error {
	return nil
}
