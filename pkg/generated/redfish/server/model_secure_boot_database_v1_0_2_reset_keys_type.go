// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type SecureBootDatabaseV102ResetKeysType string

// List of SecureBootDatabaseV102ResetKeysType
const (
	SECUREBOOTDATABASEV102RESETKEYSTYPE_RESET_ALL_KEYS_TO_DEFAULT SecureBootDatabaseV102ResetKeysType = "ResetAllKeysToDefault"
	SECUREBOOTDATABASEV102RESETKEYSTYPE_DELETE_ALL_KEYS           SecureBootDatabaseV102ResetKeysType = "DeleteAllKeys"
)

// AllowedSecureBootDatabaseV102ResetKeysTypeEnumValues is all the allowed values of SecureBootDatabaseV102ResetKeysType enum
var AllowedSecureBootDatabaseV102ResetKeysTypeEnumValues = []SecureBootDatabaseV102ResetKeysType{
	"ResetAllKeysToDefault",
	"DeleteAllKeys",
}

// validSecureBootDatabaseV102ResetKeysTypeEnumValue provides a map of SecureBootDatabaseV102ResetKeysTypes for fast verification of use input
var validSecureBootDatabaseV102ResetKeysTypeEnumValues = map[SecureBootDatabaseV102ResetKeysType]struct{}{
	"ResetAllKeysToDefault": {},
	"DeleteAllKeys":         {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SecureBootDatabaseV102ResetKeysType) IsValid() bool {
	_, ok := validSecureBootDatabaseV102ResetKeysTypeEnumValues[v]
	return ok
}

// NewSecureBootDatabaseV102ResetKeysTypeFromValue returns a pointer to a valid SecureBootDatabaseV102ResetKeysType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSecureBootDatabaseV102ResetKeysTypeFromValue(v string) (SecureBootDatabaseV102ResetKeysType, error) {
	ev := SecureBootDatabaseV102ResetKeysType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for SecureBootDatabaseV102ResetKeysType: valid values are %v", v, AllowedSecureBootDatabaseV102ResetKeysTypeEnumValues)
}

// AssertSecureBootDatabaseV102ResetKeysTypeRequired checks if the required fields are not zero-ed
func AssertSecureBootDatabaseV102ResetKeysTypeRequired(obj SecureBootDatabaseV102ResetKeysType) error {
	return nil
}

// AssertSecureBootDatabaseV102ResetKeysTypeConstraints checks if the values respects the defined constraints
func AssertSecureBootDatabaseV102ResetKeysTypeConstraints(obj SecureBootDatabaseV102ResetKeysType) error {
	return nil
}
