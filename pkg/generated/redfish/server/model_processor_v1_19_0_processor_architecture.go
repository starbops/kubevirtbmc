// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type ProcessorV1190ProcessorArchitecture string

// List of ProcessorV1190ProcessorArchitecture
const (
	PROCESSORV1190PROCESSORARCHITECTURE_X86    ProcessorV1190ProcessorArchitecture = "x86"
	PROCESSORV1190PROCESSORARCHITECTURE_IA_64  ProcessorV1190ProcessorArchitecture = "IA-64"
	PROCESSORV1190PROCESSORARCHITECTURE_ARM    ProcessorV1190ProcessorArchitecture = "ARM"
	PROCESSORV1190PROCESSORARCHITECTURE_MIPS   ProcessorV1190ProcessorArchitecture = "MIPS"
	PROCESSORV1190PROCESSORARCHITECTURE_POWER  ProcessorV1190ProcessorArchitecture = "Power"
	PROCESSORV1190PROCESSORARCHITECTURE_RISC_V ProcessorV1190ProcessorArchitecture = "RISC-V"
	PROCESSORV1190PROCESSORARCHITECTURE_OEM    ProcessorV1190ProcessorArchitecture = "OEM"
)

// AllowedProcessorV1190ProcessorArchitectureEnumValues is all the allowed values of ProcessorV1190ProcessorArchitecture enum
var AllowedProcessorV1190ProcessorArchitectureEnumValues = []ProcessorV1190ProcessorArchitecture{
	"x86",
	"IA-64",
	"ARM",
	"MIPS",
	"Power",
	"RISC-V",
	"OEM",
}

// validProcessorV1190ProcessorArchitectureEnumValue provides a map of ProcessorV1190ProcessorArchitectures for fast verification of use input
var validProcessorV1190ProcessorArchitectureEnumValues = map[ProcessorV1190ProcessorArchitecture]struct{}{
	"x86":    {},
	"IA-64":  {},
	"ARM":    {},
	"MIPS":   {},
	"Power":  {},
	"RISC-V": {},
	"OEM":    {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ProcessorV1190ProcessorArchitecture) IsValid() bool {
	_, ok := validProcessorV1190ProcessorArchitectureEnumValues[v]
	return ok
}

// NewProcessorV1190ProcessorArchitectureFromValue returns a pointer to a valid ProcessorV1190ProcessorArchitecture
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewProcessorV1190ProcessorArchitectureFromValue(v string) (ProcessorV1190ProcessorArchitecture, error) {
	ev := ProcessorV1190ProcessorArchitecture(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ProcessorV1190ProcessorArchitecture: valid values are %v", v, AllowedProcessorV1190ProcessorArchitectureEnumValues)
}

// AssertProcessorV1190ProcessorArchitectureRequired checks if the required fields are not zero-ed
func AssertProcessorV1190ProcessorArchitectureRequired(obj ProcessorV1190ProcessorArchitecture) error {
	return nil
}

// AssertProcessorV1190ProcessorArchitectureConstraints checks if the values respects the defined constraints
func AssertProcessorV1190ProcessorArchitectureConstraints(obj ProcessorV1190ProcessorArchitecture) error {
	return nil
}
