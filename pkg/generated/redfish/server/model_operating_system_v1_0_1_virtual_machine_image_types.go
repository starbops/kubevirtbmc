// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type OperatingSystemV101VirtualMachineImageTypes string

// List of OperatingSystemV101VirtualMachineImageTypes
const (
	OPERATINGSYSTEMV101VIRTUALMACHINEIMAGETYPES_RAW   OperatingSystemV101VirtualMachineImageTypes = "Raw"
	OPERATINGSYSTEMV101VIRTUALMACHINEIMAGETYPES_OVF   OperatingSystemV101VirtualMachineImageTypes = "OVF"
	OPERATINGSYSTEMV101VIRTUALMACHINEIMAGETYPES_OVA   OperatingSystemV101VirtualMachineImageTypes = "OVA"
	OPERATINGSYSTEMV101VIRTUALMACHINEIMAGETYPES_VHD   OperatingSystemV101VirtualMachineImageTypes = "VHD"
	OPERATINGSYSTEMV101VIRTUALMACHINEIMAGETYPES_VMDK  OperatingSystemV101VirtualMachineImageTypes = "VMDK"
	OPERATINGSYSTEMV101VIRTUALMACHINEIMAGETYPES_VDI   OperatingSystemV101VirtualMachineImageTypes = "VDI"
	OPERATINGSYSTEMV101VIRTUALMACHINEIMAGETYPES_QCOW  OperatingSystemV101VirtualMachineImageTypes = "QCOW"
	OPERATINGSYSTEMV101VIRTUALMACHINEIMAGETYPES_QCOW2 OperatingSystemV101VirtualMachineImageTypes = "QCOW2"
)

// AllowedOperatingSystemV101VirtualMachineImageTypesEnumValues is all the allowed values of OperatingSystemV101VirtualMachineImageTypes enum
var AllowedOperatingSystemV101VirtualMachineImageTypesEnumValues = []OperatingSystemV101VirtualMachineImageTypes{
	"Raw",
	"OVF",
	"OVA",
	"VHD",
	"VMDK",
	"VDI",
	"QCOW",
	"QCOW2",
}

// validOperatingSystemV101VirtualMachineImageTypesEnumValue provides a map of OperatingSystemV101VirtualMachineImageTypess for fast verification of use input
var validOperatingSystemV101VirtualMachineImageTypesEnumValues = map[OperatingSystemV101VirtualMachineImageTypes]struct{}{
	"Raw":   {},
	"OVF":   {},
	"OVA":   {},
	"VHD":   {},
	"VMDK":  {},
	"VDI":   {},
	"QCOW":  {},
	"QCOW2": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OperatingSystemV101VirtualMachineImageTypes) IsValid() bool {
	_, ok := validOperatingSystemV101VirtualMachineImageTypesEnumValues[v]
	return ok
}

// NewOperatingSystemV101VirtualMachineImageTypesFromValue returns a pointer to a valid OperatingSystemV101VirtualMachineImageTypes
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOperatingSystemV101VirtualMachineImageTypesFromValue(v string) (OperatingSystemV101VirtualMachineImageTypes, error) {
	ev := OperatingSystemV101VirtualMachineImageTypes(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for OperatingSystemV101VirtualMachineImageTypes: valid values are %v", v, AllowedOperatingSystemV101VirtualMachineImageTypesEnumValues)
}

// AssertOperatingSystemV101VirtualMachineImageTypesRequired checks if the required fields are not zero-ed
func AssertOperatingSystemV101VirtualMachineImageTypesRequired(obj OperatingSystemV101VirtualMachineImageTypes) error {
	return nil
}

// AssertOperatingSystemV101VirtualMachineImageTypesConstraints checks if the values respects the defined constraints
func AssertOperatingSystemV101VirtualMachineImageTypesConstraints(obj OperatingSystemV101VirtualMachineImageTypes) error {
	return nil
}
