// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type IpAddressesV115Ipv6AddressOrigin string

// List of IpAddressesV115Ipv6AddressOrigin
const (
	IPADDRESSESV115IPV6ADDRESSORIGIN_STATIC     IpAddressesV115Ipv6AddressOrigin = "Static"
	IPADDRESSESV115IPV6ADDRESSORIGIN_DHCPV6     IpAddressesV115Ipv6AddressOrigin = "DHCPv6"
	IPADDRESSESV115IPV6ADDRESSORIGIN_LINK_LOCAL IpAddressesV115Ipv6AddressOrigin = "LinkLocal"
	IPADDRESSESV115IPV6ADDRESSORIGIN_SLAAC      IpAddressesV115Ipv6AddressOrigin = "SLAAC"
)

// AllowedIpAddressesV115Ipv6AddressOriginEnumValues is all the allowed values of IpAddressesV115Ipv6AddressOrigin enum
var AllowedIpAddressesV115Ipv6AddressOriginEnumValues = []IpAddressesV115Ipv6AddressOrigin{
	"Static",
	"DHCPv6",
	"LinkLocal",
	"SLAAC",
}

// validIpAddressesV115Ipv6AddressOriginEnumValue provides a map of IpAddressesV115Ipv6AddressOrigins for fast verification of use input
var validIpAddressesV115Ipv6AddressOriginEnumValues = map[IpAddressesV115Ipv6AddressOrigin]struct{}{
	"Static":    {},
	"DHCPv6":    {},
	"LinkLocal": {},
	"SLAAC":     {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v IpAddressesV115Ipv6AddressOrigin) IsValid() bool {
	_, ok := validIpAddressesV115Ipv6AddressOriginEnumValues[v]
	return ok
}

// NewIpAddressesV115Ipv6AddressOriginFromValue returns a pointer to a valid IpAddressesV115Ipv6AddressOrigin
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewIpAddressesV115Ipv6AddressOriginFromValue(v string) (IpAddressesV115Ipv6AddressOrigin, error) {
	ev := IpAddressesV115Ipv6AddressOrigin(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for IpAddressesV115Ipv6AddressOrigin: valid values are %v", v, AllowedIpAddressesV115Ipv6AddressOriginEnumValues)
}

// AssertIpAddressesV115Ipv6AddressOriginRequired checks if the required fields are not zero-ed
func AssertIpAddressesV115Ipv6AddressOriginRequired(obj IpAddressesV115Ipv6AddressOrigin) error {
	return nil
}

// AssertIpAddressesV115Ipv6AddressOriginConstraints checks if the values respects the defined constraints
func AssertIpAddressesV115Ipv6AddressOriginConstraints(obj IpAddressesV115Ipv6AddressOrigin) error {
	return nil
}
