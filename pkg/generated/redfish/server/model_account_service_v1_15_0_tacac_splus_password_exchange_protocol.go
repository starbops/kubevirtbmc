// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type AccountServiceV1150TacacSplusPasswordExchangeProtocol string

// List of AccountServiceV1150TacacSplusPasswordExchangeProtocol
const (
	ACCOUNTSERVICEV1150TACACSPLUSPASSWORDEXCHANGEPROTOCOL_ASCII    AccountServiceV1150TacacSplusPasswordExchangeProtocol = "ASCII"
	ACCOUNTSERVICEV1150TACACSPLUSPASSWORDEXCHANGEPROTOCOL_PAP      AccountServiceV1150TacacSplusPasswordExchangeProtocol = "PAP"
	ACCOUNTSERVICEV1150TACACSPLUSPASSWORDEXCHANGEPROTOCOL_CHAP     AccountServiceV1150TacacSplusPasswordExchangeProtocol = "CHAP"
	ACCOUNTSERVICEV1150TACACSPLUSPASSWORDEXCHANGEPROTOCOL_MSCHAPV1 AccountServiceV1150TacacSplusPasswordExchangeProtocol = "MSCHAPv1"
	ACCOUNTSERVICEV1150TACACSPLUSPASSWORDEXCHANGEPROTOCOL_MSCHAPV2 AccountServiceV1150TacacSplusPasswordExchangeProtocol = "MSCHAPv2"
)

// AllowedAccountServiceV1150TacacSplusPasswordExchangeProtocolEnumValues is all the allowed values of AccountServiceV1150TacacSplusPasswordExchangeProtocol enum
var AllowedAccountServiceV1150TacacSplusPasswordExchangeProtocolEnumValues = []AccountServiceV1150TacacSplusPasswordExchangeProtocol{
	"ASCII",
	"PAP",
	"CHAP",
	"MSCHAPv1",
	"MSCHAPv2",
}

// validAccountServiceV1150TacacSplusPasswordExchangeProtocolEnumValue provides a map of AccountServiceV1150TacacSplusPasswordExchangeProtocols for fast verification of use input
var validAccountServiceV1150TacacSplusPasswordExchangeProtocolEnumValues = map[AccountServiceV1150TacacSplusPasswordExchangeProtocol]struct{}{
	"ASCII":    {},
	"PAP":      {},
	"CHAP":     {},
	"MSCHAPv1": {},
	"MSCHAPv2": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AccountServiceV1150TacacSplusPasswordExchangeProtocol) IsValid() bool {
	_, ok := validAccountServiceV1150TacacSplusPasswordExchangeProtocolEnumValues[v]
	return ok
}

// NewAccountServiceV1150TacacSplusPasswordExchangeProtocolFromValue returns a pointer to a valid AccountServiceV1150TacacSplusPasswordExchangeProtocol
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAccountServiceV1150TacacSplusPasswordExchangeProtocolFromValue(v string) (AccountServiceV1150TacacSplusPasswordExchangeProtocol, error) {
	ev := AccountServiceV1150TacacSplusPasswordExchangeProtocol(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for AccountServiceV1150TacacSplusPasswordExchangeProtocol: valid values are %v", v, AllowedAccountServiceV1150TacacSplusPasswordExchangeProtocolEnumValues)
}

// AssertAccountServiceV1150TacacSplusPasswordExchangeProtocolRequired checks if the required fields are not zero-ed
func AssertAccountServiceV1150TacacSplusPasswordExchangeProtocolRequired(obj AccountServiceV1150TacacSplusPasswordExchangeProtocol) error {
	return nil
}

// AssertAccountServiceV1150TacacSplusPasswordExchangeProtocolConstraints checks if the values respects the defined constraints
func AssertAccountServiceV1150TacacSplusPasswordExchangeProtocolConstraints(obj AccountServiceV1150TacacSplusPasswordExchangeProtocol) error {
	return nil
}
