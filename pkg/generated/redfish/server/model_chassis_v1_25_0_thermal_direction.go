// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type ChassisV1250ThermalDirection string

// List of ChassisV1250ThermalDirection
const (
	CHASSISV1250THERMALDIRECTION_FRONT_TO_BACK ChassisV1250ThermalDirection = "FrontToBack"
	CHASSISV1250THERMALDIRECTION_BACK_TO_FRONT ChassisV1250ThermalDirection = "BackToFront"
	CHASSISV1250THERMALDIRECTION_TOP_EXHAUST   ChassisV1250ThermalDirection = "TopExhaust"
	CHASSISV1250THERMALDIRECTION_SEALED        ChassisV1250ThermalDirection = "Sealed"
)

// AllowedChassisV1250ThermalDirectionEnumValues is all the allowed values of ChassisV1250ThermalDirection enum
var AllowedChassisV1250ThermalDirectionEnumValues = []ChassisV1250ThermalDirection{
	"FrontToBack",
	"BackToFront",
	"TopExhaust",
	"Sealed",
}

// validChassisV1250ThermalDirectionEnumValue provides a map of ChassisV1250ThermalDirections for fast verification of use input
var validChassisV1250ThermalDirectionEnumValues = map[ChassisV1250ThermalDirection]struct{}{
	"FrontToBack": {},
	"BackToFront": {},
	"TopExhaust":  {},
	"Sealed":      {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ChassisV1250ThermalDirection) IsValid() bool {
	_, ok := validChassisV1250ThermalDirectionEnumValues[v]
	return ok
}

// NewChassisV1250ThermalDirectionFromValue returns a pointer to a valid ChassisV1250ThermalDirection
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewChassisV1250ThermalDirectionFromValue(v string) (ChassisV1250ThermalDirection, error) {
	ev := ChassisV1250ThermalDirection(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ChassisV1250ThermalDirection: valid values are %v", v, AllowedChassisV1250ThermalDirectionEnumValues)
}

// AssertChassisV1250ThermalDirectionRequired checks if the required fields are not zero-ed
func AssertChassisV1250ThermalDirectionRequired(obj ChassisV1250ThermalDirection) error {
	return nil
}

// AssertChassisV1250ThermalDirectionConstraints checks if the values respects the defined constraints
func AssertChassisV1250ThermalDirectionConstraints(obj ChassisV1250ThermalDirection) error {
	return nil
}
