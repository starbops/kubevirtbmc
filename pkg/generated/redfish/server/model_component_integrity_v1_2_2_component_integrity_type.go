// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type ComponentIntegrityV122ComponentIntegrityType string

// List of ComponentIntegrityV122ComponentIntegrityType
const (
	COMPONENTINTEGRITYV122COMPONENTINTEGRITYTYPE_SPDM ComponentIntegrityV122ComponentIntegrityType = "SPDM"
	COMPONENTINTEGRITYV122COMPONENTINTEGRITYTYPE_TPM  ComponentIntegrityV122ComponentIntegrityType = "TPM"
	COMPONENTINTEGRITYV122COMPONENTINTEGRITYTYPE_OEM  ComponentIntegrityV122ComponentIntegrityType = "OEM"
)

// AllowedComponentIntegrityV122ComponentIntegrityTypeEnumValues is all the allowed values of ComponentIntegrityV122ComponentIntegrityType enum
var AllowedComponentIntegrityV122ComponentIntegrityTypeEnumValues = []ComponentIntegrityV122ComponentIntegrityType{
	"SPDM",
	"TPM",
	"OEM",
}

// validComponentIntegrityV122ComponentIntegrityTypeEnumValue provides a map of ComponentIntegrityV122ComponentIntegrityTypes for fast verification of use input
var validComponentIntegrityV122ComponentIntegrityTypeEnumValues = map[ComponentIntegrityV122ComponentIntegrityType]struct{}{
	"SPDM": {},
	"TPM":  {},
	"OEM":  {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ComponentIntegrityV122ComponentIntegrityType) IsValid() bool {
	_, ok := validComponentIntegrityV122ComponentIntegrityTypeEnumValues[v]
	return ok
}

// NewComponentIntegrityV122ComponentIntegrityTypeFromValue returns a pointer to a valid ComponentIntegrityV122ComponentIntegrityType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewComponentIntegrityV122ComponentIntegrityTypeFromValue(v string) (ComponentIntegrityV122ComponentIntegrityType, error) {
	ev := ComponentIntegrityV122ComponentIntegrityType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ComponentIntegrityV122ComponentIntegrityType: valid values are %v", v, AllowedComponentIntegrityV122ComponentIntegrityTypeEnumValues)
}

// AssertComponentIntegrityV122ComponentIntegrityTypeRequired checks if the required fields are not zero-ed
func AssertComponentIntegrityV122ComponentIntegrityTypeRequired(obj ComponentIntegrityV122ComponentIntegrityType) error {
	return nil
}

// AssertComponentIntegrityV122ComponentIntegrityTypeConstraints checks if the values respects the defined constraints
func AssertComponentIntegrityV122ComponentIntegrityTypeConstraints(obj ComponentIntegrityV122ComponentIntegrityType) error {
	return nil
}
