// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type ManagerAccountAccountTypes string

// List of ManagerAccountAccountTypes
const (
	MANAGERACCOUNTACCOUNTTYPES_REDFISH         ManagerAccountAccountTypes = "Redfish"
	MANAGERACCOUNTACCOUNTTYPES_SNMP            ManagerAccountAccountTypes = "SNMP"
	MANAGERACCOUNTACCOUNTTYPES_OEM             ManagerAccountAccountTypes = "OEM"
	MANAGERACCOUNTACCOUNTTYPES_HOST_CONSOLE    ManagerAccountAccountTypes = "HostConsole"
	MANAGERACCOUNTACCOUNTTYPES_MANAGER_CONSOLE ManagerAccountAccountTypes = "ManagerConsole"
	MANAGERACCOUNTACCOUNTTYPES_IPMI            ManagerAccountAccountTypes = "IPMI"
	MANAGERACCOUNTACCOUNTTYPES_KVMIP           ManagerAccountAccountTypes = "KVMIP"
	MANAGERACCOUNTACCOUNTTYPES_VIRTUAL_MEDIA   ManagerAccountAccountTypes = "VirtualMedia"
	MANAGERACCOUNTACCOUNTTYPES_WEB_UI          ManagerAccountAccountTypes = "WebUI"
)

// AllowedManagerAccountAccountTypesEnumValues is all the allowed values of ManagerAccountAccountTypes enum
var AllowedManagerAccountAccountTypesEnumValues = []ManagerAccountAccountTypes{
	"Redfish",
	"SNMP",
	"OEM",
	"HostConsole",
	"ManagerConsole",
	"IPMI",
	"KVMIP",
	"VirtualMedia",
	"WebUI",
}

// validManagerAccountAccountTypesEnumValue provides a map of ManagerAccountAccountTypess for fast verification of use input
var validManagerAccountAccountTypesEnumValues = map[ManagerAccountAccountTypes]struct{}{
	"Redfish":        {},
	"SNMP":           {},
	"OEM":            {},
	"HostConsole":    {},
	"ManagerConsole": {},
	"IPMI":           {},
	"KVMIP":          {},
	"VirtualMedia":   {},
	"WebUI":          {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ManagerAccountAccountTypes) IsValid() bool {
	_, ok := validManagerAccountAccountTypesEnumValues[v]
	return ok
}

// NewManagerAccountAccountTypesFromValue returns a pointer to a valid ManagerAccountAccountTypes
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewManagerAccountAccountTypesFromValue(v string) (ManagerAccountAccountTypes, error) {
	ev := ManagerAccountAccountTypes(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ManagerAccountAccountTypes: valid values are %v", v, AllowedManagerAccountAccountTypesEnumValues)
}

// AssertManagerAccountAccountTypesRequired checks if the required fields are not zero-ed
func AssertManagerAccountAccountTypesRequired(obj ManagerAccountAccountTypes) error {
	return nil
}

// AssertManagerAccountAccountTypesConstraints checks if the values respects the defined constraints
func AssertManagerAccountAccountTypesConstraints(obj ManagerAccountAccountTypes) error {
	return nil
}
