// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"time"
)

// SensorSensorEnergykWhExcerpt - The `Sensor` schema describes a sensor and its properties.
type SensorSensorEnergykWhExcerpt struct {

	// Apparent energy (kVAh).
	ApparentkVAh *float32 `json:"ApparentkVAh,omitempty"`

	// The link to the resource that provides the data for this sensor.
	DataSourceUri *string `json:"DataSourceUri,omitempty"`

	// The total accumulation value for this sensor.
	LifetimeReading *float32 `json:"LifetimeReading,omitempty"`

	// Reactive energy (kVARh).
	ReactivekVARh *float32 `json:"ReactivekVARh,omitempty"`

	// The sensor value.
	Reading *float32 `json:"Reading,omitempty"`

	// The date and time when the time-based properties were last reset.
	SensorResetTime *time.Time `json:"SensorResetTime,omitempty"`
}

// AssertSensorSensorEnergykWhExcerptRequired checks if the required fields are not zero-ed
func AssertSensorSensorEnergykWhExcerptRequired(obj SensorSensorEnergykWhExcerpt) error {
	return nil
}

// AssertSensorSensorEnergykWhExcerptConstraints checks if the values respects the defined constraints
func AssertSensorSensorEnergykWhExcerptConstraints(obj SensorSensorEnergykWhExcerpt) error {
	return nil
}
