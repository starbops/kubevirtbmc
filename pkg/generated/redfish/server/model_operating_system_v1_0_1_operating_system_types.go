// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type OperatingSystemV101OperatingSystemTypes string

// List of OperatingSystemV101OperatingSystemTypes
const (
	OPERATINGSYSTEMV101OPERATINGSYSTEMTYPES_LINUX      OperatingSystemV101OperatingSystemTypes = "Linux"
	OPERATINGSYSTEMV101OPERATINGSYSTEMTYPES_WINDOWS    OperatingSystemV101OperatingSystemTypes = "Windows"
	OPERATINGSYSTEMV101OPERATINGSYSTEMTYPES_SOLARIS    OperatingSystemV101OperatingSystemTypes = "Solaris"
	OPERATINGSYSTEMV101OPERATINGSYSTEMTYPES_HPUX       OperatingSystemV101OperatingSystemTypes = "HPUX"
	OPERATINGSYSTEMV101OPERATINGSYSTEMTYPES_AIX        OperatingSystemV101OperatingSystemTypes = "AIX"
	OPERATINGSYSTEMV101OPERATINGSYSTEMTYPES_BSD        OperatingSystemV101OperatingSystemTypes = "BSD"
	OPERATINGSYSTEMV101OPERATINGSYSTEMTYPES_MAC_OS     OperatingSystemV101OperatingSystemTypes = "macOS"
	OPERATINGSYSTEMV101OPERATINGSYSTEMTYPES_IBMI       OperatingSystemV101OperatingSystemTypes = "IBMi"
	OPERATINGSYSTEMV101OPERATINGSYSTEMTYPES_HYPERVISOR OperatingSystemV101OperatingSystemTypes = "Hypervisor"
)

// AllowedOperatingSystemV101OperatingSystemTypesEnumValues is all the allowed values of OperatingSystemV101OperatingSystemTypes enum
var AllowedOperatingSystemV101OperatingSystemTypesEnumValues = []OperatingSystemV101OperatingSystemTypes{
	"Linux",
	"Windows",
	"Solaris",
	"HPUX",
	"AIX",
	"BSD",
	"macOS",
	"IBMi",
	"Hypervisor",
}

// validOperatingSystemV101OperatingSystemTypesEnumValue provides a map of OperatingSystemV101OperatingSystemTypess for fast verification of use input
var validOperatingSystemV101OperatingSystemTypesEnumValues = map[OperatingSystemV101OperatingSystemTypes]struct{}{
	"Linux":      {},
	"Windows":    {},
	"Solaris":    {},
	"HPUX":       {},
	"AIX":        {},
	"BSD":        {},
	"macOS":      {},
	"IBMi":       {},
	"Hypervisor": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OperatingSystemV101OperatingSystemTypes) IsValid() bool {
	_, ok := validOperatingSystemV101OperatingSystemTypesEnumValues[v]
	return ok
}

// NewOperatingSystemV101OperatingSystemTypesFromValue returns a pointer to a valid OperatingSystemV101OperatingSystemTypes
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOperatingSystemV101OperatingSystemTypesFromValue(v string) (OperatingSystemV101OperatingSystemTypes, error) {
	ev := OperatingSystemV101OperatingSystemTypes(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for OperatingSystemV101OperatingSystemTypes: valid values are %v", v, AllowedOperatingSystemV101OperatingSystemTypesEnumValues)
}

// AssertOperatingSystemV101OperatingSystemTypesRequired checks if the required fields are not zero-ed
func AssertOperatingSystemV101OperatingSystemTypesRequired(obj OperatingSystemV101OperatingSystemTypes) error {
	return nil
}

// AssertOperatingSystemV101OperatingSystemTypesConstraints checks if the values respects the defined constraints
func AssertOperatingSystemV101OperatingSystemTypesConstraints(obj OperatingSystemV101OperatingSystemTypes) error {
	return nil
}
