// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type FacilityV141FacilityType string

// List of FacilityV141FacilityType
const (
	FACILITYV141FACILITYTYPE_ROOM     FacilityV141FacilityType = "Room"
	FACILITYV141FACILITYTYPE_FLOOR    FacilityV141FacilityType = "Floor"
	FACILITYV141FACILITYTYPE_BUILDING FacilityV141FacilityType = "Building"
	FACILITYV141FACILITYTYPE_SITE     FacilityV141FacilityType = "Site"
)

// AllowedFacilityV141FacilityTypeEnumValues is all the allowed values of FacilityV141FacilityType enum
var AllowedFacilityV141FacilityTypeEnumValues = []FacilityV141FacilityType{
	"Room",
	"Floor",
	"Building",
	"Site",
}

// validFacilityV141FacilityTypeEnumValue provides a map of FacilityV141FacilityTypes for fast verification of use input
var validFacilityV141FacilityTypeEnumValues = map[FacilityV141FacilityType]struct{}{
	"Room":     {},
	"Floor":    {},
	"Building": {},
	"Site":     {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v FacilityV141FacilityType) IsValid() bool {
	_, ok := validFacilityV141FacilityTypeEnumValues[v]
	return ok
}

// NewFacilityV141FacilityTypeFromValue returns a pointer to a valid FacilityV141FacilityType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewFacilityV141FacilityTypeFromValue(v string) (FacilityV141FacilityType, error) {
	ev := FacilityV141FacilityType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for FacilityV141FacilityType: valid values are %v", v, AllowedFacilityV141FacilityTypeEnumValues)
}

// AssertFacilityV141FacilityTypeRequired checks if the required fields are not zero-ed
func AssertFacilityV141FacilityTypeRequired(obj FacilityV141FacilityType) error {
	return nil
}

// AssertFacilityV141FacilityTypeConstraints checks if the values respects the defined constraints
func AssertFacilityV141FacilityTypeConstraints(obj FacilityV141FacilityType) error {
	return nil
}
