// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

// CableV122Links - The links to other resources that are related to this resource.
type CableV122Links struct {

	// An array of links to the downstream chassis connected to this cable.
	DownstreamChassis []OdataV4IdRef `json:"DownstreamChassis,omitempty"`

	// The number of items in a collection.
	DownstreamChassisodataCount int64 `json:"DownstreamChassis@odata.count,omitempty"`

	// An array of links to the downstream ports connected to this cable.
	DownstreamPorts []OdataV4IdRef `json:"DownstreamPorts,omitempty"`

	// The number of items in a collection.
	DownstreamPortsodataCount int64 `json:"DownstreamPorts@odata.count,omitempty"`

	// An array of links to the downstream resources connected to this cable.
	DownstreamResources []OdataV4IdRef `json:"DownstreamResources,omitempty"`

	// The number of items in a collection.
	DownstreamResourcesodataCount int64 `json:"DownstreamResources@odata.count,omitempty"`

	// The OEM extension.
	Oem map[string]interface{} `json:"Oem,omitempty"`

	// An array of links to the upstream chassis connected to this cable.
	UpstreamChassis []OdataV4IdRef `json:"UpstreamChassis,omitempty"`

	// The number of items in a collection.
	UpstreamChassisodataCount int64 `json:"UpstreamChassis@odata.count,omitempty"`

	// An array of links to the upstream ports connected to this cable.
	UpstreamPorts []OdataV4IdRef `json:"UpstreamPorts,omitempty"`

	// The number of items in a collection.
	UpstreamPortsodataCount int64 `json:"UpstreamPorts@odata.count,omitempty"`

	// An array of links to the upstream resources connected to this cable.
	UpstreamResources []OdataV4IdRef `json:"UpstreamResources,omitempty"`

	// The number of items in a collection.
	UpstreamResourcesodataCount int64 `json:"UpstreamResources@odata.count,omitempty"`
}

// AssertCableV122LinksRequired checks if the required fields are not zero-ed
func AssertCableV122LinksRequired(obj CableV122Links) error {
	for _, el := range obj.DownstreamChassis {
		if err := AssertOdataV4IdRefRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.DownstreamPorts {
		if err := AssertOdataV4IdRefRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.DownstreamResources {
		if err := AssertOdataV4IdRefRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.UpstreamChassis {
		if err := AssertOdataV4IdRefRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.UpstreamPorts {
		if err := AssertOdataV4IdRefRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.UpstreamResources {
		if err := AssertOdataV4IdRefRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertCableV122LinksConstraints checks if the values respects the defined constraints
func AssertCableV122LinksConstraints(obj CableV122Links) error {
	for _, el := range obj.DownstreamChassis {
		if err := AssertOdataV4IdRefConstraints(el); err != nil {
			return err
		}
	}
	for _, el := range obj.DownstreamPorts {
		if err := AssertOdataV4IdRefConstraints(el); err != nil {
			return err
		}
	}
	for _, el := range obj.DownstreamResources {
		if err := AssertOdataV4IdRefConstraints(el); err != nil {
			return err
		}
	}
	for _, el := range obj.UpstreamChassis {
		if err := AssertOdataV4IdRefConstraints(el); err != nil {
			return err
		}
	}
	for _, el := range obj.UpstreamPorts {
		if err := AssertOdataV4IdRefConstraints(el); err != nil {
			return err
		}
	}
	for _, el := range obj.UpstreamResources {
		if err := AssertOdataV4IdRefConstraints(el); err != nil {
			return err
		}
	}
	return nil
}
