// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"errors"
)

// SimpleStorageV131Device - A storage device, such as a disk drive or optical media device.
type SimpleStorageV131Device struct {

	// The size, in bytes, of the storage device.
	CapacityBytes *int64 `json:"CapacityBytes,omitempty"`

	// The name of the manufacturer of this device.
	Manufacturer *string `json:"Manufacturer,omitempty"`

	// The product model number of this device.
	Model *string `json:"Model,omitempty"`

	// The name of the Resource or array member.
	Name string `json:"Name"`

	// The OEM extension.
	Oem map[string]interface{} `json:"Oem,omitempty"`

	Status ResourceStatus `json:"Status,omitempty"`
}

// AssertSimpleStorageV131DeviceRequired checks if the required fields are not zero-ed
func AssertSimpleStorageV131DeviceRequired(obj SimpleStorageV131Device) error {
	elements := map[string]interface{}{
		"Name": obj.Name,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertResourceStatusRequired(obj.Status); err != nil {
		return err
	}
	return nil
}

// AssertSimpleStorageV131DeviceConstraints checks if the values respects the defined constraints
func AssertSimpleStorageV131DeviceConstraints(obj SimpleStorageV131Device) error {
	if obj.CapacityBytes != nil && *obj.CapacityBytes < 0 {
		return &ParsingError{Param: "CapacityBytes", Err: errors.New(errMsgMinValueConstraint)}
	}
	if err := AssertResourceStatusConstraints(obj.Status); err != nil {
		return err
	}
	return nil
}
