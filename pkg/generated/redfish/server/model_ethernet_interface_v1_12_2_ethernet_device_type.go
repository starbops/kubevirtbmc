// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2024.3
 */

package server

import (
	"fmt"
)

type EthernetInterfaceV1122EthernetDeviceType string

// List of EthernetInterfaceV1122EthernetDeviceType
const (
	ETHERNETINTERFACEV1122ETHERNETDEVICETYPE_PHYSICAL EthernetInterfaceV1122EthernetDeviceType = "Physical"
	ETHERNETINTERFACEV1122ETHERNETDEVICETYPE_VIRTUAL  EthernetInterfaceV1122EthernetDeviceType = "Virtual"
)

// AllowedEthernetInterfaceV1122EthernetDeviceTypeEnumValues is all the allowed values of EthernetInterfaceV1122EthernetDeviceType enum
var AllowedEthernetInterfaceV1122EthernetDeviceTypeEnumValues = []EthernetInterfaceV1122EthernetDeviceType{
	"Physical",
	"Virtual",
}

// validEthernetInterfaceV1122EthernetDeviceTypeEnumValue provides a map of EthernetInterfaceV1122EthernetDeviceTypes for fast verification of use input
var validEthernetInterfaceV1122EthernetDeviceTypeEnumValues = map[EthernetInterfaceV1122EthernetDeviceType]struct{}{
	"Physical": {},
	"Virtual":  {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EthernetInterfaceV1122EthernetDeviceType) IsValid() bool {
	_, ok := validEthernetInterfaceV1122EthernetDeviceTypeEnumValues[v]
	return ok
}

// NewEthernetInterfaceV1122EthernetDeviceTypeFromValue returns a pointer to a valid EthernetInterfaceV1122EthernetDeviceType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEthernetInterfaceV1122EthernetDeviceTypeFromValue(v string) (EthernetInterfaceV1122EthernetDeviceType, error) {
	ev := EthernetInterfaceV1122EthernetDeviceType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for EthernetInterfaceV1122EthernetDeviceType: valid values are %v", v, AllowedEthernetInterfaceV1122EthernetDeviceTypeEnumValues)
}

// AssertEthernetInterfaceV1122EthernetDeviceTypeRequired checks if the required fields are not zero-ed
func AssertEthernetInterfaceV1122EthernetDeviceTypeRequired(obj EthernetInterfaceV1122EthernetDeviceType) error {
	return nil
}

// AssertEthernetInterfaceV1122EthernetDeviceTypeConstraints checks if the values respects the defined constraints
func AssertEthernetInterfaceV1122EthernetDeviceTypeConstraints(obj EthernetInterfaceV1122EthernetDeviceType) error {
	return nil
}
