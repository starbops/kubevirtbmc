// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

// ComputerSystemV1220InterfaceTypeSelection : The enumerations of InterfaceTypeSelection specify the method for switching the TrustedModule InterfaceType, for instance between TPM1_2 and TPM2_0, if supported.
type ComputerSystemV1220InterfaceTypeSelection string

// List of ComputerSystemV1220InterfaceTypeSelection
const (
	COMPUTERSYSTEMV1220INTERFACETYPESELECTION_NONE            ComputerSystemV1220InterfaceTypeSelection = "None"
	COMPUTERSYSTEMV1220INTERFACETYPESELECTION_FIRMWARE_UPDATE ComputerSystemV1220InterfaceTypeSelection = "FirmwareUpdate"
	COMPUTERSYSTEMV1220INTERFACETYPESELECTION_BIOS_SETTING    ComputerSystemV1220InterfaceTypeSelection = "BiosSetting"
	COMPUTERSYSTEMV1220INTERFACETYPESELECTION_OEM_METHOD      ComputerSystemV1220InterfaceTypeSelection = "OemMethod"
)

// AllowedComputerSystemV1220InterfaceTypeSelectionEnumValues is all the allowed values of ComputerSystemV1220InterfaceTypeSelection enum
var AllowedComputerSystemV1220InterfaceTypeSelectionEnumValues = []ComputerSystemV1220InterfaceTypeSelection{
	"None",
	"FirmwareUpdate",
	"BiosSetting",
	"OemMethod",
}

// validComputerSystemV1220InterfaceTypeSelectionEnumValue provides a map of ComputerSystemV1220InterfaceTypeSelections for fast verification of use input
var validComputerSystemV1220InterfaceTypeSelectionEnumValues = map[ComputerSystemV1220InterfaceTypeSelection]struct{}{
	"None":           {},
	"FirmwareUpdate": {},
	"BiosSetting":    {},
	"OemMethod":      {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ComputerSystemV1220InterfaceTypeSelection) IsValid() bool {
	_, ok := validComputerSystemV1220InterfaceTypeSelectionEnumValues[v]
	return ok
}

// NewComputerSystemV1220InterfaceTypeSelectionFromValue returns a pointer to a valid ComputerSystemV1220InterfaceTypeSelection
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewComputerSystemV1220InterfaceTypeSelectionFromValue(v string) (ComputerSystemV1220InterfaceTypeSelection, error) {
	ev := ComputerSystemV1220InterfaceTypeSelection(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ComputerSystemV1220InterfaceTypeSelection: valid values are %v", v, AllowedComputerSystemV1220InterfaceTypeSelectionEnumValues)
}

// AssertComputerSystemV1220InterfaceTypeSelectionRequired checks if the required fields are not zero-ed
func AssertComputerSystemV1220InterfaceTypeSelectionRequired(obj ComputerSystemV1220InterfaceTypeSelection) error {
	return nil
}

// AssertComputerSystemV1220InterfaceTypeSelectionConstraints checks if the values respects the defined constraints
func AssertComputerSystemV1220InterfaceTypeSelectionConstraints(obj ComputerSystemV1220InterfaceTypeSelection) error {
	return nil
}
