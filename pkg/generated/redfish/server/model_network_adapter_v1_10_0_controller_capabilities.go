// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

// NetworkAdapterV1100ControllerCapabilities - The capabilities of a controller.
type NetworkAdapterV1100ControllerCapabilities struct {
	DataCenterBridging NetworkAdapterV1100DataCenterBridging `json:"DataCenterBridging,omitempty"`

	NPAR NetworkAdapterV1100NicPartitioning `json:"NPAR,omitempty"`

	NPIV NetworkAdapterV1100Npiv `json:"NPIV,omitempty"`

	// The maximum number of physical functions available on this controller.
	NetworkDeviceFunctionCount *int64 `json:"NetworkDeviceFunctionCount,omitempty"`

	// The number of physical ports on this controller.
	NetworkPortCount *int64 `json:"NetworkPortCount,omitempty"`

	VirtualizationOffload NetworkAdapterV1100VirtualizationOffload `json:"VirtualizationOffload,omitempty"`
}

// AssertNetworkAdapterV1100ControllerCapabilitiesRequired checks if the required fields are not zero-ed
func AssertNetworkAdapterV1100ControllerCapabilitiesRequired(obj NetworkAdapterV1100ControllerCapabilities) error {
	if err := AssertNetworkAdapterV1100DataCenterBridgingRequired(obj.DataCenterBridging); err != nil {
		return err
	}
	if err := AssertNetworkAdapterV1100NicPartitioningRequired(obj.NPAR); err != nil {
		return err
	}
	if err := AssertNetworkAdapterV1100NpivRequired(obj.NPIV); err != nil {
		return err
	}
	if err := AssertNetworkAdapterV1100VirtualizationOffloadRequired(obj.VirtualizationOffload); err != nil {
		return err
	}
	return nil
}

// AssertNetworkAdapterV1100ControllerCapabilitiesConstraints checks if the values respects the defined constraints
func AssertNetworkAdapterV1100ControllerCapabilitiesConstraints(obj NetworkAdapterV1100ControllerCapabilities) error {
	if err := AssertNetworkAdapterV1100DataCenterBridgingConstraints(obj.DataCenterBridging); err != nil {
		return err
	}
	if err := AssertNetworkAdapterV1100NicPartitioningConstraints(obj.NPAR); err != nil {
		return err
	}
	if err := AssertNetworkAdapterV1100NpivConstraints(obj.NPIV); err != nil {
		return err
	}
	if err := AssertNetworkAdapterV1100VirtualizationOffloadConstraints(obj.VirtualizationOffload); err != nil {
		return err
	}
	return nil
}
