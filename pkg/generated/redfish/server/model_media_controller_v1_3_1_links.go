// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

// MediaControllerV131Links - The links to other resources that are related to this resource.
type MediaControllerV131Links struct {

	// An array of links to the endpoints that connect to this media controller.
	Endpoints []OdataV4IdRef `json:"Endpoints,omitempty"`

	// The number of items in a collection.
	EndpointsodataCount int64 `json:"Endpoints@odata.count,omitempty"`

	// An array of links to the memory domains associated with this media controller.
	MemoryDomains []OdataV4IdRef `json:"MemoryDomains,omitempty"`

	// The number of items in a collection.
	MemoryDomainsodataCount int64 `json:"MemoryDomains@odata.count,omitempty"`

	// The OEM extension.
	Oem map[string]interface{} `json:"Oem,omitempty"`
}

// AssertMediaControllerV131LinksRequired checks if the required fields are not zero-ed
func AssertMediaControllerV131LinksRequired(obj MediaControllerV131Links) error {
	for _, el := range obj.Endpoints {
		if err := AssertOdataV4IdRefRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.MemoryDomains {
		if err := AssertOdataV4IdRefRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertMediaControllerV131LinksConstraints checks if the values respects the defined constraints
func AssertMediaControllerV131LinksConstraints(obj MediaControllerV131Links) error {
	for _, el := range obj.Endpoints {
		if err := AssertOdataV4IdRefConstraints(el); err != nil {
			return err
		}
	}
	for _, el := range obj.MemoryDomains {
		if err := AssertOdataV4IdRefConstraints(el); err != nil {
			return err
		}
	}
	return nil
}
