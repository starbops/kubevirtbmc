// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type LogServiceV160LogEntryTypes string

// List of LogServiceV160LogEntryTypes
const (
	LOGSERVICEV160LOGENTRYTYPES_EVENT    LogServiceV160LogEntryTypes = "Event"
	LOGSERVICEV160LOGENTRYTYPES_SEL      LogServiceV160LogEntryTypes = "SEL"
	LOGSERVICEV160LOGENTRYTYPES_MULTIPLE LogServiceV160LogEntryTypes = "Multiple"
	LOGSERVICEV160LOGENTRYTYPES_OEM      LogServiceV160LogEntryTypes = "OEM"
	LOGSERVICEV160LOGENTRYTYPES_CXL      LogServiceV160LogEntryTypes = "CXL"
)

// AllowedLogServiceV160LogEntryTypesEnumValues is all the allowed values of LogServiceV160LogEntryTypes enum
var AllowedLogServiceV160LogEntryTypesEnumValues = []LogServiceV160LogEntryTypes{
	"Event",
	"SEL",
	"Multiple",
	"OEM",
	"CXL",
}

// validLogServiceV160LogEntryTypesEnumValue provides a map of LogServiceV160LogEntryTypess for fast verification of use input
var validLogServiceV160LogEntryTypesEnumValues = map[LogServiceV160LogEntryTypes]struct{}{
	"Event":    {},
	"SEL":      {},
	"Multiple": {},
	"OEM":      {},
	"CXL":      {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v LogServiceV160LogEntryTypes) IsValid() bool {
	_, ok := validLogServiceV160LogEntryTypesEnumValues[v]
	return ok
}

// NewLogServiceV160LogEntryTypesFromValue returns a pointer to a valid LogServiceV160LogEntryTypes
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewLogServiceV160LogEntryTypesFromValue(v string) (LogServiceV160LogEntryTypes, error) {
	ev := LogServiceV160LogEntryTypes(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for LogServiceV160LogEntryTypes: valid values are %v", v, AllowedLogServiceV160LogEntryTypesEnumValues)
}

// AssertLogServiceV160LogEntryTypesRequired checks if the required fields are not zero-ed
func AssertLogServiceV160LogEntryTypesRequired(obj LogServiceV160LogEntryTypes) error {
	return nil
}

// AssertLogServiceV160LogEntryTypesConstraints checks if the values respects the defined constraints
func AssertLogServiceV160LogEntryTypesConstraints(obj LogServiceV160LogEntryTypes) error {
	return nil
}
