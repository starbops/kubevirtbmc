// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

// NetworkAdapterV1100Controllers - A network controller ASIC that makes up part of a network adapter.
type NetworkAdapterV1100Controllers struct {
	ControllerCapabilities NetworkAdapterV1100ControllerCapabilities `json:"ControllerCapabilities,omitempty"`

	// The version of the user-facing firmware package.
	FirmwarePackageVersion *string `json:"FirmwarePackageVersion,omitempty"`

	// The durable names for the network adapter controller.
	Identifiers []ResourceIdentifier `json:"Identifiers,omitempty"`

	Links NetworkAdapterV1100ControllerLinks `json:"Links,omitempty"`

	Location ResourceLocation `json:"Location,omitempty"`

	PCIeInterface PcieDevicePcieInterface `json:"PCIeInterface,omitempty"`
}

// AssertNetworkAdapterV1100ControllersRequired checks if the required fields are not zero-ed
func AssertNetworkAdapterV1100ControllersRequired(obj NetworkAdapterV1100Controllers) error {
	if err := AssertNetworkAdapterV1100ControllerCapabilitiesRequired(obj.ControllerCapabilities); err != nil {
		return err
	}
	for _, el := range obj.Identifiers {
		if err := AssertResourceIdentifierRequired(el); err != nil {
			return err
		}
	}
	if err := AssertNetworkAdapterV1100ControllerLinksRequired(obj.Links); err != nil {
		return err
	}
	if err := AssertResourceLocationRequired(obj.Location); err != nil {
		return err
	}
	if err := AssertPcieDevicePcieInterfaceRequired(obj.PCIeInterface); err != nil {
		return err
	}
	return nil
}

// AssertNetworkAdapterV1100ControllersConstraints checks if the values respects the defined constraints
func AssertNetworkAdapterV1100ControllersConstraints(obj NetworkAdapterV1100Controllers) error {
	if err := AssertNetworkAdapterV1100ControllerCapabilitiesConstraints(obj.ControllerCapabilities); err != nil {
		return err
	}
	for _, el := range obj.Identifiers {
		if err := AssertResourceIdentifierConstraints(el); err != nil {
			return err
		}
	}
	if err := AssertNetworkAdapterV1100ControllerLinksConstraints(obj.Links); err != nil {
		return err
	}
	if err := AssertResourceLocationConstraints(obj.Location); err != nil {
		return err
	}
	if err := AssertPcieDevicePcieInterfaceConstraints(obj.PCIeInterface); err != nil {
		return err
	}
	return nil
}
