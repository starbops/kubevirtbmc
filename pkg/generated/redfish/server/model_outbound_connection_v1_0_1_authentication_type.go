// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type OutboundConnectionV101AuthenticationType string

// List of OutboundConnectionV101AuthenticationType
const (
	OUTBOUNDCONNECTIONV101AUTHENTICATIONTYPE_MTLS OutboundConnectionV101AuthenticationType = "MTLS"
	OUTBOUNDCONNECTIONV101AUTHENTICATIONTYPE_JWT  OutboundConnectionV101AuthenticationType = "JWT"
	OUTBOUNDCONNECTIONV101AUTHENTICATIONTYPE_NONE OutboundConnectionV101AuthenticationType = "None"
	OUTBOUNDCONNECTIONV101AUTHENTICATIONTYPE_OEM  OutboundConnectionV101AuthenticationType = "OEM"
)

// AllowedOutboundConnectionV101AuthenticationTypeEnumValues is all the allowed values of OutboundConnectionV101AuthenticationType enum
var AllowedOutboundConnectionV101AuthenticationTypeEnumValues = []OutboundConnectionV101AuthenticationType{
	"MTLS",
	"JWT",
	"None",
	"OEM",
}

// validOutboundConnectionV101AuthenticationTypeEnumValue provides a map of OutboundConnectionV101AuthenticationTypes for fast verification of use input
var validOutboundConnectionV101AuthenticationTypeEnumValues = map[OutboundConnectionV101AuthenticationType]struct{}{
	"MTLS": {},
	"JWT":  {},
	"None": {},
	"OEM":  {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OutboundConnectionV101AuthenticationType) IsValid() bool {
	_, ok := validOutboundConnectionV101AuthenticationTypeEnumValues[v]
	return ok
}

// NewOutboundConnectionV101AuthenticationTypeFromValue returns a pointer to a valid OutboundConnectionV101AuthenticationType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOutboundConnectionV101AuthenticationTypeFromValue(v string) (OutboundConnectionV101AuthenticationType, error) {
	ev := OutboundConnectionV101AuthenticationType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for OutboundConnectionV101AuthenticationType: valid values are %v", v, AllowedOutboundConnectionV101AuthenticationTypeEnumValues)
}

// AssertOutboundConnectionV101AuthenticationTypeRequired checks if the required fields are not zero-ed
func AssertOutboundConnectionV101AuthenticationTypeRequired(obj OutboundConnectionV101AuthenticationType) error {
	return nil
}

// AssertOutboundConnectionV101AuthenticationTypeConstraints checks if the values respects the defined constraints
func AssertOutboundConnectionV101AuthenticationTypeConstraints(obj OutboundConnectionV101AuthenticationType) error {
	return nil
}
