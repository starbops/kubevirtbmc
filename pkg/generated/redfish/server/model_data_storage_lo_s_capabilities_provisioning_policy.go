// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

// DataStorageLoSCapabilitiesProvisioningPolicy : Space provisioning policy.
type DataStorageLoSCapabilitiesProvisioningPolicy string

// List of DataStorageLoSCapabilitiesProvisioningPolicy
const (
	DATASTORAGELOSCAPABILITIESPROVISIONINGPOLICY_FIXED DataStorageLoSCapabilitiesProvisioningPolicy = "Fixed"
	DATASTORAGELOSCAPABILITIESPROVISIONINGPOLICY_THIN  DataStorageLoSCapabilitiesProvisioningPolicy = "Thin"
)

// AllowedDataStorageLoSCapabilitiesProvisioningPolicyEnumValues is all the allowed values of DataStorageLoSCapabilitiesProvisioningPolicy enum
var AllowedDataStorageLoSCapabilitiesProvisioningPolicyEnumValues = []DataStorageLoSCapabilitiesProvisioningPolicy{
	"Fixed",
	"Thin",
}

// validDataStorageLoSCapabilitiesProvisioningPolicyEnumValue provides a map of DataStorageLoSCapabilitiesProvisioningPolicys for fast verification of use input
var validDataStorageLoSCapabilitiesProvisioningPolicyEnumValues = map[DataStorageLoSCapabilitiesProvisioningPolicy]struct{}{
	"Fixed": {},
	"Thin":  {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DataStorageLoSCapabilitiesProvisioningPolicy) IsValid() bool {
	_, ok := validDataStorageLoSCapabilitiesProvisioningPolicyEnumValues[v]
	return ok
}

// NewDataStorageLoSCapabilitiesProvisioningPolicyFromValue returns a pointer to a valid DataStorageLoSCapabilitiesProvisioningPolicy
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDataStorageLoSCapabilitiesProvisioningPolicyFromValue(v string) (DataStorageLoSCapabilitiesProvisioningPolicy, error) {
	ev := DataStorageLoSCapabilitiesProvisioningPolicy(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for DataStorageLoSCapabilitiesProvisioningPolicy: valid values are %v", v, AllowedDataStorageLoSCapabilitiesProvisioningPolicyEnumValues)
}

// AssertDataStorageLoSCapabilitiesProvisioningPolicyRequired checks if the required fields are not zero-ed
func AssertDataStorageLoSCapabilitiesProvisioningPolicyRequired(obj DataStorageLoSCapabilitiesProvisioningPolicy) error {
	return nil
}

// AssertDataStorageLoSCapabilitiesProvisioningPolicyConstraints checks if the values respects the defined constraints
func AssertDataStorageLoSCapabilitiesProvisioningPolicyConstraints(obj DataStorageLoSCapabilitiesProvisioningPolicy) error {
	return nil
}
