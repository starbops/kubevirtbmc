// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type DriveV1180HotspareType string

// List of DriveV1180HotspareType
const (
	DRIVEV1180HOTSPARETYPE_NONE      DriveV1180HotspareType = "None"
	DRIVEV1180HOTSPARETYPE_GLOBAL    DriveV1180HotspareType = "Global"
	DRIVEV1180HOTSPARETYPE_CHASSIS   DriveV1180HotspareType = "Chassis"
	DRIVEV1180HOTSPARETYPE_DEDICATED DriveV1180HotspareType = "Dedicated"
)

// AllowedDriveV1180HotspareTypeEnumValues is all the allowed values of DriveV1180HotspareType enum
var AllowedDriveV1180HotspareTypeEnumValues = []DriveV1180HotspareType{
	"None",
	"Global",
	"Chassis",
	"Dedicated",
}

// validDriveV1180HotspareTypeEnumValue provides a map of DriveV1180HotspareTypes for fast verification of use input
var validDriveV1180HotspareTypeEnumValues = map[DriveV1180HotspareType]struct{}{
	"None":      {},
	"Global":    {},
	"Chassis":   {},
	"Dedicated": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DriveV1180HotspareType) IsValid() bool {
	_, ok := validDriveV1180HotspareTypeEnumValues[v]
	return ok
}

// NewDriveV1180HotspareTypeFromValue returns a pointer to a valid DriveV1180HotspareType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDriveV1180HotspareTypeFromValue(v string) (DriveV1180HotspareType, error) {
	ev := DriveV1180HotspareType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for DriveV1180HotspareType: valid values are %v", v, AllowedDriveV1180HotspareTypeEnumValues)
}

// AssertDriveV1180HotspareTypeRequired checks if the required fields are not zero-ed
func AssertDriveV1180HotspareTypeRequired(obj DriveV1180HotspareType) error {
	return nil
}

// AssertDriveV1180HotspareTypeConstraints checks if the values respects the defined constraints
func AssertDriveV1180HotspareTypeConstraints(obj DriveV1180HotspareType) error {
	return nil
}
