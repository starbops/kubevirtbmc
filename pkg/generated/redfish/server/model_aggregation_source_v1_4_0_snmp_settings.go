// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

// AggregationSourceV140SnmpSettings - Settings for an SNMP aggregation source.
type AggregationSourceV140SnmpSettings struct {

	// The secret authentication key for SNMPv3.
	AuthenticationKey *string `json:"AuthenticationKey,omitempty" validate:"regexp=(^[ !#-~]+$)|(^Passphrase:[ ^[ !#-~]+$)|(^Hex:[0-9A-Fa-f]{24,96})|(^\\\\*+$)"`

	// Indicates if the AuthenticationKey property is set.
	AuthenticationKeySet bool `json:"AuthenticationKeySet,omitempty"`

	AuthenticationProtocol AggregationSourceV140SnmpAuthenticationProtocols `json:"AuthenticationProtocol,omitempty"`

	// The secret authentication key for SNMPv3.
	EncryptionKey *string `json:"EncryptionKey,omitempty" validate:"regexp=(^[A-Za-z0-9]+$)|(^\\\\*+$)"`

	// Indicates if the EncryptionKey property is set.
	EncryptionKeySet bool `json:"EncryptionKeySet,omitempty"`

	EncryptionProtocol AggregationSourceV140SnmpEncryptionProtocols `json:"EncryptionProtocol,omitempty"`

	// The SNMP trap community string.
	TrapCommunity *string `json:"TrapCommunity,omitempty"`
}

// AssertAggregationSourceV140SnmpSettingsRequired checks if the required fields are not zero-ed
func AssertAggregationSourceV140SnmpSettingsRequired(obj AggregationSourceV140SnmpSettings) error {
	return nil
}

// AssertAggregationSourceV140SnmpSettingsConstraints checks if the values respects the defined constraints
func AssertAggregationSourceV140SnmpSettingsConstraints(obj AggregationSourceV140SnmpSettings) error {
	return nil
}
