// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type SensorV181ImplementationType string

// List of SensorV181ImplementationType
const (
	SENSORV181IMPLEMENTATIONTYPE_PHYSICAL_SENSOR SensorV181ImplementationType = "PhysicalSensor"
	SENSORV181IMPLEMENTATIONTYPE_SYNTHESIZED     SensorV181ImplementationType = "Synthesized"
	SENSORV181IMPLEMENTATIONTYPE_REPORTED        SensorV181ImplementationType = "Reported"
)

// AllowedSensorV181ImplementationTypeEnumValues is all the allowed values of SensorV181ImplementationType enum
var AllowedSensorV181ImplementationTypeEnumValues = []SensorV181ImplementationType{
	"PhysicalSensor",
	"Synthesized",
	"Reported",
}

// validSensorV181ImplementationTypeEnumValue provides a map of SensorV181ImplementationTypes for fast verification of use input
var validSensorV181ImplementationTypeEnumValues = map[SensorV181ImplementationType]struct{}{
	"PhysicalSensor": {},
	"Synthesized":    {},
	"Reported":       {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SensorV181ImplementationType) IsValid() bool {
	_, ok := validSensorV181ImplementationTypeEnumValues[v]
	return ok
}

// NewSensorV181ImplementationTypeFromValue returns a pointer to a valid SensorV181ImplementationType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSensorV181ImplementationTypeFromValue(v string) (SensorV181ImplementationType, error) {
	ev := SensorV181ImplementationType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for SensorV181ImplementationType: valid values are %v", v, AllowedSensorV181ImplementationTypeEnumValues)
}

// AssertSensorV181ImplementationTypeRequired checks if the required fields are not zero-ed
func AssertSensorV181ImplementationTypeRequired(obj SensorV181ImplementationType) error {
	return nil
}

// AssertSensorV181ImplementationTypeConstraints checks if the values respects the defined constraints
func AssertSensorV181ImplementationTypeConstraints(obj SensorV181ImplementationType) error {
	return nil
}
