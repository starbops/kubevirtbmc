// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type OutboundConnectionV101OutboundConnectionRetryPolicyType string

// List of OutboundConnectionV101OutboundConnectionRetryPolicyType
const (
	OUTBOUNDCONNECTIONV101OUTBOUNDCONNECTIONRETRYPOLICYTYPE_NONE          OutboundConnectionV101OutboundConnectionRetryPolicyType = "None"
	OUTBOUNDCONNECTIONV101OUTBOUNDCONNECTIONRETRYPOLICYTYPE_RETRY_FOREVER OutboundConnectionV101OutboundConnectionRetryPolicyType = "RetryForever"
	OUTBOUNDCONNECTIONV101OUTBOUNDCONNECTIONRETRYPOLICYTYPE_RETRY_COUNT   OutboundConnectionV101OutboundConnectionRetryPolicyType = "RetryCount"
)

// AllowedOutboundConnectionV101OutboundConnectionRetryPolicyTypeEnumValues is all the allowed values of OutboundConnectionV101OutboundConnectionRetryPolicyType enum
var AllowedOutboundConnectionV101OutboundConnectionRetryPolicyTypeEnumValues = []OutboundConnectionV101OutboundConnectionRetryPolicyType{
	"None",
	"RetryForever",
	"RetryCount",
}

// validOutboundConnectionV101OutboundConnectionRetryPolicyTypeEnumValue provides a map of OutboundConnectionV101OutboundConnectionRetryPolicyTypes for fast verification of use input
var validOutboundConnectionV101OutboundConnectionRetryPolicyTypeEnumValues = map[OutboundConnectionV101OutboundConnectionRetryPolicyType]struct{}{
	"None":         {},
	"RetryForever": {},
	"RetryCount":   {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OutboundConnectionV101OutboundConnectionRetryPolicyType) IsValid() bool {
	_, ok := validOutboundConnectionV101OutboundConnectionRetryPolicyTypeEnumValues[v]
	return ok
}

// NewOutboundConnectionV101OutboundConnectionRetryPolicyTypeFromValue returns a pointer to a valid OutboundConnectionV101OutboundConnectionRetryPolicyType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOutboundConnectionV101OutboundConnectionRetryPolicyTypeFromValue(v string) (OutboundConnectionV101OutboundConnectionRetryPolicyType, error) {
	ev := OutboundConnectionV101OutboundConnectionRetryPolicyType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for OutboundConnectionV101OutboundConnectionRetryPolicyType: valid values are %v", v, AllowedOutboundConnectionV101OutboundConnectionRetryPolicyTypeEnumValues)
}

// AssertOutboundConnectionV101OutboundConnectionRetryPolicyTypeRequired checks if the required fields are not zero-ed
func AssertOutboundConnectionV101OutboundConnectionRetryPolicyTypeRequired(obj OutboundConnectionV101OutboundConnectionRetryPolicyType) error {
	return nil
}

// AssertOutboundConnectionV101OutboundConnectionRetryPolicyTypeConstraints checks if the values respects the defined constraints
func AssertOutboundConnectionV101OutboundConnectionRetryPolicyTypeConstraints(obj OutboundConnectionV101OutboundConnectionRetryPolicyType) error {
	return nil
}
