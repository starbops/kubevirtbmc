// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type ProcessorV1190FpgaType string

// List of ProcessorV1190FpgaType
const (
	PROCESSORV1190FPGATYPE_INTEGRATED ProcessorV1190FpgaType = "Integrated"
	PROCESSORV1190FPGATYPE_DISCRETE   ProcessorV1190FpgaType = "Discrete"
)

// AllowedProcessorV1190FpgaTypeEnumValues is all the allowed values of ProcessorV1190FpgaType enum
var AllowedProcessorV1190FpgaTypeEnumValues = []ProcessorV1190FpgaType{
	"Integrated",
	"Discrete",
}

// validProcessorV1190FpgaTypeEnumValue provides a map of ProcessorV1190FpgaTypes for fast verification of use input
var validProcessorV1190FpgaTypeEnumValues = map[ProcessorV1190FpgaType]struct{}{
	"Integrated": {},
	"Discrete":   {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ProcessorV1190FpgaType) IsValid() bool {
	_, ok := validProcessorV1190FpgaTypeEnumValues[v]
	return ok
}

// NewProcessorV1190FpgaTypeFromValue returns a pointer to a valid ProcessorV1190FpgaType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewProcessorV1190FpgaTypeFromValue(v string) (ProcessorV1190FpgaType, error) {
	ev := ProcessorV1190FpgaType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ProcessorV1190FpgaType: valid values are %v", v, AllowedProcessorV1190FpgaTypeEnumValues)
}

// AssertProcessorV1190FpgaTypeRequired checks if the required fields are not zero-ed
func AssertProcessorV1190FpgaTypeRequired(obj ProcessorV1190FpgaType) error {
	return nil
}

// AssertProcessorV1190FpgaTypeConstraints checks if the values respects the defined constraints
func AssertProcessorV1190FpgaTypeConstraints(obj ProcessorV1190FpgaType) error {
	return nil
}
