// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2024.3
 */

package server

import (
	"errors"
)

// ComputerSystemV1230ProcessorSummary - The central processors of the system in general detail.
type ComputerSystemV1230ProcessorSummary struct {

	// The number of processor cores in the system.
	CoreCount *int64 `json:"CoreCount,omitempty"`

	// The number of physical processors in the system.
	Count *int64 `json:"Count,omitempty"`

	// The number of logical processors in the system.
	LogicalProcessorCount *int64 `json:"LogicalProcessorCount,omitempty"`

	Metrics OdataV4IdRef `json:"Metrics,omitempty"`

	// The processor model for the primary or majority of processors in this system.
	Model *string `json:"Model,omitempty"`

	Status ResourceStatus `json:"Status,omitempty"`

	// An indication of whether threading is enabled on all processors in this system.
	ThreadingEnabled bool `json:"ThreadingEnabled,omitempty"`
}

// AssertComputerSystemV1230ProcessorSummaryRequired checks if the required fields are not zero-ed
func AssertComputerSystemV1230ProcessorSummaryRequired(obj ComputerSystemV1230ProcessorSummary) error {
	if err := AssertOdataV4IdRefRequired(obj.Metrics); err != nil {
		return err
	}
	if err := AssertResourceStatusRequired(obj.Status); err != nil {
		return err
	}
	return nil
}

// AssertComputerSystemV1230ProcessorSummaryConstraints checks if the values respects the defined constraints
func AssertComputerSystemV1230ProcessorSummaryConstraints(obj ComputerSystemV1230ProcessorSummary) error {
	if obj.CoreCount != nil && *obj.CoreCount < 0 {
		return &ParsingError{Param: "CoreCount", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.Count != nil && *obj.Count < 0 {
		return &ParsingError{Param: "Count", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.LogicalProcessorCount != nil && *obj.LogicalProcessorCount < 0 {
		return &ParsingError{Param: "LogicalProcessorCount", Err: errors.New(errMsgMinValueConstraint)}
	}
	if err := AssertOdataV4IdRefConstraints(obj.Metrics); err != nil {
		return err
	}
	if err := AssertResourceStatusConstraints(obj.Status); err != nil {
		return err
	}
	return nil
}
