// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"time"
)

// RegisteredClientV111RegisteredClient - The RegisteredClient schema defines the record format for a registered client.  It is designed to allow well-behaved clients to register with a Redfish service such that other clients are aware the service might be configured or monitored by the client.
type RegisteredClientV111RegisteredClient struct {

	// The OData description of a payload.
	OdataContext string `json:"@odata.context,omitempty"`

	// The current ETag of the resource.
	OdataEtag string `json:"@odata.etag,omitempty"`

	// The unique identifier for a resource.
	OdataId string `json:"@odata.id"`

	// The type of a resource.
	OdataType string `json:"@odata.type"`

	Actions RegisteredClientV111Actions `json:"Actions,omitempty"`

	ClientType RegisteredClientV111ClientType `json:"ClientType"`

	// The URI of the registered client.
	ClientURI string `json:"ClientURI,omitempty"`

	// A client-supplied data for providing context for its own use.
	Context string `json:"Context,omitempty"`

	// The date and time when the client entry was created.
	CreatedDate time.Time `json:"CreatedDate,omitempty"`

	// The description of this resource.  Used for commonality in the schema definitions.
	Description string `json:"Description,omitempty"`

	// The date and time when the client entry will expire.
	ExpirationDate time.Time `json:"ExpirationDate,omitempty"`

	// The unique identifier for this resource within the collection of similar resources.
	Id string `json:"Id"`

	// An array of resources that the registered client monitors or configures.
	ManagedResources []RegisteredClientV111ManagedResource `json:"ManagedResources,omitempty"`

	// The name of the resource or array member.
	Name string `json:"Name"`

	// The OEM extension.
	Oem map[string]interface{} `json:"Oem,omitempty"`

	// Additional client-supplied data for providing contextual information for its own use.
	SubContext string `json:"SubContext,omitempty"`
}

// AssertRegisteredClientV111RegisteredClientRequired checks if the required fields are not zero-ed
func AssertRegisteredClientV111RegisteredClientRequired(obj RegisteredClientV111RegisteredClient) error {
	elements := map[string]interface{}{
		"@odata.id":   obj.OdataId,
		"@odata.type": obj.OdataType,
		"ClientType":  obj.ClientType,
		"Id":          obj.Id,
		"Name":        obj.Name,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertRegisteredClientV111ActionsRequired(obj.Actions); err != nil {
		return err
	}
	for _, el := range obj.ManagedResources {
		if err := AssertRegisteredClientV111ManagedResourceRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRegisteredClientV111RegisteredClientConstraints checks if the values respects the defined constraints
func AssertRegisteredClientV111RegisteredClientConstraints(obj RegisteredClientV111RegisteredClient) error {
	if err := AssertRegisteredClientV111ActionsConstraints(obj.Actions); err != nil {
		return err
	}
	for _, el := range obj.ManagedResources {
		if err := AssertRegisteredClientV111ManagedResourceConstraints(el); err != nil {
			return err
		}
	}
	return nil
}
