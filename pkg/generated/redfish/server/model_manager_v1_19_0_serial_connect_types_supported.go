// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type ManagerV1190SerialConnectTypesSupported string

// List of ManagerV1190SerialConnectTypesSupported
const (
	MANAGERV1190SERIALCONNECTTYPESSUPPORTED_SSH    ManagerV1190SerialConnectTypesSupported = "SSH"
	MANAGERV1190SERIALCONNECTTYPESSUPPORTED_TELNET ManagerV1190SerialConnectTypesSupported = "Telnet"
	MANAGERV1190SERIALCONNECTTYPESSUPPORTED_IPMI   ManagerV1190SerialConnectTypesSupported = "IPMI"
	MANAGERV1190SERIALCONNECTTYPESSUPPORTED_OEM    ManagerV1190SerialConnectTypesSupported = "Oem"
)

// AllowedManagerV1190SerialConnectTypesSupportedEnumValues is all the allowed values of ManagerV1190SerialConnectTypesSupported enum
var AllowedManagerV1190SerialConnectTypesSupportedEnumValues = []ManagerV1190SerialConnectTypesSupported{
	"SSH",
	"Telnet",
	"IPMI",
	"Oem",
}

// validManagerV1190SerialConnectTypesSupportedEnumValue provides a map of ManagerV1190SerialConnectTypesSupporteds for fast verification of use input
var validManagerV1190SerialConnectTypesSupportedEnumValues = map[ManagerV1190SerialConnectTypesSupported]struct{}{
	"SSH":    {},
	"Telnet": {},
	"IPMI":   {},
	"Oem":    {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ManagerV1190SerialConnectTypesSupported) IsValid() bool {
	_, ok := validManagerV1190SerialConnectTypesSupportedEnumValues[v]
	return ok
}

// NewManagerV1190SerialConnectTypesSupportedFromValue returns a pointer to a valid ManagerV1190SerialConnectTypesSupported
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewManagerV1190SerialConnectTypesSupportedFromValue(v string) (ManagerV1190SerialConnectTypesSupported, error) {
	ev := ManagerV1190SerialConnectTypesSupported(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ManagerV1190SerialConnectTypesSupported: valid values are %v", v, AllowedManagerV1190SerialConnectTypesSupportedEnumValues)
}

// AssertManagerV1190SerialConnectTypesSupportedRequired checks if the required fields are not zero-ed
func AssertManagerV1190SerialConnectTypesSupportedRequired(obj ManagerV1190SerialConnectTypesSupported) error {
	return nil
}

// AssertManagerV1190SerialConnectTypesSupportedConstraints checks if the values respects the defined constraints
func AssertManagerV1190SerialConnectTypesSupportedConstraints(obj ManagerV1190SerialConnectTypesSupported) error {
	return nil
}
