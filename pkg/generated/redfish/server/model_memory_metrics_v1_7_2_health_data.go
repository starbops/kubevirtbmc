// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"errors"
)

// MemoryMetricsV172HealthData - The health information of the memory.
type MemoryMetricsV172HealthData struct {
	AlarmTrips MemoryMetricsV172AlarmTrips `json:"AlarmTrips,omitempty"`

	// An indication of whether data loss was detected.
	DataLossDetected *bool `json:"DataLossDetected,omitempty"`

	// An indication of whether the last shutdown succeeded.
	LastShutdownSuccess *bool `json:"LastShutdownSuccess,omitempty"`

	// An indication of whether performance has degraded.
	PerformanceDegraded *bool `json:"PerformanceDegraded,omitempty"`

	// The percentage of reads and writes that are predicted to still be available for the media.
	PredictedMediaLifeLeftPercent *float32 `json:"PredictedMediaLifeLeftPercent,omitempty"`

	// The remaining spare blocks, as a percentage.
	RemainingSpareBlockPercentage *float32 `json:"RemainingSpareBlockPercentage,omitempty"`
}

// AssertMemoryMetricsV172HealthDataRequired checks if the required fields are not zero-ed
func AssertMemoryMetricsV172HealthDataRequired(obj MemoryMetricsV172HealthData) error {
	if err := AssertMemoryMetricsV172AlarmTripsRequired(obj.AlarmTrips); err != nil {
		return err
	}
	return nil
}

// AssertMemoryMetricsV172HealthDataConstraints checks if the values respects the defined constraints
func AssertMemoryMetricsV172HealthDataConstraints(obj MemoryMetricsV172HealthData) error {
	if err := AssertMemoryMetricsV172AlarmTripsConstraints(obj.AlarmTrips); err != nil {
		return err
	}
	if obj.PredictedMediaLifeLeftPercent != nil && *obj.PredictedMediaLifeLeftPercent < 0 {
		return &ParsingError{Param: "PredictedMediaLifeLeftPercent", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.PredictedMediaLifeLeftPercent != nil && *obj.PredictedMediaLifeLeftPercent > 100 {
		return &ParsingError{Param: "PredictedMediaLifeLeftPercent", Err: errors.New(errMsgMaxValueConstraint)}
	}
	return nil
}
