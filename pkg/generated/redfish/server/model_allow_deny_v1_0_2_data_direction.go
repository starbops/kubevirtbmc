// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type AllowDenyV102DataDirection string

// List of AllowDenyV102DataDirection
const (
	ALLOWDENYV102DATADIRECTION_INGRESS AllowDenyV102DataDirection = "Ingress"
	ALLOWDENYV102DATADIRECTION_EGRESS  AllowDenyV102DataDirection = "Egress"
)

// AllowedAllowDenyV102DataDirectionEnumValues is all the allowed values of AllowDenyV102DataDirection enum
var AllowedAllowDenyV102DataDirectionEnumValues = []AllowDenyV102DataDirection{
	"Ingress",
	"Egress",
}

// validAllowDenyV102DataDirectionEnumValue provides a map of AllowDenyV102DataDirections for fast verification of use input
var validAllowDenyV102DataDirectionEnumValues = map[AllowDenyV102DataDirection]struct{}{
	"Ingress": {},
	"Egress":  {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AllowDenyV102DataDirection) IsValid() bool {
	_, ok := validAllowDenyV102DataDirectionEnumValues[v]
	return ok
}

// NewAllowDenyV102DataDirectionFromValue returns a pointer to a valid AllowDenyV102DataDirection
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAllowDenyV102DataDirectionFromValue(v string) (AllowDenyV102DataDirection, error) {
	ev := AllowDenyV102DataDirection(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for AllowDenyV102DataDirection: valid values are %v", v, AllowedAllowDenyV102DataDirectionEnumValues)
}

// AssertAllowDenyV102DataDirectionRequired checks if the required fields are not zero-ed
func AssertAllowDenyV102DataDirectionRequired(obj AllowDenyV102DataDirection) error {
	return nil
}

// AssertAllowDenyV102DataDirectionConstraints checks if the values respects the defined constraints
func AssertAllowDenyV102DataDirectionConstraints(obj AllowDenyV102DataDirection) error {
	return nil
}
