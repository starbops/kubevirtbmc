// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type IpAddressesV115Ipv4AddressOrigin string

// List of IpAddressesV115Ipv4AddressOrigin
const (
	IPADDRESSESV115IPV4ADDRESSORIGIN_STATIC          IpAddressesV115Ipv4AddressOrigin = "Static"
	IPADDRESSESV115IPV4ADDRESSORIGIN_DHCP            IpAddressesV115Ipv4AddressOrigin = "DHCP"
	IPADDRESSESV115IPV4ADDRESSORIGIN_BOOTP           IpAddressesV115Ipv4AddressOrigin = "BOOTP"
	IPADDRESSESV115IPV4ADDRESSORIGIN_IPV4_LINK_LOCAL IpAddressesV115Ipv4AddressOrigin = "IPv4LinkLocal"
)

// AllowedIpAddressesV115Ipv4AddressOriginEnumValues is all the allowed values of IpAddressesV115Ipv4AddressOrigin enum
var AllowedIpAddressesV115Ipv4AddressOriginEnumValues = []IpAddressesV115Ipv4AddressOrigin{
	"Static",
	"DHCP",
	"BOOTP",
	"IPv4LinkLocal",
}

// validIpAddressesV115Ipv4AddressOriginEnumValue provides a map of IpAddressesV115Ipv4AddressOrigins for fast verification of use input
var validIpAddressesV115Ipv4AddressOriginEnumValues = map[IpAddressesV115Ipv4AddressOrigin]struct{}{
	"Static":        {},
	"DHCP":          {},
	"BOOTP":         {},
	"IPv4LinkLocal": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v IpAddressesV115Ipv4AddressOrigin) IsValid() bool {
	_, ok := validIpAddressesV115Ipv4AddressOriginEnumValues[v]
	return ok
}

// NewIpAddressesV115Ipv4AddressOriginFromValue returns a pointer to a valid IpAddressesV115Ipv4AddressOrigin
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewIpAddressesV115Ipv4AddressOriginFromValue(v string) (IpAddressesV115Ipv4AddressOrigin, error) {
	ev := IpAddressesV115Ipv4AddressOrigin(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for IpAddressesV115Ipv4AddressOrigin: valid values are %v", v, AllowedIpAddressesV115Ipv4AddressOriginEnumValues)
}

// AssertIpAddressesV115Ipv4AddressOriginRequired checks if the required fields are not zero-ed
func AssertIpAddressesV115Ipv4AddressOriginRequired(obj IpAddressesV115Ipv4AddressOrigin) error {
	return nil
}

// AssertIpAddressesV115Ipv4AddressOriginConstraints checks if the values respects the defined constraints
func AssertIpAddressesV115Ipv4AddressOriginConstraints(obj IpAddressesV115Ipv4AddressOrigin) error {
	return nil
}
