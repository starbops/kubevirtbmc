// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

// PowerDistributionV133TransferConfiguration - The configuration settings for an automatic transfer switch.
type PowerDistributionV133TransferConfiguration struct {

	// The mains circuit that is switched on and qualified to supply power to the output circuit.
	ActiveMainsId *string `json:"ActiveMainsId,omitempty"`

	// Indicates if the qualified alternate mains circuit is automatically switched on when the preferred mains circuit becomes unqualified and is automatically switched off.
	AutoTransferEnabled *bool `json:"AutoTransferEnabled,omitempty"`

	// Indicates if a make-before-break switching sequence of the mains circuits is permitted when they are both qualified and in synchronization.
	ClosedTransitionAllowed *bool `json:"ClosedTransitionAllowed,omitempty"`

	// The time in seconds to wait for a closed transition to occur.
	ClosedTransitionTimeoutSeconds *int64 `json:"ClosedTransitionTimeoutSeconds,omitempty"`

	// The preferred source for the mains circuit to this equipment.
	PreferredMainsId *string `json:"PreferredMainsId,omitempty"`

	// The time in seconds to delay the automatic transfer from the alternate mains circuit back to the preferred mains circuit.
	RetransferDelaySeconds *int64 `json:"RetransferDelaySeconds,omitempty"`

	// Indicates if the automatic transfer is permitted from the alternate mains circuit back to the preferred mains circuit after the preferred mains circuit is qualified again and the Retransfer Delay time has expired.
	RetransferEnabled *bool `json:"RetransferEnabled,omitempty"`

	// The time in seconds to delay the automatic transfer from the preferred mains circuit to the alternate mains circuit when the preferred mains circuit is disqualified.
	TransferDelaySeconds *int64 `json:"TransferDelaySeconds,omitempty"`

	// Indicates if any transfer is inhibited.
	TransferInhibit *bool `json:"TransferInhibit,omitempty"`
}

// AssertPowerDistributionV133TransferConfigurationRequired checks if the required fields are not zero-ed
func AssertPowerDistributionV133TransferConfigurationRequired(obj PowerDistributionV133TransferConfiguration) error {
	return nil
}

// AssertPowerDistributionV133TransferConfigurationConstraints checks if the values respects the defined constraints
func AssertPowerDistributionV133TransferConfigurationConstraints(obj PowerDistributionV133TransferConfiguration) error {
	return nil
}
