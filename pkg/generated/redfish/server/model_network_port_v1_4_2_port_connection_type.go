// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type NetworkPortV142PortConnectionType string

// List of NetworkPortV142PortConnectionType
const (
	NETWORKPORTV142PORTCONNECTIONTYPE_NOT_CONNECTED   NetworkPortV142PortConnectionType = "NotConnected"
	NETWORKPORTV142PORTCONNECTIONTYPE_N_PORT          NetworkPortV142PortConnectionType = "NPort"
	NETWORKPORTV142PORTCONNECTIONTYPE_POINT_TO_POINT  NetworkPortV142PortConnectionType = "PointToPoint"
	NETWORKPORTV142PORTCONNECTIONTYPE_PRIVATE_LOOP    NetworkPortV142PortConnectionType = "PrivateLoop"
	NETWORKPORTV142PORTCONNECTIONTYPE_PUBLIC_LOOP     NetworkPortV142PortConnectionType = "PublicLoop"
	NETWORKPORTV142PORTCONNECTIONTYPE_GENERIC         NetworkPortV142PortConnectionType = "Generic"
	NETWORKPORTV142PORTCONNECTIONTYPE_EXTENDER_FABRIC NetworkPortV142PortConnectionType = "ExtenderFabric"
)

// AllowedNetworkPortV142PortConnectionTypeEnumValues is all the allowed values of NetworkPortV142PortConnectionType enum
var AllowedNetworkPortV142PortConnectionTypeEnumValues = []NetworkPortV142PortConnectionType{
	"NotConnected",
	"NPort",
	"PointToPoint",
	"PrivateLoop",
	"PublicLoop",
	"Generic",
	"ExtenderFabric",
}

// validNetworkPortV142PortConnectionTypeEnumValue provides a map of NetworkPortV142PortConnectionTypes for fast verification of use input
var validNetworkPortV142PortConnectionTypeEnumValues = map[NetworkPortV142PortConnectionType]struct{}{
	"NotConnected":   {},
	"NPort":          {},
	"PointToPoint":   {},
	"PrivateLoop":    {},
	"PublicLoop":     {},
	"Generic":        {},
	"ExtenderFabric": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v NetworkPortV142PortConnectionType) IsValid() bool {
	_, ok := validNetworkPortV142PortConnectionTypeEnumValues[v]
	return ok
}

// NewNetworkPortV142PortConnectionTypeFromValue returns a pointer to a valid NetworkPortV142PortConnectionType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewNetworkPortV142PortConnectionTypeFromValue(v string) (NetworkPortV142PortConnectionType, error) {
	ev := NetworkPortV142PortConnectionType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for NetworkPortV142PortConnectionType: valid values are %v", v, AllowedNetworkPortV142PortConnectionTypeEnumValues)
}

// AssertNetworkPortV142PortConnectionTypeRequired checks if the required fields are not zero-ed
func AssertNetworkPortV142PortConnectionTypeRequired(obj NetworkPortV142PortConnectionType) error {
	return nil
}

// AssertNetworkPortV142PortConnectionTypeConstraints checks if the values respects the defined constraints
func AssertNetworkPortV142PortConnectionTypeConstraints(obj NetworkPortV142PortConnectionType) error {
	return nil
}
