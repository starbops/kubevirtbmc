// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

// ComputerSystemV1220PowerRestorePolicyTypes : The enumerations of PowerRestorePolicyTypes specify the choice of power state for the system when power is applied.
type ComputerSystemV1220PowerRestorePolicyTypes string

// List of ComputerSystemV1220PowerRestorePolicyTypes
const (
	COMPUTERSYSTEMV1220POWERRESTOREPOLICYTYPES_ALWAYS_ON  ComputerSystemV1220PowerRestorePolicyTypes = "AlwaysOn"
	COMPUTERSYSTEMV1220POWERRESTOREPOLICYTYPES_ALWAYS_OFF ComputerSystemV1220PowerRestorePolicyTypes = "AlwaysOff"
	COMPUTERSYSTEMV1220POWERRESTOREPOLICYTYPES_LAST_STATE ComputerSystemV1220PowerRestorePolicyTypes = "LastState"
)

// AllowedComputerSystemV1220PowerRestorePolicyTypesEnumValues is all the allowed values of ComputerSystemV1220PowerRestorePolicyTypes enum
var AllowedComputerSystemV1220PowerRestorePolicyTypesEnumValues = []ComputerSystemV1220PowerRestorePolicyTypes{
	"AlwaysOn",
	"AlwaysOff",
	"LastState",
}

// validComputerSystemV1220PowerRestorePolicyTypesEnumValue provides a map of ComputerSystemV1220PowerRestorePolicyTypess for fast verification of use input
var validComputerSystemV1220PowerRestorePolicyTypesEnumValues = map[ComputerSystemV1220PowerRestorePolicyTypes]struct{}{
	"AlwaysOn":  {},
	"AlwaysOff": {},
	"LastState": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ComputerSystemV1220PowerRestorePolicyTypes) IsValid() bool {
	_, ok := validComputerSystemV1220PowerRestorePolicyTypesEnumValues[v]
	return ok
}

// NewComputerSystemV1220PowerRestorePolicyTypesFromValue returns a pointer to a valid ComputerSystemV1220PowerRestorePolicyTypes
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewComputerSystemV1220PowerRestorePolicyTypesFromValue(v string) (ComputerSystemV1220PowerRestorePolicyTypes, error) {
	ev := ComputerSystemV1220PowerRestorePolicyTypes(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ComputerSystemV1220PowerRestorePolicyTypes: valid values are %v", v, AllowedComputerSystemV1220PowerRestorePolicyTypesEnumValues)
}

// AssertComputerSystemV1220PowerRestorePolicyTypesRequired checks if the required fields are not zero-ed
func AssertComputerSystemV1220PowerRestorePolicyTypesRequired(obj ComputerSystemV1220PowerRestorePolicyTypes) error {
	return nil
}

// AssertComputerSystemV1220PowerRestorePolicyTypesConstraints checks if the values respects the defined constraints
func AssertComputerSystemV1220PowerRestorePolicyTypesConstraints(obj ComputerSystemV1220PowerRestorePolicyTypes) error {
	return nil
}
