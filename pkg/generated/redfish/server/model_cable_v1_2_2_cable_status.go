// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"fmt"
)

type CableV122CableStatus string

// List of CableV122CableStatus
const (
	CABLEV122CABLESTATUS_NORMAL         CableV122CableStatus = "Normal"
	CABLEV122CABLESTATUS_DEGRADED       CableV122CableStatus = "Degraded"
	CABLEV122CABLESTATUS_FAILED         CableV122CableStatus = "Failed"
	CABLEV122CABLESTATUS_TESTING        CableV122CableStatus = "Testing"
	CABLEV122CABLESTATUS_DISABLED       CableV122CableStatus = "Disabled"
	CABLEV122CABLESTATUS_SET_BY_SERVICE CableV122CableStatus = "SetByService"
)

// AllowedCableV122CableStatusEnumValues is all the allowed values of CableV122CableStatus enum
var AllowedCableV122CableStatusEnumValues = []CableV122CableStatus{
	"Normal",
	"Degraded",
	"Failed",
	"Testing",
	"Disabled",
	"SetByService",
}

// validCableV122CableStatusEnumValue provides a map of CableV122CableStatuss for fast verification of use input
var validCableV122CableStatusEnumValues = map[CableV122CableStatus]struct{}{
	"Normal":       {},
	"Degraded":     {},
	"Failed":       {},
	"Testing":      {},
	"Disabled":     {},
	"SetByService": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CableV122CableStatus) IsValid() bool {
	_, ok := validCableV122CableStatusEnumValues[v]
	return ok
}

// NewCableV122CableStatusFromValue returns a pointer to a valid CableV122CableStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCableV122CableStatusFromValue(v string) (CableV122CableStatus, error) {
	ev := CableV122CableStatus(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for CableV122CableStatus: valid values are %v", v, AllowedCableV122CableStatusEnumValues)
}

// AssertCableV122CableStatusRequired checks if the required fields are not zero-ed
func AssertCableV122CableStatusRequired(obj CableV122CableStatus) error {
	return nil
}

// AssertCableV122CableStatusConstraints checks if the values respects the defined constraints
func AssertCableV122CableStatusConstraints(obj CableV122CableStatus) error {
	return nil
}
