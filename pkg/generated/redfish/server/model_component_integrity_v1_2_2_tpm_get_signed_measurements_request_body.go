// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

// ComponentIntegrityV122TpmGetSignedMeasurementsRequestBody - This action generates a TPM cryptographic signed statement over the given nonce and PCRs of the TPM for TPM 2.0 devices.
type ComponentIntegrityV122TpmGetSignedMeasurementsRequestBody struct {
	Certificate OdataV4IdRef `json:"Certificate"`

	// A set of bytes as a hex-encoded string that is signed with the measurements.  The value should be unique.
	Nonce string `json:"Nonce,omitempty" validate:"regexp=^[0-9a-fA-F]$"`

	// An object that identifies the PCRs to sign.
	PCRSelection string `json:"PCRSelection"`

	// The signing scheme to use for the TPM attestation key.
	Scheme string `json:"Scheme"`
}

// AssertComponentIntegrityV122TpmGetSignedMeasurementsRequestBodyRequired checks if the required fields are not zero-ed
func AssertComponentIntegrityV122TpmGetSignedMeasurementsRequestBodyRequired(obj ComponentIntegrityV122TpmGetSignedMeasurementsRequestBody) error {
	elements := map[string]interface{}{
		"Certificate":  obj.Certificate,
		"PCRSelection": obj.PCRSelection,
		"Scheme":       obj.Scheme,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertOdataV4IdRefRequired(obj.Certificate); err != nil {
		return err
	}
	return nil
}

// AssertComponentIntegrityV122TpmGetSignedMeasurementsRequestBodyConstraints checks if the values respects the defined constraints
func AssertComponentIntegrityV122TpmGetSignedMeasurementsRequestBodyConstraints(obj ComponentIntegrityV122TpmGetSignedMeasurementsRequestBody) error {
	if err := AssertOdataV4IdRefConstraints(obj.Certificate); err != nil {
		return err
	}
	return nil
}
