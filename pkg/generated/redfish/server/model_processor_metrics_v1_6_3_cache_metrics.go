// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2023.3
 */

package server

import (
	"errors"
)

// ProcessorMetricsV163CacheMetrics - The processor core metrics.
type ProcessorMetricsV163CacheMetrics struct {

	// The number of cache line misses in millions.
	CacheMiss *float32 `json:"CacheMiss,omitempty"`

	// The number of cache misses per instruction.
	CacheMissesPerInstruction *float32 `json:"CacheMissesPerInstruction,omitempty"`

	// The cache line hit ratio.
	HitRatio *float32 `json:"HitRatio,omitempty"`

	// The cache level.
	Level *string `json:"Level,omitempty"`

	// The total cache level occupancy in bytes.
	OccupancyBytes *int64 `json:"OccupancyBytes,omitempty"`

	// The total cache occupancy percentage.
	OccupancyPercent *float32 `json:"OccupancyPercent,omitempty"`
}

// AssertProcessorMetricsV163CacheMetricsRequired checks if the required fields are not zero-ed
func AssertProcessorMetricsV163CacheMetricsRequired(obj ProcessorMetricsV163CacheMetrics) error {
	return nil
}

// AssertProcessorMetricsV163CacheMetricsConstraints checks if the values respects the defined constraints
func AssertProcessorMetricsV163CacheMetricsConstraints(obj ProcessorMetricsV163CacheMetrics) error {
	if obj.OccupancyPercent != nil && *obj.OccupancyPercent < 0 {
		return &ParsingError{Param: "OccupancyPercent", Err: errors.New(errMsgMinValueConstraint)}
	}
	return nil
}
